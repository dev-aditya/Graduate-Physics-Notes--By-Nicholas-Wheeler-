(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    560183,      13428]
NotebookOptionsPosition[    539624,      12836]
NotebookOutlinePosition[    540093,      12854]
CellTagsIndexPosition[    540050,      12851]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"2", "-", "2"}]], "Input",
 CellChangeTimes->{{3.481724792944496*^9, 3.481724793144062*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.481724794023466*^9, 3.481893742994401*^9, 
  3.481926156658277*^9, 3.481979855971766*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a_", "\[CircleTimes]", "b_"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{"a", ",", "b"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["CompConj",
    FontColor->GrayLevel[0]], "[", "A_", "]"}], " ", ":=", " ", 
  RowBox[{"A", " ", "/.", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"Complex", "[", 
     RowBox[{"0", ",", "n_"}], "]"}], "->", 
    RowBox[{"-", 
     RowBox[{"Complex", "[", 
      RowBox[{"0", ",", "n"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Adj", "[", "x_", "]"}], ":=", 
  RowBox[{"CompConj", "[", 
   RowBox[{"Transpose", "[", "x", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Brac", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Adj", "[", "a", "]"}], ".", "b"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalI]", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalO]", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0"},
      {"0", "0"}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.478609290059712*^9, 3.478609322665697*^9}, {
   3.478612129709359*^9, 3.478612168177602*^9}, {3.478721804012526*^9, 
   3.478721824033972*^9}, {3.4817248949540787`*^9, 3.481724979993658*^9}, 
   3.481725025957075*^9, {3.481810169071869*^9, 3.48181018673939*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.481725121299162*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Logic & Simulation of\n",
 StyleBox["Hardy's Nonlocality Argument",
  FontSize->36]
}], "Title",
 CellChangeTimes->{{3.481725191948455*^9, 3.481725211266563*^9}, {
  3.481725265516776*^9, 3.481725266087657*^9}},
 FontSize->24],

Cell["\<\
Nicholas Wheeler
Reed College Physics Department
1 May 2010\
\>", "Text",
 CellChangeTimes->{
  3.481725312176105*^9, {3.481726985738967*^9, 3.481726987383952*^9}},
 FontSize->10],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.481725334296444*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Lucian Hardy\>\"", ",", 
   "\"\<http://www.perimeterinstitute.ca/index.php?option=com_content&task=\
view&id=30&Itemid=72&pi=1078\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.478699467401794*^9, 3.4786994901602488`*^9}, 
   3.478699520399433*^9}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"\<\"Lucian Hardy\"\>", True->
    StyleBox["\<\"Lucian Hardy\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    BaselinePosition->Baseline,
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://www.perimeterinstitute.ca/index.php?option=com_content&task=\
view&id=30&Itemid=72&pi=1078"], None},
   ButtonNote->
    "http://www.perimeterinstitute.ca/index.php?option=com_content&task=view&\
id=30&Itemid=72&pi=1078"],
  Annotation[#, 
   "http://www.perimeterinstitute.ca/index.php?option=com_content&task=view&\
id=30&Itemid=72&pi=1078", "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.4817253425252447`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
CXln0UqNGplBq9CoZWIJn8OKf1NK8nYSPpenibflerfdVpgfKSuOxaKh3Egw
4PMajfrkeZzkmXqTdrPTstus3SkVbuCx7+Gy7mXS7yFT7kZj7k7L/EM2+g4Y
n4m0u0nMewmMjZn4uzKJd+MY68XKnTZHtseDsjmzDJYMtSnLFmAW1ppa9+eN
z1YfmWl4YqXvuYXm9w92fLDc9dxQ9ZGo9XCu/Upj+Z/62t4e6nmzt/WT0cEv
ZsY+nhn7cH785dH+yzVlR/LDs353r07VohCDt7fLxb1aZadSuk+nnrQbjoRd
l6tjT3RWPtlb/UhbyWqxd59LXanigKv7hFQAVagX5yp4Tg5FRUKR9mzL3rYR
tXsrGZmqETEtaonfYQh57W6H2WLWw7wMkwuDQYNeHYjxOGyVQg42DhlXXBAt
LcqP5oYCfjeYFQyMyakHtvhxeNk9Gvk6nWKLkHsPi34Hh3kPA8iQ70Kh79qb
8d9ZyDtQuDsx5DtwtHtRpHtTkXekoWG9XqzYbbJkWu1ZQMzuxnqCjPwyTVN3
ZGiqev9oRU+d//rh/ueWOt5e7npjvu16d/FKkfPxgaZnh7ueG2h7rqPhjf6O
D0b3fTy5/4ulqY8WJl4Y6LzV03qrr+3x9sYTsfC82zpm1g/pNMNmQ79ePWQ2
Dpn1R/ND91XGHqgvfHqo8fF9NUcr/f1eTZma5xfRoPyFJCyYpvNUAiMNm73p
7sxtG9K2bkzdsgGTvkvMJCn5DLdRm+Nz5QTcbpfNoNOCTJK30kMAKzCr+C0S
Bn00HIDsA1MHVm63M373nFDAiw/XEtCeVrEeWCllG/mcO+mU/2bS7gRWBOId
oKvU9P+blvl/s1B/ROL/iCLdnYm5e3fmHwEXnrpRpkw1mNLtToTbiwlHOQVF
iopKe2mpw+9T6ZV0DRv54HzvM0s9L863w4DzxP7aBztKrvfUPNnXcLOz5lZ7
3Ss9rW8OdL0/0vv53Ohns2NvDnW/OdL72fz4a0Nd1+vLT+T6l3yOCYd51G7u
NxuaFbJOvXop5L2/vuyBlrJboy3PTraca84bCBmKFGyfkA61LyhhlZmVuSoe
FD7E1nszd25CpOzYu30LJi2FhUeL6GQFl53rcYX9bo/ToteppFJx/LtQEt/q
A6xAPiA2nUYd8DqDPpfHbc8J+UKhAPRXEpk0ycqg0+uUGwzqTTr1FolwHZP2
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
8tndicLn9lb/9GD7k8Nzv3x46bfvPvj7Zzf/+c37v3vt8B8e3vgfd6/+1fnT
/2F96buLs9+cmfxiX++XBouf7el8vbvjTqb5RrrpVib5rNDx5YWJDzeXvrW1
9K2zax/fvfSlC6vnB3MjcR+4lHGbQae0jQDllAvr2ZU6KQ/JRQW7UF0GrCBZ
Ro1SKhRUl5fVVpSKuCyoPUISd1bKZanEArtWnQx4hrqzg/kOMgrdL0g1PzU9
NTrQ35PryMB6AStUhfXaYzpTKTTKaK2w2OusdkE4pI9FbLGAPeiy+uwmp1ED
LYIEMUOF2wGsIJhaiUgjFmqkIqmAy6urZtRAZTfpvDajy6hKBt2DHS1ffv54
b7LvrTOzHx2c+fnDi79+dv0f3773v99+9E9v3Pvdk1v/6/EtsOvvblz49fVL
v7iw86256a9NjP7xyODn+nueF7qf5jueF/Nfmh0DSh+eWfnaqfk/WJ36yvm1
B3MDix0J5L5sgyVh1TeZdQDKrZKoudX13CqLSgKgFGIuu7aSVVMh5NRqlVJ2
TXVFWSng4rKqFWKBXqUA08Q8NkwFBAT5MZ+O9TTHMfraWvq72uBaR4aLgwO9
nV1tsFjQdpQ5KJ/hDbSGcqOl1mzluBrkoaAh4DEi1siUDToMUAjI0EGyiUJm
VSlxUC/gKflcnAsn5dZW4U6pJUK3zdTodUMNulPR3dXFN+/eRJKaSfqfb0x8
+9rpv3h05Tfv3P/d2w/+57PD//vO4//71qP/8+zuP96//t/vXPu7g8s/O7P5
8fryt+emPpga/6OJ4W8sz35lbuIbq/N/enoJLvTZWN/hYOfdscJ2VxqS3uqx
pBymmFkbMaga6iUIPTBKwauyaiQKARtUB1BARsStA1Y1FeXlpSeBVV1VpUzI
wwDBhJw6Gg6Qkbjb0ZuOtzf6ulORgc7mvs6WzmyqJRULh3wv/zquFyWhRl+h
M9TYbeKA3+B2ap1WDdTPplMj0vEIIlEKgU4GuRiD8konlUhYdXIuRyMV47wM
tyUyHsfnsoNdLUHfYLb1i89fm+vrzrrNA2HXUib2+tr0Rwe7v37r/j+99+xf
3nkErP758e3fHuz/9vaVf3l8F+Xhry9f+NWZzR8tzHxtZPArUyPfWJr+1sr8
d7fXUSo+G+0/155aSkcWW2LwCRDzpNMUs+pCAEot1fJZopoK0F7JrzYqBXI+
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
    "], {{0, 134}, {100, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{100, 134},
  PlotRange->{{0, 100}, {0, 134}}]], "Input"],

Cell[CellGroupData[{

Cell["Introduction", "Subsection",
 CellChangeTimes->{{3.4817254209457827`*^9, 3.4817254240113773`*^9}}],

Cell[TextData[{
 "In 1993, Lucian Hardy (PhD 1992) devised a scheme for demonstrating quantum \
nonlocality (\"Nonlocality for two particles without inequalities for almost \
all entangled states,\" Phys. Rev. Letters ",
 StyleBox["71",
  FontWeight->"Bold"],
 ", 1665-1668,  (1993)) that Mermin has called \"the best version of Bell's \
theorem.\" Hardy's scheme resembles Bell's in that it concerns a composite \
pair of qubits in an entangled state (taken by Bohm/Bell to be the singlet \
state, but by Hardy to be an ",
 StyleBox["adjustably",
  FontSlant->"Italic"],
 " entangled state) and two players\[LongDash]Alice and Bob, each of whom is \
equipped to examine the state in either of two ways. It differs, however, \
from Bell's in that in proceeds without reference to any analog of \"Bell's \
inequality\" and does not seek statistical evidence of correlation: it places \
one in position to (in principle) deduce nonlocality from the evidence of a \
single measurement. In the latter respect it has much in common with the GHZ \
argument, but is simpler, both conceptually and experimentally (involves only \
two qubits, not three).\n\nHardy chose to present his argument as a \
diabolically clever but seemly unmotivated hat trick (the motivation emerges \
only retrospectively, at the end of the argument), and to employ a cumbersome \
notation. For these reasons, I on first reading found his argument difficult \
to understand. And the efforts of more recent popular \
expositors\[LongDash]see, for example, "
}], "Text",
 CellChangeTimes->{{3.4786095068651543`*^9, 3.478609619609046*^9}, {
  3.478609653175666*^9, 3.47860977745688*^9}, {3.478609808157707*^9, 
  3.478610016992984*^9}, {3.478610111771565*^9, 3.478610238886695*^9}, {
  3.478610378051881*^9, 3.4786104874375067`*^9}, {3.4786111369568872`*^9, 
  3.478611295563816*^9}, {3.478611411965135*^9, 3.478611425187893*^9}, {
  3.4786114910320387`*^9, 3.478611500375641*^9}, {3.478699650853387*^9, 
  3.478699659550798*^9}, {3.481725473397283*^9, 3.481725540368305*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Dan Styer's Account\>\"", ",", 
   "\"\<http://www.oberlin.edu/physics/dstyer/StrangeQM/Hardy.pdf\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.478611525934231*^9, 3.47861161418848*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"\<\"Dan Styer's Account\"\>", True->
    StyleBox["\<\"Dan Styer's Account\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    BaselinePosition->Baseline,
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://www.oberlin.edu/physics/dstyer/StrangeQM/Hardy.pdf"], None},
   ButtonNote->"http://www.oberlin.edu/physics/dstyer/StrangeQM/Hardy.pdf"],
  Annotation[#, "http://www.oberlin.edu/physics/dstyer/StrangeQM/Hardy.pdf", 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.481725655554785*^9}]
}, Open  ]],

Cell[TextData[{
 "\[LongDash]have (in my view) enjoyed only very limited success. In ",
 StyleBox["New Hardy.nb", "Subsection",
  FontSize->10],
 " I provide a \"computational version\" of the material I present on pages \
77-85 of Chapter 1 in my Quantum II Notes (2009), but that discussion can be \
criticized on the ground that it is so encumbered with distracting details \
(which I now recognize to be largely irrelevant) that it goes only a little \
way toward clarifying the simple essence of Hardy's argument.\n\nImplications \
of Hardy's argument were put to experimental test by Paul Kwiat and \
co-workers (A. G. White, D. F. V. James, P. H. Eberhard & P. G. Kwiat, \
\"Nonmaximally entangled states: production, characterization and \
utilization,\" Phys. Rev. Letters ",
 StyleBox["83",
  FontWeight->"Bold"],
 ", 3103-3107 (1999)). A simplified version of Kwiat's experiment was devised \
by Mark Beck and co-workers (J. A. Carlson, M. D. Olmstead & M. Beck, \
\"Quantum mysteries tested: an experiment implementing Hardy's test of local \
realism,\" AJP 74, 180-186 (2006)). Peter Wills has undertaken to reproduce \
Beck's experiment as a thesis project, and it was that effort that motivated \
me to revisit the subject, my new objective being to construct a computer \
simulation of such experiments. \n\nYesterday I devised the elementary \
mathematical lemma that exposes quite clearly the essence of Hardy's \
argument, and that enables one to proceed efficiently to the results upon \
which the projected simulation must be based. "
}], "Text",
 CellChangeTimes->{{3.478611650704686*^9, 3.478611754943605*^9}, {
  3.478611786181695*^9, 3.4786118303232822`*^9}, {3.481725720735498*^9, 
  3.48172575017159*^9}, {3.481725783439767*^9, 3.4817257845895653`*^9}, {
  3.4817262871671963`*^9, 3.481726309139216*^9}, {3.481726341782527*^9, 
  3.4817264671150293`*^9}, {3.48172650018147*^9, 3.481726510895528*^9}, {
  3.481726541941822*^9, 3.481726588661558*^9}, {3.481726655061591*^9, 
  3.4817266562162724`*^9}, {3.481726690127159*^9, 3.481726707015996*^9}, {
  3.481726738411008*^9, 3.481726810065186*^9}, {3.481726877374465*^9, 
  3.481726877600626*^9}, {3.4817270040753098`*^9, 3.481727007893694*^9}, {
  3.481727040841528*^9, 3.481727189115353*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.481727197987207*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["A mathematical lemma", "Subsection",
 CellChangeTimes->{{3.481727215488884*^9, 3.481727221029002*^9}}],

Cell[TextData[{
 "Let ",
 StyleBox["p", "Output"],
 " and ",
 StyleBox["q", "Output"],
 " be real numbers subject to the contstraint ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["p", "2"], "+", 
    SuperscriptBox["q", "2"]}], "=", "1"}]],
  CellChangeTimes->{{3.48172772180149*^9, 3.481727730826187*^9}}],
 ". Then"
}], "Text",
 CellChangeTimes->{{3.4817275723698597`*^9, 3.481727573148592*^9}, {
  3.4817276753950787`*^9, 3.4817276907193527`*^9}, {3.4817277372781153`*^9, 
  3.481727746867131*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["u", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"p"},
      {
       RowBox[{"q", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["u", "2"], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "q"}]},
      {
       RowBox[{"p", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.48172776455873*^9, 3.481727867801077*^9}}],

Cell["\<\
are orthogonal unit vectors. Nothing essential to the present discussion will \
be lost if (for notational simplicity) we assume our orthonormal 2-vectors to \
be real, of which we will need two pairs:\
\>", "Text",
 CellChangeTimes->{{3.481727959993024*^9, 3.4817279897622137`*^9}, {
  3.4817297718089952`*^9, 3.481729833481258*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["u", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"p"},
      {
       RowBox[{"q", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["u", "2"], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "q"}]},
      {
       RowBox[{"p", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["v", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"P"},
      {
       RowBox[{"Q", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["v", "2"], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "Q"}]},
      {
       RowBox[{"P", " "}]}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.48172984532906*^9, 3.481729891303166*^9}}],

Cell["Construct", "Text",
 CellChangeTimes->{{3.481729928183938*^9, 3.4817299299544697`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["uu", "1"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["u", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uu", "2"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["u", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uu", "3"], "=", 
   RowBox[{
    SubscriptBox["u", "2"], "\[CircleTimes]", 
    SubscriptBox["u", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["uu", "4"], "=", 
    RowBox[{
     SubscriptBox["u", "2"], "\[CircleTimes]", 
     SubscriptBox["u", "2"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "1"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "2"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "3"], "=", 
   RowBox[{
    SubscriptBox["u", "2"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["uv", "4"], "=", 
    RowBox[{
     SubscriptBox["u", "2"], "\[CircleTimes]", 
     SubscriptBox["v", "2"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vu", "1"], "=", 
   RowBox[{
    SubscriptBox["v", "1"], "\[CircleTimes]", 
    SubscriptBox["u", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vu", "2"], "=", 
   RowBox[{
    SubscriptBox["v", "1"], "\[CircleTimes]", 
    SubscriptBox["u", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vu", "3"], "=", 
   RowBox[{
    SubscriptBox["v", "2"], "\[CircleTimes]", 
    SubscriptBox["u", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["vu", "4"], "=", 
    RowBox[{
     SubscriptBox["v", "2"], "\[CircleTimes]", 
     SubscriptBox["u", "2"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vv", "1"], "=", 
   RowBox[{
    SubscriptBox["v", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vv", "2"], "=", 
   RowBox[{
    SubscriptBox["v", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vv", "3"], "=", 
   RowBox[{
    SubscriptBox["v", "2"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vv", "4"], "=", 
   RowBox[{
    SubscriptBox["v", "2"], "\[CircleTimes]", 
    SubscriptBox["v", "2"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.481729939438064*^9, 3.481730101477063*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.481730262486578*^9, 3.481730262973131*^9}}],

Cell[TextData[{
 StyleBox["LEMMA", "Subsection",
  FontSize->12],
 ": 4-vectors constructed in this way are orthonormal:"
}], "Text",
 CellChangeTimes->{{3.481730273634017*^9, 3.481730296819175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["P", "2"], "+", 
          SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", " ", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Brac", "[", 
        RowBox[{
         SubscriptBox["uv", "i"], ",", 
         SubscriptBox["uv", "j"]}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.48173031968675*^9, 3.481730448768717*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0"},
    {"0", "1", "0", "0"},
    {"0", "0", "1", "0"},
    {"0", "0", "0", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.48173045040488*^9}]
}, Open  ]],

Cell["Similarly (if redundantly)", "Text",
 CellChangeTimes->{{3.481730482015586*^9, 3.4817304921166553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["P", "2"], "+", 
          SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", " ", 
      RowBox[{"Simplify", "[", 
       RowBox[{"Brac", "[", 
        RowBox[{
         SubscriptBox["uu", "i"], ",", 
         SubscriptBox["uu", "j"]}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.4817305092747602`*^9, 3.481730511924891*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0"},
    {"0", "1", "0", "0"},
    {"0", "0", "1", "0"},
    {"0", "0", "0", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481730516340551*^9}]
}, Open  ]],

Cell["\<\
So each of those four quartets provides an orthonormal basis in 4-space. \
\>", "Text",
 CellChangeTimes->{{3.4817306235923967`*^9, 3.481730645730554*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.481730354728915*^9, 3.481730355972679*^9}}],

Cell["Let", "Text",
 CellChangeTimes->{{3.4817306718210278`*^9, 3.481730672381982*^9}}],

Cell[BoxData[
 RowBox[{"Z", "=", 
  RowBox[{"(", GridBox[{
     {
      SubscriptBox["z", "1"]},
     {
      SubscriptBox["z", "2"]},
     {
      RowBox[{
       SubscriptBox["z", "3"], "\[IndentingNewLine]", 
       SubscriptBox["z", "4"]}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.481730681012723*^9, 3.481730708116832*^9}}],

Cell[TextData[{
 "be an arbitrary 4-vector. Its coordinates with respect to (say) the ",
 StyleBox["uv", "Input"],
 "-basis are"
}], "Text",
 CellChangeTimes->{{3.4817307174808483`*^9, 3.481730774366107*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Brac", "[", 
     RowBox[{
      SubscriptBox["uv", "i"], ",", "Z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.4817307776561527`*^9, 3.481730836717907*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"p", " ", "P", " ", 
        SubscriptBox["z", "1"]}], "+", 
       RowBox[{"p", " ", "Q", " ", 
        SubscriptBox["z", "2"]}], "+", 
       RowBox[{"P", " ", "q", " ", 
        SubscriptBox["z", "3"]}], "+", 
       RowBox[{"q", " ", "Q", " ", 
        SubscriptBox["z", "4"]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "p"}], " ", "Q", " ", 
        SubscriptBox["z", "1"]}], "+", 
       RowBox[{"p", " ", "P", " ", 
        SubscriptBox["z", "2"]}], "-", 
       RowBox[{"q", " ", "Q", " ", 
        SubscriptBox["z", "3"]}], "+", 
       RowBox[{"P", " ", "q", " ", 
        SubscriptBox["z", "4"]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "P"}], " ", "q", " ", 
        SubscriptBox["z", "1"]}], "-", 
       RowBox[{"q", " ", "Q", " ", 
        SubscriptBox["z", "2"]}], "+", 
       RowBox[{"p", " ", "P", " ", 
        SubscriptBox["z", "3"]}], "+", 
       RowBox[{"p", " ", "Q", " ", 
        SubscriptBox["z", "4"]}]}]},
     {
      RowBox[{
       RowBox[{"q", " ", "Q", " ", 
        SubscriptBox["z", "1"]}], "-", 
       RowBox[{"P", " ", "q", " ", 
        SubscriptBox["z", "2"]}], "-", 
       RowBox[{"p", " ", "Q", " ", 
        SubscriptBox["z", "3"]}], "+", 
       RowBox[{"p", " ", "P", " ", 
        SubscriptBox["z", "4"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.481730829549717*^9, 3.4817308376281137`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["p", "2"], "+", 
       SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["P", "2"], "+", 
       SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "4"], 
      RowBox[{
       SubscriptBox["uv", "i"], 
       RowBox[{"Brac", "[", 
        RowBox[{
         SubscriptBox["uv", "i"], ",", "Z"}], "]"}]}]}], "\[Equal]", "Z"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4817308947177343`*^9, 3.481730953903335*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.481730928767205*^9, 3.481730957787405*^9}}]
}, Open  ]],

Cell["\<\
The 4-vector Z\[LongDash]which is typically entangled\[LongDash]is displayed \
here as a superposition of separable/unentangled states.\
\>", "Text",
 CellChangeTimes->{{3.481747486563342*^9, 3.48174755294401*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4817309757487993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hardy's application of the LEMMA", "Subsection",
 CellChangeTimes->{{3.4817310009087343`*^9, 3.481731016388989*^9}}],

Cell["With", "Text",
 CellChangeTimes->{{3.481731141737328*^9, 3.4817311470080233`*^9}}],

Cell[BoxData[{
 RowBox[{"\[Alpha]", "=", 
  RowBox[{"Cos", "[", "\[Xi]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]", "=", 
  RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}], "Output",
 CellChangeTimes->{{3.481731151958571*^9, 3.4817311708099527`*^9}}],

Cell["in mind, Hardy introduces the unit 4-vector", "Text",
 CellChangeTimes->{{3.481731176298177*^9, 3.4817311810808973`*^9}, {
  3.481731211866701*^9, 3.481731217573802*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPsi]", "=", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"1"},
         {"0"}
        }], ")"}], "\[CircleTimes]", 
      RowBox[{"(", GridBox[{
         {"1"},
         {"0"}
        }], ")"}]}]}], "-", 
    RowBox[{"\[Beta]", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0"},
         {"1"}
        }], ")"}], "\[CircleTimes]", 
      RowBox[{"(", GridBox[{
         {"0"},
         {"1"}
        }], ")"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.481731188407175*^9, 3.481731191361232*^9}, {
  3.4817312221482077`*^9, 3.481731289244999*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\[Alpha]"},
     {"0"},
     {"0"},
     {
      RowBox[{"-", "\[Beta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481731290759282*^9}]
}, Open  ]],

Cell[TextData[{
 "to describe a ",
 StyleBox["\[Xi]", "Output"],
 "-parameterized population of entangled states of a pair of qubits. The \
qubits are disentangled if \[Alpha]\[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", 
    StyleBox[" ", "Text"], 
    StyleBox["and", "Text"], 
    StyleBox[" ", "Text"], 
    StyleBox["maximally", "Text"], 
    StyleBox[" ", "Text"], 
    StyleBox["entangled", "Text"], 
    StyleBox[" ", "Text"], 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"one", " ", "of", " ", "the", " ", "Bell", " ", "states"}], 
      ")"}], "Text"], 
    StyleBox["if", "Text"], 
    StyleBox[" ", "Text"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\[Alpha] = \[Beta]. The \"almost all entangled states\" to which Hardy \
alludes in the title of his paper arise when neither of those special \
conditions is satisfied. \n\nHardy imposes two requirements to fix the design \
of the ",
 StyleBox["u", "Input"],
 " and ",
 StyleBox["v", "Input"],
 " vectors: "
}], "Text",
 CellChangeTimes->{{3.4817313038920794`*^9, 3.4817313663457527`*^9}, {
   3.481731402406999*^9, 3.481731405774934*^9}, {3.481732390816929*^9, 
   3.481732532429248*^9}, {3.481732568735179*^9, 3.48173261596448*^9}, 
   3.481732666702445*^9, {3.481732822864053*^9, 3.4817328830935163`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.481732935419199*^9, 3.481732935858588*^9}}],

Cell[TextData[{
 StyleBox["Hardy's first requiremen", "Subsection",
  FontSize->10],
 "t: The coordinates of ",
 StyleBox["\[CapitalPsi]", "Output"],
 " with respect to the ",
 StyleBox["uu", "Input"],
 " basis are"
}], "Text",
 CellChangeTimes->{{3.481732944233963*^9, 3.481733022977147*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Alpha]", "2"], "+", 
        SuperscriptBox["\[Beta]", 
         RowBox[{"2", "\.10"}]]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Brac", "[", 
       RowBox[{
        SubscriptBox["uu", "i"], ",", "\[CapitalPsi]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{
  3.481733088375053*^9, {3.4817331321548777`*^9, 3.481733208649197*^9}, {
   3.481733278011195*^9, 3.481733333675858*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], " ", "\[Alpha]"}], "-", 
       RowBox[{
        SuperscriptBox["q", "2"], " ", "\[Beta]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "p"}], " ", "q", " ", "\[Alpha]"}], "-", 
       RowBox[{"p", " ", "q", " ", "\[Beta]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "p"}], " ", "q", " ", "\[Alpha]"}], "-", 
       RowBox[{"p", " ", "q", " ", "\[Beta]"}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["q", "2"], " ", "\[Alpha]"}], "-", 
       RowBox[{
        SuperscriptBox["p", "2"], " ", "\[Beta]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.48173315783605*^9, {3.481733200742518*^9, 3.4817332099877768`*^9}, 
   3.481733300205984*^9, 3.481733337546887*^9}]
}, Open  ]],

Cell["Hardy requires the leading coordinate to vanish:", "Text",
 CellChangeTimes->{{3.481746855056217*^9, 3.481746880643073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "+", 
       SuperscriptBox["\[Beta]", 
        RowBox[{"2", "\.10"}]]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["p", "2"], "+", 
       SuperscriptBox["q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", " ", 
   RowBox[{"Brac", "[", 
    RowBox[{
     SubscriptBox["uu", "1"], ",", "\[CapitalPsi]"}], "]"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.481733395399563*^9, 3.481733422037554*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["p", "2"], " ", "\[Alpha]"}], "-", 
  RowBox[{
   SuperscriptBox["q", "2"], " ", "\[Beta]"}]}]], "Output",
 CellChangeTimes->{{3.481733411074831*^9, 3.481733423419298*^9}}]
}, Open  ]],

Cell[TextData[{
 "Normalized values of ",
 StyleBox["p", "Output"],
 " and ",
 StyleBox["q", "Output"],
 " are now determined to within arbitrary \[PlusMinus] signs. Setting"
}], "Text",
 CellChangeTimes->{{3.481746886436555*^9, 3.481746922247024*^9}}],

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{"+", 
   FractionBox[
    SqrtBox["\[Beta]"], 
    SqrtBox[
     RowBox[{
     "\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}]}], "\[IndentingNewLine]", 
 RowBox[{"q", "=", 
  RowBox[{"-", 
   FractionBox[
    SqrtBox["\[Alpha]"], 
    SqrtBox[
     RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}]}]}], "Output",
 CellChangeTimes->{{3.4817469502180443`*^9, 3.481747006436922*^9}}],

Cell["we have", "Text",
 CellChangeTimes->{{3.481747027081786*^9, 3.4817470282562103`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["u", "_"], "i"], "=", 
     RowBox[{
      SubscriptBox["u", "i"], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "\[Rule]", 
         FractionBox[
          SqrtBox["\[Beta]"], 
          SqrtBox[
           RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}], ",", 
        RowBox[{"q", "\[Rule]", 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["\[Alpha]"], 
           SqrtBox[
            RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}]}]}], "}"}]}]}],
     ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.481747054403521*^9, 3.481747188963586*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["uu", "_"], "i"], "=", 
    RowBox[{
     SubscriptBox["uu", "i"], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "\[Rule]", 
        FractionBox[
         SqrtBox["\[Beta]"], 
         SqrtBox[
          RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}], ",", 
       RowBox[{"q", "\[Rule]", 
        RowBox[{"-", 
         FractionBox[
          SqrtBox["\[Alpha]"], 
          SqrtBox[
           RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}]}]}], "}"}]}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4817472289862537`*^9, 3.481747287398234*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      FractionBox["\[Beta]", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Alpha]"], " ", 
         SqrtBox["\[Beta]"]}], 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Alpha]"], " ", 
         SqrtBox["\[Beta]"]}], 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      FractionBox["\[Alpha]", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      FractionBox[
       RowBox[{
        SqrtBox["\[Alpha]"], " ", 
        SqrtBox["\[Beta]"]}], 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}], ",", 
     RowBox[{"{", 
      FractionBox["\[Beta]", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", 
       FractionBox["\[Alpha]", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Alpha]"], " ", 
         SqrtBox["\[Beta]"]}], 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      FractionBox[
       RowBox[{
        SqrtBox["\[Alpha]"], " ", 
        SqrtBox["\[Beta]"]}], 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", 
       FractionBox["\[Alpha]", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], "}"}], ",", 
     RowBox[{"{", 
      FractionBox["\[Beta]", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Alpha]"], " ", 
         SqrtBox["\[Beta]"]}], 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      FractionBox["\[Alpha]", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}], ",", 
     RowBox[{"{", 
      FractionBox[
       RowBox[{
        SqrtBox["\[Alpha]"], " ", 
        SqrtBox["\[Beta]"]}], 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}], ",", 
     RowBox[{"{", 
      FractionBox[
       RowBox[{
        SqrtBox["\[Alpha]"], " ", 
        SqrtBox["\[Beta]"]}], 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}], ",", 
     RowBox[{"{", 
      FractionBox["\[Beta]", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}]], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.481747275030064*^9, 3.4817472917074957`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "+", 
       SuperscriptBox["\[Beta]", 
        RowBox[{"2", "\.10"}]]}], "\[Equal]", "1"}], "}"}], ",", 
    RowBox[{"Simplify", "[", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Brac", "[", 
        RowBox[{
         SubscriptBox[
          OverscriptBox["uu", "_"], "i"], ",", "\[CapitalPsi]"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{{3.481747341217181*^9, 3.481747383493533*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"0"},
     {
      RowBox[{
       SqrtBox["\[Alpha]"], " ", 
       SqrtBox["\[Beta]"]}]},
     {
      RowBox[{
       SqrtBox["\[Alpha]"], " ", 
       SqrtBox["\[Beta]"]}]},
     {
      RowBox[{"\[Alpha]", "-", "\[Beta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481747358362894*^9, 3.4817473905144367`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.481747593875121*^9, 3.481747594256109*^9}}],

Cell[TextData[{
 StyleBox["Hardy's second requiremen", "Subsection",
  FontSize->10],
 "t: The coordinates of ",
 StyleBox["\[CapitalPsi]", "Output"],
 " with respect to the ",
 StyleBox["uv", "Input"],
 "-basis are"
}], "Text",
 CellChangeTimes->{{3.481747600469556*^9, 3.481747643922163*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Alpha]", "2"], "+", 
         SuperscriptBox["\[Beta]", 
          RowBox[{"2", "\.10"}]]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["P", "2"], "+", 
         SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Brac", "[", 
        RowBox[{
         SubscriptBox["uv", "i"], ",", "\[CapitalPsi]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "\[Rule]", 
      FractionBox[
       SqrtBox["\[Beta]"], 
       SqrtBox[
        RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}], ",", 
     RowBox[{"q", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox["\[Alpha]"], 
        SqrtBox[
         RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}]}]}], "}"}]}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{{3.481747687119866*^9, 3.481747710166147*^9}, {
  3.481747768002308*^9, 3.481747851393314*^9}, {3.481747889868734*^9, 
  3.481747893269822*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{"P", " ", "\[Alpha]", " ", 
         SqrtBox["\[Beta]"]}], 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]], "+", 
       FractionBox[
        RowBox[{"Q", " ", 
         SqrtBox["\[Alpha]"], " ", "\[Beta]"}], 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Q", " ", "\[Alpha]", " ", 
          SqrtBox["\[Beta]"]}], 
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]}], "+", 
       FractionBox[
        RowBox[{"P", " ", 
         SqrtBox["\[Alpha]"], " ", "\[Beta]"}], 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"P", " ", 
         SuperscriptBox["\[Alpha]", 
          RowBox[{"3", "/", "2"}]]}], 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]], "-", 
       FractionBox[
        RowBox[{"Q", " ", 
         SuperscriptBox["\[Beta]", 
          RowBox[{"3", "/", "2"}]]}], 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Q", " ", 
          SuperscriptBox["\[Alpha]", 
           RowBox[{"3", "/", "2"}]]}], 
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]}], "-", 
       FractionBox[
        RowBox[{"P", " ", 
         SuperscriptBox["\[Beta]", 
          RowBox[{"3", "/", "2"}]]}], 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4817477209758987`*^9, 3.4817477706754837`*^9, {3.4817478556571817`*^9, 
   3.481747859976523*^9}, 3.481747897313809*^9}]
}, Open  ]],

Cell[TextData[{
 "Hardy requires the final coordinate to vanish. Normalized values of ",
 StyleBox["P", "Output"],
 " and ",
 StyleBox["Q", "Output"],
 " are now determined to within an arbitrary \[PlusMinus] signs. Setting"
}], "Text",
 CellChangeTimes->{{3.481747988792658*^9, 3.4817479999210243`*^9}, {
  3.481748314434813*^9, 3.481748314694771*^9}, {3.481748707720848*^9, 
  3.481748755501408*^9}}],

Cell[BoxData[{
 RowBox[{"P", "=", 
  FractionBox[
   SuperscriptBox["\[Alpha]", 
    RowBox[{"3", "/", "2"}]], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[Alpha]", "3"], "+", 
     SuperscriptBox["\[Beta]", "3"]}]]]}], "\[IndentingNewLine]", 
 RowBox[{"Q", "=", 
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["\[Beta]", 
     RowBox[{"3", "/", "2"}]], 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Alpha]", "3"], "+", 
      SuperscriptBox["\[Beta]", "3"]}]]]}]}]}], "Output",
 CellChangeTimes->{{3.48174883923778*^9, 3.481748880876132*^9}}],

Cell["we have", "Text",
 CellChangeTimes->{{3.481748979046772*^9, 3.481748980770015*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["v", "_"], "i"], "=", 
     RowBox[{
      SubscriptBox["v", "i"], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"P", "\[Rule]", 
         FractionBox[
          SuperscriptBox["\[Alpha]", 
           RowBox[{"3", "/", "2"}]], 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Alpha]", "3"], "+", 
            SuperscriptBox["\[Beta]", "3"]}]]]}], ",", 
        RowBox[{"Q", "\[Rule]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["\[Beta]", 
            RowBox[{"3", "/", "2"}]], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Alpha]", "3"], "+", 
             SuperscriptBox["\[Beta]", "3"]}]]]}]}]}], "}"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.481749037435327*^9, 3.481749073963703*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["uv", "_"], "i"], "=", 
     RowBox[{
      SubscriptBox["uv", "i"], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "\[Rule]", 
         FractionBox[
          SqrtBox["\[Beta]"], 
          SqrtBox[
           RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}], ",", 
        RowBox[{"q", "\[Rule]", 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["\[Alpha]"], 
           SqrtBox[
            RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}]}], ",", 
        RowBox[{"P", "\[Rule]", 
         FractionBox[
          SuperscriptBox["\[Alpha]", 
           RowBox[{"3", "/", "2"}]], 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Alpha]", "3"], "+", 
            SuperscriptBox["\[Beta]", "3"]}]]]}], ",", 
        RowBox[{"Q", "\[Rule]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["\[Beta]", 
            RowBox[{"3", "/", "2"}]], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Alpha]", "3"], "+", 
             SuperscriptBox["\[Beta]", "3"]}]]]}]}]}], "}"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.481749139915634*^9, 3.481749176173293*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "+", 
       SuperscriptBox["\[Beta]", 
        RowBox[{"2", "\.10"}]]}], "\[Equal]", "1"}], "}"}], ",", 
    RowBox[{"Simplify", "[", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Brac", "[", 
        RowBox[{
         SubscriptBox[
          OverscriptBox["uv", "_"], "i"], ",", "\[CapitalPsi]"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{3.4817492131853647`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox[
       RowBox[{
        SqrtBox["\[Alpha]"], " ", 
        SqrtBox["\[Beta]"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], "-", 
          SuperscriptBox["\[Beta]", "2"]}], ")"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Alpha]", "3"], "+", 
          SuperscriptBox["\[Beta]", "3"]}]]}]]},
     {
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Beta]", " ", 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Alpha]", "3"], "+", 
         SuperscriptBox["\[Beta]", "3"]}]]]},
     {
      FractionBox[
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Alpha]", "3"], "+", 
         SuperscriptBox["\[Beta]", "3"]}]], 
       SqrtBox[
        RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481749221101139*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4817494184214287`*^9, 3.4817494321016493`*^9}}],

Cell[TextData[{
 "We have now used up our freedom to assign values to ",
 StyleBox["p", "Output"],
 ", ",
 StyleBox["q", "Output"],
 ", ",
 StyleBox["P", "Output"],
 " and ",
 StyleBox["Q", "Output"],
 ". But when we look to the coordinates of ",
 StyleBox["\[CapitalPsi]", "Output"],
 " relative to the ",
 StyleBox["vu", "Input"],
 "-basis, we find that they are identical to the preceding ",
 StyleBox["uv", "Input"],
 "-coordinates, except for interchange of the middle two:  "
}], "Text",
 CellChangeTimes->{{3.4817494725586777`*^9, 3.481749499079422*^9}, {
  3.481749549740206*^9, 3.481749588128044*^9}, {3.4817496220359364`*^9, 
  3.4817496253957376`*^9}, {3.481749659696466*^9, 3.4817497323101797`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["vu", "_"], "i"], "=", 
     RowBox[{
      SubscriptBox["vu", "i"], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "\[Rule]", 
         FractionBox[
          SqrtBox["\[Beta]"], 
          SqrtBox[
           RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}], ",", 
        RowBox[{"q", "\[Rule]", 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["\[Alpha]"], 
           SqrtBox[
            RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}]}], ",", 
        RowBox[{"P", "\[Rule]", 
         FractionBox[
          SuperscriptBox["\[Alpha]", 
           RowBox[{"3", "/", "2"}]], 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Alpha]", "3"], "+", 
            SuperscriptBox["\[Beta]", "3"]}]]]}], ",", 
        RowBox[{"Q", "\[Rule]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["\[Beta]", 
            RowBox[{"3", "/", "2"}]], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Alpha]", "3"], "+", 
             SuperscriptBox["\[Beta]", "3"]}]]]}]}]}], "}"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4817493387974358`*^9, 3.481749347655987*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "+", 
       SuperscriptBox["\[Beta]", 
        RowBox[{"2", "\.10"}]]}], "\[Equal]", "1"}], "}"}], ",", 
    RowBox[{"Simplify", "[", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Brac", "[", 
        RowBox[{
         SubscriptBox[
          OverscriptBox["vu", "_"], "i"], ",", "\[CapitalPsi]"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{{3.481749372299572*^9, 3.48174937295374*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox[
       RowBox[{
        SqrtBox["\[Alpha]"], " ", 
        SqrtBox["\[Beta]"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], "-", 
          SuperscriptBox["\[Beta]", "2"]}], ")"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Alpha]", "3"], "+", 
          SuperscriptBox["\[Beta]", "3"]}]]}]]},
     {
      FractionBox[
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Alpha]", "3"], "+", 
         SuperscriptBox["\[Beta]", "3"]}]], 
       SqrtBox[
        RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]},
     {
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Beta]", " ", 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Alpha]", "3"], "+", 
         SuperscriptBox["\[Beta]", "3"]}]]]},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481749376997059*^9}]
}, Open  ]],

Cell["Note in particular that the final coordinate again vanishes.", "Text",
 CellChangeTimes->{{3.481749747910619*^9, 3.4817497601031847`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.481749769718605*^9, 3.4817497700956087`*^9}}],

Cell[TextData[{
 "Looking finally to the (enforced) \[CapitalPsi]-coordinates relative to the \
",
 StyleBox["vv", "Input"],
 "-basis, we have"
}], "Text",
 CellChangeTimes->{{3.481752268601728*^9, 3.481752339664412*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["vv", "_"], "i"], "=", 
     RowBox[{
      SubscriptBox["vv", "i"], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "\[Rule]", 
         FractionBox[
          SqrtBox["\[Beta]"], 
          SqrtBox[
           RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}], ",", 
        RowBox[{"q", "\[Rule]", 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["\[Alpha]"], 
           SqrtBox[
            RowBox[{"\[Alpha]", " ", "+", " ", "\[Beta]"}]]]}]}], ",", 
        RowBox[{"P", "\[Rule]", 
         FractionBox[
          SuperscriptBox["\[Alpha]", 
           RowBox[{"3", "/", "2"}]], 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Alpha]", "3"], "+", 
            SuperscriptBox["\[Beta]", "3"]}]]]}], ",", 
        RowBox[{"Q", "\[Rule]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["\[Beta]", 
            RowBox[{"3", "/", "2"}]], 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[Alpha]", "3"], "+", 
             SuperscriptBox["\[Beta]", "3"]}]]]}]}]}], "}"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.481752344771677*^9, 3.481752351969344*^9}}],

Cell["giving", "Text",
 CellChangeTimes->{{3.481752373281581*^9, 3.481752374395053*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "+", 
       SuperscriptBox["\[Beta]", "2"]}], "\[Equal]", "1"}], "}"}], ",", 
    RowBox[{"Simplify", "[", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Brac", "[", 
        RowBox[{
         SubscriptBox[
          OverscriptBox["vv", "_"], "i"], ",", "\[CapitalPsi]"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{
  3.4817523896106873`*^9, {3.4817527995035677`*^9, 3.4817528002416897`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], "+", "\[Beta]"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Alpha]", 
         RowBox[{"3", "/", "2"}]], " ", 
        SuperscriptBox["\[Beta]", 
         RowBox[{"3", "/", "2"}]]}], 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Alpha]", 
         RowBox[{"3", "/", "2"}]], " ", 
        SuperscriptBox["\[Beta]", 
         RowBox[{"3", "/", "2"}]]}], 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"\[Alpha]", " ", "\[Beta]"}], "+", 
          SuperscriptBox["\[Beta]", "2"]}], ")"}]}], 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481752394647558*^9, 3.481752450094932*^9, 
  3.481752804987131*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], "+", 
      SuperscriptBox["\[Beta]", "2"]}], "\[Equal]", "1"}], "}"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[Alpha]", " ", "\[Beta]"}], "+", 
         SuperscriptBox["\[Beta]", "2"]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "-", 
       RowBox[{"\[Alpha]", " ", "\[Beta]"}], "+", 
       SuperscriptBox["\[Beta]", "2"]}]], "\[Equal]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[Alpha]", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "-", "\[Beta]"}], ")"}], "\[Beta]"}], 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}]}], "]"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.481752506591791*^9, 3.481752521123268*^9}, {
  3.481752585244001*^9, 3.481752702027926*^9}, {3.4817527849668293`*^9, 
  3.481752789584584*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.481752512152473*^9, {3.48175263225176*^9, 3.481752645366377*^9}, 
   3.481752718997685*^9, 3.481752795076809*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["vv", "Input"],
 "-coordinates of ",
 StyleBox["\[CapitalPsi]", "Output"],
 " are relatively complicated, but do entail"
}], "Text",
 CellChangeTimes->{{3.481756783056622*^9, 3.4817568044918947`*^9}, {
  3.481756839327278*^9, 3.481756847768628*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], "+", 
      SuperscriptBox["\[Beta]", "2"]}], "\[Equal]", "1"}], "}"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "4"], 
      SuperscriptBox[
       RowBox[{"Brac", "[", 
        RowBox[{
         SubscriptBox[
          OverscriptBox["vv", "_"], "i"], ",", "\[CapitalPsi]"}], "]"}], 
       "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.481756872173918*^9, 3.481756901600197*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.481756909317919*^9}]
}, Open  ]],

Cell[TextData[{
 "as is required by the fact that ",
 StyleBox["\[CapitalPsi]", "Output"],
 " is a unit vector."
}], "Text",
 CellChangeTimes->{{3.4817569160042667`*^9, 3.481756934680221*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.481756945752005*^9}],

Cell["\<\
Fundamental to Hardy's argument---as will emerge\[LongDash]is the fact that \
the (square of) the 4th coordinate (which will acquire the interpretation of \
a probability) almost always does not vanish. Defining\
\>", "Text",
 CellChangeTimes->{{3.481756964490795*^9, 3.481757079869137*^9}, {
  3.481758607945119*^9, 3.4817586150431643`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[Alpha]", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "-", "\[Beta]"}], ")"}], "\[Beta]"}], 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}], ")"}], "2"], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"Cos", "[", "\[Xi]", "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"h", "[", "\[Xi]", "]"}]}], "Input",
 CellChangeTimes->{{3.481757087854075*^9, 3.481757174493894*^9}, 
   3.4817572209689074`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[Xi]", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Xi]", "]"}], "-", 
      RowBox[{"Sin", "[", "\[Xi]", "]"}]}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Xi]", "]"}], "2"]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Xi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.481757175397402*^9, 3.4817572223438787`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"h", "[", "\[Xi]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], "\[Pi]"}], ",", 
        RowBox[{
         FractionBox["1", "2"], "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.481757185731926*^9, 3.4817572034495897`*^9}, {
  3.481757239219969*^9, 3.4817573029779453`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVmgk0VO8bx21ZKmUviiQkIYlSNN/yq0SlLKHsayWENllbZClkKaSyZUtl
nzsiklKUUGRfKwwKM5YZWvzv/5w5Z87nXPd9n/d5vt97n2cOk3OO6104ODi4
yM+9/39THLS+Ny59xa375cbORNqRDiBeRqdqVIFyZ+PztrN253E0rtN5S+EC
pWCjXJ6jSz0s8oW/Yq6I8vrm8OjH9//BLo5gnxYbojQpfvZ5l64Fp4p8wTrJ
SEqH+d6dIvb/4VQ+R6q1UjZl8ObLZOnqfpxNM1Wf2lFNGekMXWo5aY5zcVk1
IQe6KJOKftuLas7BuyZAebnyAmWaMPznd9od5yuyfNo0wijs42MjoZqcuFja
WJG2S4zy10eq09l2Ny4/Z/O47U0H5033Y278w7iSs/6IpoEaeGKExjZ+bYN/
muG9f8cqwNcxP8r2mkdw3KONcXZfsVIh3rTasRpXa79rq20rgvDdNMOiYztx
reZyT/yOyxCl3ptT6qzEjYp0BRvwYLVZ1/O+9xIIKdOqr9H7AKmWjWVrrojg
ZukHz40HYiHtdafu14k6hD2fJhhGMlgfYr5V7iEvwvPCrcyNf2ADZ8HupR5c
iMhZu1hx/Cnko+OtguPjcTvtwMGbNtrY2LYg8ipjHnfikrok3U2wRU6Favli
AjH6Ca+gvRzqUT/ocWe5EVM7KOz9Ygpb4y6O7Pxgidiai9S2SgLbintPRf48
ifiKlH9ptf9B+xiVK+JlGu7uHD3Woq+InbcjKv1NmnG3bNvjJfVLsatx7cRq
Wy7cK63Td2toxm63AM/6HkkkPmfEaLbaYO9VvmePn6ogSUXn2ynzPdDTdcqY
O12OpLxQzfsd8tD789Ap6aA17udIdfzrHsO+8IzRJbQ0PEjbt77u+2XoNy7I
vShyQGpcQok1MxZHxQJ2xtYEIk2wWjdZPArHhNukbs4kIs1Ea93Noi849qDg
kn/KKaR1ywxZj1nBmFBYN1PPjfSfTO9lVp4w4xVtjpVZhUyh++Gnd9/FCWGa
ZNOYIDKPrzhr2tmJE5W42BP6Gpn3bxjhkgxOnuWe7mVyI0vOQ0wiPwdWn9Dh
KQNka+5JrV1XDttnvrdzuu4i12KEJsfZD0e3+rKlq3yQ+9A6WTBFHo5fLHaJ
Z8kid+BzwPyu03DatRjiahCBJ2cq9Jp9mHBemRr2484e5PlHNwb94IHLO4kq
eDXjWarWUPc7ZZw59fS/kb3lKDyvt9SwVgdelfX+3rfmURi/oym7VQhe/5wM
RD1fo7BE9R7Xtx/wxoXkCqXvKJyWXFfBEU364O+BM3MiKPKZ0tqs8w0+TY8l
hP0zUOyTYr+sOBwXFuVcl1XNo9R7gdqQ2oYr1Mly83MnUBo75a+U/xR+S7T4
xvcmobRoeE9I5VX4mf3S7GiMRinj80fd7k3wm6XetHMwAtU7d+C5RAACdNNt
kjr6QHhbLIuK2oCg/lf9CndOosyrxMHIzwvXdX9aP+ZsQVkMf66upyGuu2Wz
BmTTUVZgM6nsuAHXkxI4TfnYKJvgD+Q1aMP1WaF/qdnDeHHWJqlKcjduFF6e
z1mhhnJXvmbVsqW4qT6zfQ3/Z7y0ssby2SyEW0y9mxmioHoDV7RLmQfu7Ojr
PcXLjWpNTllj0s93LjW6WncyUb1vsVi3cwp3qNP69/t2odr1T5vo7wuIkfLU
uigYhOo8lnQNxQ8xyfH1fPrP8Fpj/LnM21DEpla2nq+6ixq91o/tzWmIf8kI
sjkij7eOOQIG9FYk7c7KbljWg7oTBMfclltIeykcNd78Hg1Z1ffqNnsjW/Gg
xK2tmmj27M0/67SAp4/S69LNPPDFNeaYeaUjCg3+dR405URreHV1K8MJxa8k
WWuTi9AaU2YR42eP4vcPls1nUNGaVDBxmNsaxc0Slo9DH6M1N3XNG3FzFA/8
vnjmDjda6wIvFe08iBKuoNen/37GV/5dKlHX1FCyz6Fx/Z5GfA0rSTogxEbJ
GytfWYFN+Hrn6RbO+zMo+ShCGUzUwtfEjNpKOQZKvtSsv3pXBl9zYqc1NcdQ
8k1w1eUrHvj63stIzrIXpRxGXz494EIbnyr3v7QalOpcmRX/lI620OxzNPVI
lD7bxi3YLIm26IvD7RofUFrcdc2mfS3aEvbbsLT4UfrC7+T+uDC0Zf04vGNn
CErfZfzJGt+Jtlo5JZqeP0oHEpUFmIlo5340SDNzA1WU51T2Zjrar94zpfnq
k7qrNNmtV4P2cOcP7X4hoF52MNu18ibaYzT3sgJqQA348+rQx7doT21R33GN
Amq4ZEn5bBraXwkvp93aDuqj8cP6cxS0/42spT2UB/X9COebFAo6/EJ20Kq5
QIivbOnb7IKO63+zRQTzQEjOKrj530XH7cti7lYmIGSajufVzaLj4RmG7Nxj
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
t/0PM6Y8Rw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.09016994097260828}}, {{
     0, 1.5707963267948966`}, {0., 0.09016994097260828}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}}, {}}]], "Output",
 CellChangeTimes->{{3.48175720724942*^9, 3.481757226986414*^9}, {
  3.4817572831103888`*^9, 3.4817573046648617`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Evidently ",
 StyleBox["h[\[Xi]]", "Output"],
 " vanishes at ",
 StyleBox["\[Xi]=0", "Output"],
 " and ",
 StyleBox["\[Xi]=\[Pi]/2", "Output"],
 ", where ",
 StyleBox["\[CapitalPsi][\[Xi]]", "Output"],
 " is ",
 StyleBox["dis",
  FontSlant->"Italic"],
 "entangled, and\[LongDash]curiously\[LongDash]at \[Xi]=\[Pi]/4, where "
}], "Text",
 CellChangeTimes->{{3.481804900712092*^9, 3.481804970417006*^9}, {
  3.481805005173274*^9, 3.481805098135816*^9}, {3.48180525357268*^9, 
  3.481805260166273*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalPsi]", "[", 
   RowBox[{"\[Pi]", "/", "4"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1"},
        {"0"}
       }], ")"}], "\[CircleTimes]", 
     RowBox[{"(", GridBox[{
        {"1"},
        {"0"}
       }], ")"}]}]}], "-", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"0"},
        {"1"}
       }], ")"}], "\[CircleTimes]", 
     RowBox[{"(", GridBox[{
        {"0"},
        {"1"}
       }], ")"}]}]}]}]}]], "Output",
 CellChangeTimes->{{3.481805109777803*^9, 3.481805150943491*^9}, {
  3.481805193527199*^9, 3.481805200545306*^9}}],

Cell[TextData[{
 "is ",
 StyleBox["maximally",
  FontSlant->"Italic"],
 " entangled (a Bell state). To locate the maxima of ",
 StyleBox["h[\[Xi]]", "Output"],
 " we proceed"
}], "Text",
 CellChangeTimes->{{3.4818052231992893`*^9, 3.481805238881209*^9}, {
  3.4818053284250803`*^9, 3.481805375781864*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hprime", "[", "\[Xi]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"h", "[", "\[Xi]", "]"}], ",", "\[Xi]"}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"hprime", "[", "\[Xi]", "]"}]}], "Input",
 CellChangeTimes->{{3.481757367302061*^9, 3.481757370732873*^9}, {
  3.481757412268346*^9, 3.481757455081192*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Xi]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "17"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Xi]"}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"6", " ", "\[Xi]"}], "]"}], "+", 
     RowBox[{"12", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "\[Xi]"}], "]"}]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Xi]"}], "]"}]}], ")"}], "3"]}]]], "Output",
 CellChangeTimes->{3.481757456081676*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "\[Xi]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "17"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Xi]"}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "\[Xi]"}], "]"}], "+", 
       RowBox[{"12", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "\[Xi]"}], "]"}]}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Xi]"}], "]"}]}], ")"}], "3"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", ".0001", ",", 
     RowBox[{
      RowBox[{"\[Pi]", "/", "2"}], "-", ".0001"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.48175790775467*^9, 3.4817579393779593`*^9}, 
   3.481758034155847*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0.0001, 1.5706963267948966`}, {-0.40915959354497455`, 
   0.40915952216839263`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.481757940744255*^9, 3.481758035266259*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"hprime", "[", "\[Xi]", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "0.43"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"hprime", "[", "\[Xi]", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "1.13"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4817573172035503`*^9, 3.481757346620348*^9}, {
  3.481757611818296*^9, 3.481757689806127*^9}, {3.4817579838040667`*^9, 
  3.481757996315604*^9}, {3.481758046590353*^9, 3.481758106278923*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Xi]", "\[Rule]", "0.43469234373109433`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.481757348801154*^9, {3.4817576728837757`*^9, 3.481757691890614*^9}, 
   3.4817579982072573`*^9, 3.481758077356669*^9, 3.4817581110782213`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Xi]", "\[Rule]", "1.1361039830638024`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.481757348801154*^9, {3.4817576728837757`*^9, 3.481757691890614*^9}, 
   3.4817579982072573`*^9, 3.481758077356669*^9, 3.4817581113291187`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "[", "\[Xi]", "]"}], "/.", 
  RowBox[{"\[Xi]", "\[Rule]", "0.434692"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", "\[Xi]", "]"}], "/.", 
  RowBox[{"\[Xi]", "\[Rule]", "1.1361"}]}]}], "Input",
 CellChangeTimes->{{3.4817577115849667`*^9, 3.4817577580239162`*^9}, {
  3.481757791443475*^9, 3.4817578044775133`*^9}, {3.4817578446084633`*^9, 
  3.481757844850215*^9}, {3.481758125257924*^9, 3.4817581381009293`*^9}}],

Cell[BoxData["0.09016994374929627`"], "Output",
 CellChangeTimes->{3.4817577613153257`*^9, 3.481757850056525*^9, 
  3.481758139222158*^9}],

Cell[BoxData["0.09016994372557262`"], "Output",
 CellChangeTimes->{3.4817577613153257`*^9, 3.481757850056525*^9, 
  3.481758139319295*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"h", "[", "\[Xi]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.4347", ",", 
        RowBox[{
         FractionBox["1", "4"], "\[Pi]"}], ",", "1.1361", ",", 
        RowBox[{
         FractionBox["1", "2"], "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", "0.0902", "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.4347", ",", "1.1361"}], "}"}], ",", 
      RowBox[{"{", "0.0902", "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Xi]\>\"", "}"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4817582145815563`*^9, 3.481758398217972*^9}, {
  3.481758450736999*^9, 3.481758517247344*^9}, {3.4817738495568867`*^9, 
  3.481773901716029*^9}, {3.4818054154329243`*^9, 3.481805427595705*^9}, {
  3.4818057646164627`*^9, 3.481805772168001*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1:eJwVmgk0VO8bx21ZKmUviiQkIYlSNN/yq0SlLKHsayWENllbZClkKaSyZUtl
nzsiklKUUGRfKwwKM5YZWvzv/5w5Z87nXPd9n/d5vt97n2cOk3OO6104ODi4
yM+9/39THLS+Ny59xa375cbORNqRDiBeRqdqVIFyZ+PztrN253E0rtN5S+EC
pWCjXJ6jSz0s8oW/Yq6I8vrm8OjH9//BLo5gnxYbojQpfvZ5l64Fp4p8wTrJ
SEqH+d6dIvb/4VQ+R6q1UjZl8ObLZOnqfpxNM1Wf2lFNGekMXWo5aY5zcVk1
IQe6KJOKftuLas7BuyZAebnyAmWaMPznd9od5yuyfNo0wijs42MjoZqcuFja
WJG2S4zy10eq09l2Ny4/Z/O47U0H5033Y278w7iSs/6IpoEaeGKExjZ+bYN/
muG9f8cqwNcxP8r2mkdw3KONcXZfsVIh3rTasRpXa79rq20rgvDdNMOiYztx
reZyT/yOyxCl3ptT6qzEjYp0BRvwYLVZ1/O+9xIIKdOqr9H7AKmWjWVrrojg
ZukHz40HYiHtdafu14k6hD2fJhhGMlgfYr5V7iEvwvPCrcyNf2ADZ8HupR5c
iMhZu1hx/Cnko+OtguPjcTvtwMGbNtrY2LYg8ipjHnfikrok3U2wRU6Favli
AjH6Ca+gvRzqUT/ocWe5EVM7KOz9Ygpb4y6O7Pxgidiai9S2SgLbintPRf48
ifiKlH9ptf9B+xiVK+JlGu7uHD3Woq+InbcjKv1NmnG3bNvjJfVLsatx7cRq
Wy7cK63Td2toxm63AM/6HkkkPmfEaLbaYO9VvmePn6ogSUXn2ynzPdDTdcqY
O12OpLxQzfsd8tD789Ap6aA17udIdfzrHsO+8IzRJbQ0PEjbt77u+2XoNy7I
vShyQGpcQok1MxZHxQJ2xtYEIk2wWjdZPArHhNukbs4kIs1Ea93Noi849qDg
kn/KKaR1ywxZj1nBmFBYN1PPjfSfTO9lVp4w4xVtjpVZhUyh++Gnd9/FCWGa
ZNOYIDKPrzhr2tmJE5W42BP6Gpn3bxjhkgxOnuWe7mVyI0vOQ0wiPwdWn9Dh
KQNka+5JrV1XDttnvrdzuu4i12KEJsfZD0e3+rKlq3yQ+9A6WTBFHo5fLHaJ
Z8kid+BzwPyu03DatRjiahCBJ2cq9Jp9mHBemRr2484e5PlHNwb94IHLO4kq
eDXjWarWUPc7ZZw59fS/kb3lKDyvt9SwVgdelfX+3rfmURi/oym7VQhe/5wM
RD1fo7BE9R7Xtx/wxoXkCqXvKJyWXFfBEU364O+BM3MiKPKZ0tqs8w0+TY8l
hP0zUOyTYr+sOBwXFuVcl1XNo9R7gdqQ2oYr1Mly83MnUBo75a+U/xR+S7T4
xvcmobRoeE9I5VX4mf3S7GiMRinj80fd7k3wm6XetHMwAtU7d+C5RAACdNNt
kjr6QHhbLIuK2oCg/lf9CndOosyrxMHIzwvXdX9aP+ZsQVkMf66upyGuu2Wz
BmTTUVZgM6nsuAHXkxI4TfnYKJvgD+Q1aMP1WaF/qdnDeHHWJqlKcjduFF6e
z1mhhnJXvmbVsqW4qT6zfQ3/Z7y0ssby2SyEW0y9mxmioHoDV7RLmQfu7Ojr
PcXLjWpNTllj0s93LjW6WncyUb1vsVi3cwp3qNP69/t2odr1T5vo7wuIkfLU
uigYhOo8lnQNxQ8xyfH1fPrP8Fpj/LnM21DEpla2nq+6ixq91o/tzWmIf8kI
sjkij7eOOQIG9FYk7c7KbljWg7oTBMfclltIeykcNd78Hg1Z1ffqNnsjW/Gg
xK2tmmj27M0/67SAp4/S69LNPPDFNeaYeaUjCg3+dR405URreHV1K8MJxa8k
WWuTi9AaU2YR42eP4vcPls1nUNGaVDBxmNsaxc0Slo9DH6M1N3XNG3FzFA/8
vnjmDjda6wIvFe08iBKuoNen/37GV/5dKlHX1FCyz6Fx/Z5GfA0rSTogxEbJ
GytfWYFN+Hrn6RbO+zMo+ShCGUzUwtfEjNpKOQZKvtSsv3pXBl9zYqc1NcdQ
8k1w1eUrHvj63stIzrIXpRxGXz494EIbnyr3v7QalOpcmRX/lI620OxzNPVI
lD7bxi3YLIm26IvD7RofUFrcdc2mfS3aEvbbsLT4UfrC7+T+uDC0Zf04vGNn
CErfZfzJGt+Jtlo5JZqeP0oHEpUFmIlo5340SDNzA1WU51T2Zjrar94zpfnq
k7qrNNmtV4P2cOcP7X4hoF52MNu18ibaYzT3sgJqQA348+rQx7doT21R33GN
Amq4ZEn5bBraXwkvp93aDuqj8cP6cxS0/42spT2UB/X9COebFAo6/EJ20Kq5
QIivbOnb7IKO63+zRQTzQEjOKrj530XH7cti7lYmIGSajufVzaLj4RmG7Nxj
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
t/0PM6Y8Rw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Xi]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  GridLines->{{0.4347, 1.1361}, {0.0902}},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.09016994097260828}}, {{
     0, 1.5707963267948966`}, {0., 0.09016994097260828}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{0.4347, 
      FormBox["0.4347`", TraditionalForm]}, {
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {1.1361, 
      FormBox["1.1361`", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}}, {{0.0902, 
      FormBox["0.0902`", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.481758232076664*^9, 3.4817582984517517`*^9, 3.481758353106338*^9, 
   3.481758406655374*^9, {3.481758502474951*^9, 3.481758518139789*^9}, 
   3.4817739064012423`*^9, 3.481805432631154*^9, 3.481805774671667*^9}]
}, Open  ]],

Cell["The intermediately entangled states", "Text",
 CellChangeTimes->{{3.4818057068092833`*^9, 3.481805721500317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[CapitalPsi]", "Hardy1"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "0.4347", "]"}], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"1"},
         {"0"}
        }], ")"}], "\[CircleTimes]", 
      RowBox[{"(", GridBox[{
         {"1"},
         {"0"}
        }], ")"}]}]}], "-", 
    RowBox[{
     RowBox[{"Sin", "[", "0.4347", "]"}], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0"},
         {"1"}
        }], ")"}], "\[CircleTimes]", 
      RowBox[{"(", GridBox[{
         {"0"},
         {"1"}
        }], ")"}]}]}]}], "//", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[CapitalPsi]", "Hardy2"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "1.1361", "]"}], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"1"},
         {"0"}
        }], ")"}], "\[CircleTimes]", 
      RowBox[{"(", GridBox[{
         {"1"},
         {"0"}
        }], ")"}]}]}], "-", 
    RowBox[{
     RowBox[{"Sin", "[", "1.1361", "]"}], 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0"},
         {"1"}
        }], ")"}], "\[CircleTimes]", 
      RowBox[{"(", GridBox[{
         {"0"},
         {"1"}
        }], ")"}]}]}]}], "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.481805581765629*^9, 3.481805672319092*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.9069964246086987`"},
     {"0"},
     {"0"},
     {
      RowBox[{"-", "0.42113832139457125`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4818056799191933`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.4211349898078344`"},
     {"0"},
     {"0"},
     {
      RowBox[{"-", "0.9069979715300113`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481805680000506*^9}]
}, Open  ]],

Cell["are called \"Hardy states.\"", "Text",
 CellChangeTimes->{{3.481805727677312*^9, 3.481805735333584*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4821578670123863`*^9}],

Cell[TextData[{
 StyleBox["INTERPOLATED REMARK",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 ": Peter Wills, in the thesis which he defended yesterday (5 May), uses a \
different argument (source not cited) to obtain those same results. The \
argument is rather pretty, so I reproduce it: from"
}], "Text",
 CellChangeTimes->{{3.482157878410776*^9, 3.482157902418833*^9}, {
  3.482157936302762*^9, 3.482158044503908*^9}, {3.482158095260619*^9, 
  3.4821581235269403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Alpha]", "2"], "+", 
     SuperscriptBox["\[Beta]", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Alpha]", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "-", "\[Beta]"}], ")"}], "\[Beta]"}], 
        RowBox[{"1", "-", 
         RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}], ")"}], "2"], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.482106426803887*^9, 3.482106651492443*^9}, 
   3.4821066856948767`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Alpha]", "2"], " ", 
   SuperscriptBox["\[Beta]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"\[Alpha]", " ", "\[Beta]"}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{
  3.482106465170848*^9, 3.482106543755974*^9, {3.482106575406364*^9, 
   3.4821065912502193`*^9}, 3.4821066241021843`*^9, {3.482106656967733*^9, 
   3.4821066869036007`*^9}}]
}, Open  ]],

Cell["we are led to define", "Text",
 CellChangeTimes->{{3.482158167859597*^9, 3.48215817152318*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", "x"}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], "2"]]}]], "Input",
 CellChangeTimes->{{3.482106696752727*^9, 3.48210675659544*^9}, {
  3.482158177218136*^9, 3.4821581919492073`*^9}}],

Cell["where", "Text",
 CellChangeTimes->{{3.4821582023501177`*^9, 3.482158203013888*^9}}],

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{
   RowBox[{"\[Alpha]", " ", "\[Beta]"}], "=", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Xi]", "]"}], 
    RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.482158206178214*^9, 3.4821582233708067`*^9}}],

Cell[TextData[{
 "ranges on ",
 StyleBox["[0, 0.5]", "Output"],
 " as ",
 StyleBox["\[Xi]", "Output"],
 " ranges on ",
 StyleBox["[0, \[Pi]/2]", "Output"],
 ".  To locate ",
 Cell[BoxData[
  SubscriptBox["x", "max"]],
  CellChangeTimes->{{3.482158336181047*^9, 3.482158338743237*^9}}],
 " we proceed"
}], "Text",
 CellChangeTimes->{{3.482158236220255*^9, 3.482158351724053*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "\[ScriptX]", "]"}], ",", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "\[ScriptX]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ScriptX]", ",", "0", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4821067749526033`*^9, 3.482106813885294*^9}, {
  3.4821119709342613`*^9, 3.482111978211378*^9}, {3.482112019422237*^9, 
  3.482112069673238*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwdl3c8Vv0bx5EWJcl4SKGk5WlIKclHRioU2TIqUklCGlYatowy0pCUkiiZ
FYqsdOO+zz0PUspKIZJCUr/v8/vrer1f55zv99rXdfYcP6ByUEhISERISHj6
f1LX6HMlu/fgTl3r/8vtUJVv91YwEIWmfPu+zVVziSy8mZq+DobyhU7yfzWI
TCugm0xgJX+z6PH9ISKvvBh1s4WbfFz1m4ACImMNIla/g5988C7Ls15ERofv
lrmNUPmdpve/zSMyamnhjPNI+idMgqv/EUnfhvIy7O2QOaC1NKA6EOkLjR3P
/xVHnsQBxcOdH5EZU9371WIJis78qeh5ro7skVRsYp7G86a8GwnKTOQJC7+f
WySHl+UDd4q+J6JAh9Vo0FGCqinVw7U7t6Ko335+mkcVahKL9mfJp+LpsUdz
tqj9QN0A+8TkVh5Kl8yXzBkXwRsvyXtWLYUof2xZsu/vBjQUUynHk0xRsaKO
qRnaiKaO9j+L4tmo/Jo93pegBEqGs1/szziq1vDft4/2ga04b84v91eojpNg
lH3JBGfl0s9O+a6o6eoazFogAa6alNYSUQ/Uqd52Lz5yCTyhnITjF7TwOuRw
V47eT/BaX/02qtiG+mrZohoNP/CvbDm4bXEP6usv31bWdAc/eYXfeL4S6pmz
YoI22IGfKtPnROmivkXkgKb2ZvDTemcqqFxB/devczL1RcDPPjN83v863ijU
eoRaxINfadrYf8seb3z9lA29H4Lf/3T2GN8HDBV2TM3jdgj0Dksn7o0HY6lG
v+gABYF+G7fLqxwM9SRTI/VKCIx2CxR+ngJDy3ZW7cPbEOxckz7MfQOGaVts
3f0DEFi+07AS7wHj9Kf4+rQeCNw/pn5f5gVG02Ri46UBCGIuJ/lmGILBdR6Z
1fAegtgmadt8SzCaK63MxJgQJEwr3+1kBkbnRemmyMcQJPmdFx2QBWN8RjIz
1BuCtE219pwlaFCdd5UKHIHgscfpaWXP0BCw/AbPYwIClrPNYVc2GkJWXXba
YAUBW3voIMMODaHrwnuEcyHgytCqZdfRELfFZzTVGQJBXcSPFks03LHYrlD7
CoL38w5sdluKBsaZkf3KERD0O1jK1Q6hUaHedEAwD/T0q93KUs1oVGrSP5Xh
CXqmTuav4hQ0qnK0/nrWgBZrvxYSU4/GVW2L5045BVpCeYGPlSMa9QfHNde0
gJaOCTReP4LGo3L3AmLSQauIfdhdLYbGMvc/07euBL3xfuPlf3horGxemvPw
CWjtVX9KQgzRWLfDwlxaE/TmolHFm3FoZK/MTP2kA1q3dENUeAIae4ZMVsTu
Am2YzenM6EWTlH+qWYsvaHPFVDnrtWiS+/JqWP8naItz+SfffkPTgr19KbmB
oPd0nHN8HICmZbq67SGhoK3TtcOK9qNJV6TbZ0kKaIdJkeDKf9F05JJGks9z
0Ae3f7OI9EST16Tjxre6oN0jOqWOV6HJzyvsnWEV6EM1/muTR9AUYt6iJscA
7bEhbo2REJqSZUKevmgD7fVHJ02qEk2VtxrfigmBPqNQrPzaGUy5/EMqd4xB
R54zqd64D0zFOjWJVGJv1P7iv7fvg6nS2jURpww6Wm94tOY3mOqiB/j+v0DH
jH10uRgNpp6tc5TFI9Dxu04KxJXBPDxp/U2YxCs5/qHvdj6YXlLS70bJfSlm
rPvHOsA8ocZl9PeDvjrzWZB7I5jB5haZzXWgUwPY2tsZYF6+a2b3xB/0DX1R
pRYrMEt3GFa6tIO+7XrVtUIIzArnKY+sGwlPXlTpSQKzxrfquskz0BnJi6ff
OQIm86aen9YV0HdeBDq1fQezY1Bn2Rwj0JnDvjm8PWD2TpmQmaoB+p5/l9Lr
OjAH/ikVnlhI+K9wi4EemKP6Wm97xkBnieiquoqBJZ68Lv5lDugH/be0devA
ksweDipKBZ293/r3UkWwZF7mH3lI4pfNLZhx9jJYSr2rDVKcQT/M3zPhaQeW
5uYVo15zQeeaK0om94O1affnLtc/hPNbBufsAkvX7QHb/gvoR3M1pwTHg7U9
Ti3HiOTzo/pn5fskwXL8uMhlwWnQeQqfWl94g7W/zWaN+QHCh3oWeK8Cy52O
Fr5I8i+vICFK9idY3k3f7n5WA/1Er3v8GNH35JslJxWlCIfGzzLYAFZAjf22
XZOEaz+42S4CK7S0sreIBzp/6+nfjuT8qOKR558qCQeWG3vOACsuf1mMArE/
vzBz4KcmWKlZCf+euwC6QNHFJUIKrLQ71X8KvQibrdZIfw3WnbRRVo894cB0
H5tKsHKTXHxN1xBmO225NAJWfnyiQYgi4bEH1KwvYJVEv5YumA66cEFCs/pu
sMrCfnV3DRPWk7b1awWr8vyqp3LvCe/T2D2b+Ks26EDkTpLfhcGfK55vA4tx
OsU+uJjwtU3ZLSpgsXwZK57cJlygMvsIAyzescmJzkuE6299ESX+bTmytkn2
DOG2At12Yt97t4O3drgS/uogxuCB1ely7XgQ8WfhZLLp+nCweh2a9PK0QReJ
uQovOwzWgI3w3A7i3yLpqqXbj4E1bKHZKUPiW6SYX8bvAGvU9HCR8W/Ci9aU
5bqD9dv4ZlhAL+Eluov1c0EJZRxeafPlP27++tAF1BQlkXlD+wirCsnHd4Ga
evPG7ygBYaWCdO2doGYorO9ebEL4n8GAGDFQYldZTeUkPkVziu9Nkvdnyxwp
sdlAWFR0/oMqUHMSp9wazCX6/2jhb/YFJSWZFhG1iHD3+oa/SaCk47S8F5H8
LeTIjjW7g5ITZ9uVSxAuD7LSvwZKPuroVmuSz4WZbgIrVVCK06cu/zpOOIp1
qpzwwtB0qUgS70LPMvWq+6BURDZOqHQRNlMb3B4EasmkZ6MVRXhawAnzk6CW
BU4r+rqNxLt9n3LcA1Arxm6nRZQTLn6VX0PsWf2d51WaRdhhxFJGApSGj5et
1X/5sbzaJHcXKM3BGRgg9Zz/c+b4WvL9pi86c5XPEg7/hRBRUDqH+OPPRwib
ZLwIIvbrdh/vsPQgPLu8lPsclMGHu4Xh1iTfo7eP+xJ/mNHi1v3qpF7cbjYn
loIyj64wtSL9I2/2u0f9B0BZ6p7Qf2EA+nGRtP8hfVB2996ujnMg9TjqHNjt
BcrVL2fmmihSv/ZbmCdngXJf5vz3mjTonC/Txxx6QB1uk/opTPIv5/SL+dFr
QXkZBHRwyPkPozpq9DxA+UvtLPfrIf0kcqTM3xxUYO2fgndkXjwQGqTWqoE6
61+QbUTqM+sko4x/BdTFjwopcuT8+zYKgX5joOLyvhx/TvS7O/Rr3TVPUJlm
0YsmyX234oJN3jwDlSWsK+9O7EvjNuo8IP7NLhqew3xKWKbLbFo6qDxF+9/p
TNJfEzxmrg4H9bxvuWAruS/V+e7pLRdAsSLfRIUTey87R7opKYDi6ASHfCX6
JhwvW96wEhRvaO0pWx/S74PTS791gGq1vea6LBJ0bPwZK3oDqG61IzqMEjI/
YrbQpZtB/aqZMTSHzINzHxuiZU1BTe6IiH7BAR3CFs+W5YH6y5q2xJPE9+wL
G5mkhWCLtk5xYJB+FRQr2jMYAbbE4GRtGOEzM7Je/n4A9uL5w9cnJMk8O96n
P6IH9pIMn/XZJN+Ord48d3Y12MvUBim7BNBH+85rvAkA+9+1A1NL5oA+4tC3
f9V6sLWMP3n7kHx3k5n3LnQYbJMTbUafZoG2+3HVmAmwzcYdPiST+WJ7sdA1
whFs87MtgYakf9hI5Nt+tgTbOkrw5I44aMv5ZtcG1MF2SWfPdxIDbSbRKfnS
D+wTDbVD3Bmg9Zwdz32wA/vm4rwbFaKgVZMNPJvngX2rfbuhTivoRcl7enZL
gZ1x/UN/aR5o5cvhpVe0wc6SktpSQvyveNbq3O2/YBcI+bU/yif7y3LbopOX
wX79TnvxTTJfRKpPvO7eD/b3lJoc/2cQtE1cSdpG/PFzj5PlaBwErUGvTC7c
A3t89o/fJ10hoMff7uq2AvtP2FIzYr+A8+lNZ24sODNPRA0ePghB/RWnsvVG
4CiZ715nKwVBofKrlftugWMys6VM8ygEYTJWp4KXgmP2LJdPkX30wsJTUtob
wDE/FDJ0TAaCkMVepQnR4FjXqi25VwGBv/K7t3V7wdl3zjdBbh4Enp9D2rWk
wDk5Ku42Xkb21SeahvwwcG53bZGoEIdg4TSoLHAH526i5PK9+yBQCL/XNUqe
39/aaTBaDIGcSNaF+lBwctKj/Ne4QDBn4ET8dAlwShz4nRmFEAjHjsXNJPo1
sL2ehe4Fv3Nc6IKhJDg/X94+sCMH/HtHVu39pAbOOHRV1DXBz0iH+HTyfKLi
7QeJl2R/Zxs9X7ASXKFXck5cCvyU5at8bD6CK1YdZ+80An74A9268yLgLqwP
MvfVBd/9Y9fxa+vA3cax071O3lfVOrrx82lwd+z5MRlsD75S7/i005ngmnAT
y106wJ+fsu1s6xi45jyWtio5T6pL/tTELXAd6G3r8+TBFzb1usT1AterTVO9
+gB473aZbPznPbgpPZIKfT/AuyJm2zfQAu61m68/pSWBd+m1jd6FRHBvWoYU
7V4HXkTI3K17q8DNqBw0K/ABL+h9YV9yNLi5N5jnzgyAd8jZY9EsW3CrLC71
TO0Gb7NT5AOZUXAHXszMV+KD276jQWG+OniGSVOMLYvBlTWvVNA9A56xYtgz
k0hwJecbPI26Ad6OezOWGziCO/NDVqL0GHi7SmaLrxMBZ9Jx+oWnLuDZNcuy
pHaB0yXdf6H9OHjHFFfYUL3gPIn1mOUbC15ypoX7LgVwjKImBj64gtdTlB62
PYTUkWbJx/xT4H1e43jYmQO2baPS+pCz4PXlypucVCV16DxX+94e8IbuJs7N
YIC91SfKVyMcvF9XwtMmpElfsLk0b8828CW8j5U8InOiR7ZjYmcp+BvUN/dK
UaAO7RtQFnSBH3a3eec7FTDzV4/dv3QG/EjrvM1VZI9NmzzB2lEDfsz0cPWs
YTCjy588LG4DP+GopoRvFZhukjY67iRuNzTiOTPcwJQVTz97xhz8J6+M7dc9
QNNp05RMKIP/9n3JoehV5D+E0Z7R2wWBhnxSqJY23ngbWSxeT/6juMLjrIWO
qM68nl7f0Az6vHdHLOMHnsUIvqZVfkCz6h4/Z9FUZIiefbLDVxnNNSJ3it/P
q7j7r3EEZ2ECWnw2WZ0PnlpRKTtpNOHpjVapjjznbKGKxlUe3zsT16C1Sio2
77pvBT/FQWCwTQdvlzFKLT69r2hNd3U4cf7I/wAiz1v/
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->NCache[{{0, 
      Rational[1, 2]}, {-0.41597827752231936`, 0.37037035164636295`}}, {{
     0, 0.5}, {-0.41597827752231936`, 0.37037035164636295`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.4821120625284033`*^9, 3.482112071097628*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], "[", "x", "]"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.482106898995955*^9, 3.4821069182012367`*^9}, {
  3.482158425176326*^9, 3.482158427423203*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SqrtBox["5"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.482106923877078*^9, 3.482158432286549*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "N"}]], "Input",
 CellChangeTimes->{{3.482158438447606*^9, 3.482158440159656*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.3819660112501051`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.618033988749895`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.482158442080955*^9}]
}, Open  ]],

Cell["The command", "Text",
 CellChangeTimes->{{3.482158523747664*^9, 3.482158525642907*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Xi]", "]"}], 
      RowBox[{"Sin", "[", "\[Xi]", "]"}]}], "==", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        SqrtBox["5"]}], ")"}]}]}], ",", "\[Xi]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.482112262484891*^9, 3.482112264794037*^9}, {
   3.4821122961843147`*^9, 3.482112317026186*^9}, {3.482112414271123*^9, 
   3.4821124442758636`*^9}, 3.482112482715797*^9, 3.4821585094930897`*^9}],

Cell["\<\
supplies four zeros, of which only the positive two are of interest. They are \
located at precisey the points obtained previously: \
\>", "Text",
 CellChangeTimes->{{3.482158535900297*^9, 3.482158639701606*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ArcCos", "[", 
     SqrtBox[
      RowBox[{
       FractionBox["1", "2"], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "13"}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["5"]}]}]]}]}]], "]"}], ",", 
    RowBox[{"ArcCos", "[", 
     SqrtBox[
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "13"}], "+", 
           RowBox[{"6", " ", 
            SqrtBox["5"]}]}]]}], ")"}]}]], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.481805491702505*^9, 3.481805541494019*^9}, {
   3.482112348423819*^9, 3.4821123522121983`*^9}, {3.4821125183759727`*^9, 
   3.482112554462515*^9}, {3.48211259042679*^9, 3.4821126320264482`*^9}, {
   3.482112662630631*^9, 3.482112673009667*^9}, 3.482158657724331*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.43469234373109383`", ",", "1.1361039830638027`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4821123537714653`*^9, 3.482112556348865*^9, {3.48211261047869*^9, 
   3.482112638161023*^9}, 3.482112681727528*^9, 3.482158665576601*^9}]
}, Open  ]],

Cell[TextData[{
 "Here ends the ",
 StyleBox["INTERPOLATED REMARK",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.48215872072768*^9, 3.482158744256049*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.482158770221512*^9}],

Cell["\<\
So much for the mathematical underpinnings of Hardy's argument. I turn now to \
discussion of what this mathematics has to do with the foundations of quantum \
mechanics\[LongDash]specifically, the quantum mechanics of photons. I preface \
that discussion with a review of some aspects of the classical physics of \
(100% polarized monochromatic) light beams.\
\>", "Text",
 CellChangeTimes->{{3.481805825004994*^9, 3.48180583970308*^9}, {
  3.481806741481428*^9, 3.4818068587953653`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4818068636579027`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classical light beams and polarizers", "Subsection",
 CellChangeTimes->{{3.481806893567814*^9, 3.481806909280118*^9}}],

Cell[TextData[{
 StyleBox["REMARK: Here I borrow from the review of Jones Calculus that \
appears in ",
  FontSize->10],
 StyleBox["Quantum Eraser.nb ", "Subsection",
  FontSize->10],
 StyleBox["(7 April 2010), where I was borrowing from the discussion that \
appears on pages 27-37 in my \"Ellipsometry: Stokes' parameters & related \
constructs in optics & classical/quantum mechanics\" (1999).",
  FontSize->10]
}], "Text",
 CellChangeTimes->{{3.480699106125724*^9, 3.480699229170147*^9}, {
  3.4806992679023447`*^9, 3.4806993177941027`*^9}}],

Cell["\<\
Erect an orthogonal frame in the plane normal to an on-rushing monochromatic \
optical planewave, and write\
\>", "Text",
 CellChangeTimes->{{3.47966357194285*^9, 3.479663641051075*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[ScriptCapitalE]", "1"], 
  RowBox[{"Cos", "[", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "t"}], "+", 
    SubscriptBox["\[Delta]", "1"]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalE]", "2"], 
  RowBox[{"Cos", "[", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "t"}], "+", 
    SubscriptBox["\[Delta]", "2"]}], "]"}]}]}], "Output",
 CellChangeTimes->{{3.479663658801448*^9, 3.479663693523703*^9}}],

Cell[TextData[{
 "to describe the motion of the (transverse) ",
 StyleBox["E",
  FontWeight->"Bold"],
 "-field. With R. Clark Jones, fold that information into design of a \"Jones \
vector\"\[LongDash]a complex 2-vector"
}], "Text",
 CellChangeTimes->{{3.479663740253594*^9, 3.479663775378343*^9}, {
  3.4796639790106564`*^9, 3.479664007293285*^9}, {3.480769674964383*^9, 
  3.4807696879204683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SubscriptBox["\[ScriptCapitalE]", "1"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Delta]", "1"]}]]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptCapitalE]", "2"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Delta]", "2"]}]]}]}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.4796638070785027`*^9, 3.479663839591049*^9, {3.479663886420521*^9, 
   3.479663939878439*^9}, 3.481807294223425*^9}],

Cell["The time-dependent field can then be described", "Text",
 CellChangeTimes->{{3.47966403649105*^9, 3.479664058137691*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalW]", "[", "t_", "]"}], ":=", 
  RowBox[{"J", "*", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
    "\[ImaginaryI]", " ", "\[Omega]", " ", 
     "t"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalW]", "[", "t", "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.479664071039517*^9, 3.479664096264254*^9}, {
   3.480699434817708*^9, 3.480699435325879*^9}, 3.481807338566854*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Delta]", "1"]}]}]], " ", 
       SubscriptBox["\[ScriptCapitalE]", "1"]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Delta]", "2"]}]}]], " ", 
       SubscriptBox["\[ScriptCapitalE]", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481807356896509*^9}]
}, Open  ]],

Cell["\<\
Introduce hermitian matrices by a convention that departs slightly from \
Pauli's\
\>", "Text",
 CellChangeTimes->{{3.479664167875572*^9, 3.4796642109206*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "0"], "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "2"], "=", 
   RowBox[{"(", GridBox[{
      {"0", "1"},
      {"1", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "3"], "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"-", "\[ImaginaryI]"}]},
      {"\[ImaginaryI]", "0"}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.479664223612998*^9, 3.47966432673282*^9}}],

Cell["Then these simple quadratic constructs ", "Text",
 CellChangeTimes->{{3.47966494963059*^9, 3.47966496457907*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Adj", "[", "J", "]"}], ".", 
     SubscriptBox["\[DoubleStruckS]", "0"], ".", "J"}], ")"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
  "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Adj", "[", "J", "]"}], ".", 
     SubscriptBox["\[DoubleStruckS]", "1"], ".", "J"}], ")"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
  "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Adj", "[", "J", "]"}], ".", 
       SubscriptBox["\[DoubleStruckS]", "2"], ".", "J"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/.", 
   RowBox[{
    SubscriptBox["\[Delta]", "2"], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Delta]", "1"], "+", "\[Delta]"}]}]}], "//", 
  "ExpToTrig"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Adj", "[", "J", "]"}], ".", 
       SubscriptBox["\[DoubleStruckS]", "3"], ".", "J"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/.", 
   RowBox[{
    SubscriptBox["\[Delta]", "2"], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Delta]", "1"], "+", "\[Delta]"}]}]}], "//", 
  "ExpToTrig"}]}], "Input",
 CellChangeTimes->{{3.479664358612536*^9, 3.47966447565102*^9}, {
  3.479664724865562*^9, 3.479664772505107*^9}, {3.4796648134115047`*^9, 
  3.479664829259178*^9}, {3.479664867099044*^9, 3.479664924216386*^9}, {
  3.480732537988297*^9, 3.480732557714717*^9}, {3.48180747380151*^9, 
  3.481807498618187*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
  SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]], "Output",
 CellChangeTimes->{3.481807466827508*^9, 3.481807503969946*^9}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "-", 
  SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]], "Output",
 CellChangeTimes->{3.481807466827508*^9, 3.481807503990856*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Cos", "[", "\[Delta]", "]"}], " ", 
  SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
  SubscriptBox["\[ScriptCapitalE]", "2"]}]], "Output",
 CellChangeTimes->{3.481807466827508*^9, 3.4818075040073423`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
  SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
  SubscriptBox["\[ScriptCapitalE]", "2"]}]], "Output",
 CellChangeTimes->{3.481807466827508*^9, 3.481807504027124*^9}]
}, Open  ]],

Cell["\<\
are recognized to be precisely the parameters (see \"Ellipsometry,\" equation \
(20) page 12) that Stokes introduced to describe the polarization of such a \
beam. They possess the great merit that\[LongDash]since interpretable as \
\"intensities\"\[LongDash]they are susceptible to direct photometric \
measurement.

In the following figure I have set\
\>", "Text",
 CellChangeTimes->{{3.479664978330023*^9, 3.47966503039115*^9}, {
  3.479665570938272*^9, 3.4796656070840683`*^9}, {3.479687863850758*^9, 
  3.479687892530356*^9}, {3.479815407742857*^9, 3.47981543288459*^9}, {
  3.480699673289414*^9, 3.4806997340332537`*^9}, {3.481807615269683*^9, 
  3.481807690214012*^9}, {3.481807724082106*^9, 3.4818077579856567`*^9}, {
  3.481807803142243*^9, 3.48180780412122*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[ScriptCapitalE]", "1"], "=", 
  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[ScriptCapitalE]", "2"], "=", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "Output",
 CellChangeTimes->{{3.480701236439701*^9, 3.4807012428407297`*^9}}],

Cell[TextData[{
 "so as to render ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
    SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}], "=", "1"}]],
  CellChangeTimes->{{3.4796656782625227`*^9, 3.479665678556204*^9}}],
 " automatic:"
}], "Text",
 CellChangeTimes->{{3.4796656619932117`*^9, 3.479665689495269*^9}, 
   3.479687899484556*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        RowBox[{"Cos", "[", " ", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"t", "+", "\[Delta]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Ellipse Traced by Flying E-vector\>\""}], 
     ",", " ", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Bold", ",", " ", "Red"}], "}"}]}], ",", " ", 
     RowBox[{"Ticks", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", 
     FractionBox[
      RowBox[{"-", "\[Pi]"}], "2"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.479665127964224*^9, 3.479665190067809*^9}, {
  3.479665233168467*^9, 3.479665252905772*^9}, {3.479665285261071*^9, 
  3.479665384296336*^9}, {3.479665438955451*^9, 3.4796654592300034`*^9}, {
  3.479665736583187*^9, 3.4796657402519407`*^9}, {3.479815756710391*^9, 
  3.479815770765389*^9}, {3.480699843665635*^9, 3.480699871112434*^9}, {
  3.4807000208431387`*^9, 3.480700068094112*^9}, {3.480700104568223*^9, 
  3.480700117924301*^9}, {3.480700160579628*^9, 3.4807001669413023`*^9}, {
  3.4807012518224897`*^9, 3.480701267309805*^9}, {3.480701508984838*^9, 
  3.480701511807537*^9}, {3.4807015691440477`*^9, 3.480701579522572*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Delta]$$ = 0., $CellContext`\[Theta]$$ = 
    0.669159235214626, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Rational[1, 2] Pi}, {
      Hold[$CellContext`\[Delta]$$], Rational[-1, 2] Pi, Rational[1, 2] Pi}}, 
    Typeset`size$$ = {540., {274., 284.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$2698$$ = 0, $CellContext`\[Delta]$2699$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Delta]$$ = 
        Rational[-1, 2] Pi, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$2698$$, 0], 
        Hold[$CellContext`\[Delta]$$, $CellContext`\[Delta]$2699$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{
        Cos[$CellContext`\[Theta]$$] Cos[$CellContext`t], 
         Sin[$CellContext`\[Theta]$$] 
         Cos[$CellContext`t + $CellContext`\[Delta]$$]}, {$CellContext`t, 0, 
         2 Pi}, PlotRange -> {{-1, 1}, {-1, 1}}, PlotLabel -> 
        "Ellipse Traced by Flying E-vector", LabelStyle -> {Bold, Red}, Ticks -> 
        False, PlotStyle -> Thick], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Rational[1, 2] 
         Pi}, {$CellContext`\[Delta]$$, Rational[-1, 2] Pi, Rational[1, 2] 
         Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{602., {359.03125, 366.96875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.481807830374076*^9, {3.4818079812738247`*^9, 3.4818079857326107`*^9}}]
}, Open  ]],

Cell[TextData[{
 "Beck restricts his attention\[LongDash]for reasons having to to do with \
experimental realities\[LongDash]to ",
 StyleBox["linearly polarized beams (photons)",
  FontVariations->{"Underline"->True}],
 ", which result when the relative phase \[Delta] = 0 :"
}], "Text",
 CellChangeTimes->{{3.480701326882629*^9, 3.480701364226595*^9}, {
  3.480701410930719*^9, 3.4807014246797647`*^9}, {3.482158825031938*^9, 
  3.482158848361911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        RowBox[{"Cos", "[", " ", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        RowBox[{"Cos", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Linear Polarization\>\""}], ",", 
     " ", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Bold", ",", " ", "Red"}], "}"}]}], ",", " ", 
     RowBox[{"Ticks", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4807014650376987`*^9, 3.4807014976785173`*^9}, {
  3.480701603409657*^9, 3.480701609786942*^9}, {3.480704555666543*^9, 
  3.480704591259513*^9}, {3.480705158485115*^9, 3.4807051639904203`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0.9801769079200154, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Rational[1, 2] Pi}}, 
    Typeset`size$$ = {540., {274., 284.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$4916$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$4916$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{
        Cos[$CellContext`\[Theta]$$] Cos[$CellContext`t], 
         Sin[$CellContext`\[Theta]$$] Cos[$CellContext`t]}, {$CellContext`t, 
         0, 2 Pi}, PlotRange -> {{-1, 1}, {-1, 1}}, PlotLabel -> 
        "Linear Polarization", LabelStyle -> {Bold, Red}, Ticks -> False, 
        PlotStyle -> Thick], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Rational[1, 2] Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{602., {339.03125, 346.96875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.4818080368659782`*^9}]
}, Open  ]],

Cell["\<\
The Stokes parameters of such beams assume the especially simple form\
\>", "Text",
 CellChangeTimes->{{3.480705201659254*^9, 3.4807052193114767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Adj", "[", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}]},
          {
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}
         }], "\[NoBreak]", ")"}], "]"}], ".", 
      SubscriptBox["\[DoubleStruckS]", "0"], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"Cos", "[", "\[Theta]", "]"}]},
         {
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}
        }], "\[NoBreak]", ")"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "//", "TrigReduce"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Adj", "[", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}]},
          {
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}
         }], "\[NoBreak]", ")"}], "]"}], ".", 
      SubscriptBox["\[DoubleStruckS]", "1"], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"Cos", "[", "\[Theta]", "]"}]},
         {
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}
        }], "\[NoBreak]", ")"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "//", "TrigReduce"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Adj", "[", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}]},
          {
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}
         }], "\[NoBreak]", ")"}], "]"}], ".", 
      SubscriptBox["\[DoubleStruckS]", "2"], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"Cos", "[", "\[Theta]", "]"}]},
         {
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}
        }], "\[NoBreak]", ")"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "//", "TrigReduce"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Adj", "[", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"Cos", "[", "\[Theta]", "]"}]},
         {
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}
        }], "\[NoBreak]", ")"}], "]"}], ".", 
     SubscriptBox["\[DoubleStruckS]", "3"], ".", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", "\[Theta]", "]"}]},
        {
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}
       }], "\[NoBreak]", ")"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.479664358612536*^9, 3.47966447565102*^9}, {
  3.479664724865562*^9, 3.479664772505107*^9}, {3.4796648134115047`*^9, 
  3.479664829259178*^9}, {3.479664867099044*^9, 3.479664924216386*^9}, {
  3.480701852763245*^9, 3.480701942625382*^9}, {3.4807045049170713`*^9, 
  3.480704511001131*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.48180812932226*^9}],

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{"2", " ", "\[Theta]"}], "]"}]], "Output",
 CellChangeTimes->{3.4818081294645*^9}],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"2", " ", "\[Theta]"}], "]"}]], "Output",
 CellChangeTimes->{3.481808129476058*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.481808129496773*^9}]
}, Open  ]],

Cell[TextData[{
 "Obviously orthogonal to ",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Theta]", "]"}]},
     {
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}
    }], "\[NoBreak]", ")"}]],
  CellChangeTimes->{{3.479664358612536*^9, 3.47966447565102*^9}, {
   3.479664724865562*^9, 3.479664772505107*^9}, {3.4796648134115047`*^9, 
   3.479664829259178*^9}, {3.479664867099044*^9, 3.479664924216386*^9}, {
   3.480701852763245*^9, 3.480701942625382*^9}, {3.4807045049170713`*^9, 
   3.480704511001131*^9}}],
 " is the vector ",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}
    }], "\[NoBreak]", ")"}]],
  CellChangeTimes->{{3.480704371466276*^9, 3.48070452064548*^9}}],
 ". They are seen to refer to beams that are in an obvious sense \"oppositely \
polarized\""
}], "Text",
 CellChangeTimes->{{3.480704679609611*^9, 3.4807047212331743`*^9}, {
  3.4807052964285173`*^9, 3.4807053223100986`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          RowBox[{"Cos", "[", " ", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          RowBox[{"Cos", "[", "t", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          RowBox[{"Cos", "[", " ", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          RowBox[{"Cos", "[", "t", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Opposite Linear Polarization\>\""}],
      ",", " ", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Bold", ",", " ", "Red"}], "}"}]}], ",", " ", 
     RowBox[{"Ticks", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4807014650376987`*^9, 3.4807014976785173`*^9}, {
  3.480701603409657*^9, 3.480701609786942*^9}, {3.480704555666543*^9, 
  3.480704591259513*^9}, {3.480705251314147*^9, 3.480705261991436*^9}, {
  3.480769912516094*^9, 3.480769924038424*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Rational[1, 2] Pi}}, 
    Typeset`size$$ = {540., {274., 284.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$5573$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$5573$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{
         Cos[$CellContext`\[Theta]$$] Cos[$CellContext`t], 
          Sin[$CellContext`\[Theta]$$] 
          Cos[$CellContext`t]}, {(-Sin[$CellContext`\[Theta]$$]) 
          Cos[$CellContext`t], Cos[$CellContext`\[Theta]$$] 
          Cos[$CellContext`t]}}, {$CellContext`t, 0, 2 Pi}, 
        PlotRange -> {{-1, 1}, {-1, 1}}, PlotLabel -> 
        "Opposite Linear Polarization", LabelStyle -> {Bold, Red}, Ticks -> 
        False, PlotStyle -> Thick], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Rational[1, 2] Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{602., {339.03125, 346.96875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.481808164037603*^9}]
}, Open  ]],

Cell[TextData[{
 "The adjustment ",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Theta]", "]"}]},
     {
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}
    }], "\[NoBreak]", ")"}]],
  CellChangeTimes->{{3.479664358612536*^9, 3.47966447565102*^9}, {
   3.479664724865562*^9, 3.479664772505107*^9}, {3.4796648134115047`*^9, 
   3.479664829259178*^9}, {3.479664867099044*^9, 3.479664924216386*^9}, {
   3.480701852763245*^9, 3.480701942625382*^9}, {3.4807045049170713`*^9, 
   3.480704511001131*^9}}],
 "\[LongRightArrow]",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}
    }], "\[NoBreak]", ")"}]],
  CellChangeTimes->{{3.480704371466276*^9, 3.48070452064548*^9}}],
 " causes the Stokes parameters ",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["S", "1"]},
     {
      SubscriptBox["S", "2"]},
     {
      SubscriptBox["S", "3"]}
    }], "\[NoBreak]", ")"}]],
  CellChangeTimes->{{3.480725328741096*^9, 3.4807253428463907`*^9}}],
 " to change sign, which is to say: it sends one point on the (equator of) \
the Poincar\[EAcute] sphere to go into the diametrically opposite point: "
}], "Text",
 CellChangeTimes->{{3.4807252169940023`*^9, 3.480725251350287*^9}, {
  3.480725282087528*^9, 3.480725309811452*^9}, {3.480725356298478*^9, 
  3.480725467633452*^9}, {3.481808228175335*^9, 3.4818082507386436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Adj", "[", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}
         }], "\[NoBreak]", ")"}], "]"}], ".", 
      SubscriptBox["\[DoubleStruckS]", "0"], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
         {
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}
        }], "\[NoBreak]", ")"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "//", "TrigReduce"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Adj", "[", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}
         }], "\[NoBreak]", ")"}], "]"}], ".", 
      SubscriptBox["\[DoubleStruckS]", "1"], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
         {
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}
        }], "\[NoBreak]", ")"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "//", "TrigReduce"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Adj", "[", 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}
         }], "\[NoBreak]", ")"}], "]"}], ".", 
      SubscriptBox["\[DoubleStruckS]", "2"], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
         {
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}
        }], "\[NoBreak]", ")"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "//", "TrigReduce"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Adj", "[", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
         {
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}
        }], "\[NoBreak]", ")"}], "]"}], ".", 
     SubscriptBox["\[DoubleStruckS]", "3"], ".", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
        {
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}
       }], "\[NoBreak]", ")"}]}], ")"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.480704371466276*^9, 3.48070452064548*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.4818082689164333`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.48180826898522*^9}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.481808269036387*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4818082690906153`*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.481809585400345*^9}],

Cell[TextData[{
 "Let ",
 StyleBox["x", "Output"],
 " and ",
 StyleBox["y", "Output"],
 " be real numbers that conform to the normalization condition",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "=", "1"}]}]],
  CellChangeTimes->{{3.481809634435748*^9, 3.481809640372738*^9}}],
 ". Then"
}], "Text",
 CellChangeTimes->{{3.481809612741609*^9, 3.481809631470133*^9}, {
  3.481809678631222*^9, 3.481809702125223*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"x"},
      {
       RowBox[{"y", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "y"}]},
      {
       RowBox[{"x", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]]}]}
     }], "\[NoBreak]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.481809714846836*^9, 3.481809782285837*^9}}],

Cell["\<\
are Jones vectors that refer to a pair of oppositely polarized beams:\
\>", "Text",
 CellChangeTimes->{{3.481809804494563*^9, 3.481809844168356*^9}, 
   3.481809912134945*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Adj", "[", "X", "]"}], ".", "Y"}], ")"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.481809848002461*^9, 3.481809886921996*^9}, {
  3.4818104395775948`*^9, 3.481810441192721*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.4818098945659018`*^9, 3.481809904009815*^9}}]
}, Open  ]],

Cell[TextData[{
 "(Stokes remarked that such beams ",
 StyleBox["do not interfere",
  FontVariations->{"Underline"->True}],
 ".) Construct the associated projection matrices"
}], "Text",
 CellChangeTimes->{{3.48180992077594*^9, 3.4818100048475027`*^9}, 
   3.481810295527342*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalX]", "=", 
   RowBox[{"X", ".", 
    RowBox[{"Adj", "[", "X", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalY]", "=", 
   RowBox[{"Y", ".", 
    RowBox[{"Adj", "[", "Y", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.481810010410214*^9, 3.481810057523518*^9}}],

Cell["\<\
which I demonstrate to be projective, orthogonal and complete:\
\>", "Text",
 CellChangeTimes->{{3.481810300723557*^9, 3.481810316979422*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalX]", ".", "\[DoubleStruckCapitalX]"}], 
      "-", "\[DoubleStruckCapitalX]"}], "\[Equal]", 
     "\[DoubleStruckCapitalO]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalY]", ".", "\[DoubleStruckCapitalY]"}], 
      "-", "\[DoubleStruckCapitalY]"}], "\[Equal]", 
     "\[DoubleStruckCapitalO]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"\[DoubleStruckCapitalX]", ".", "\[DoubleStruckCapitalY]"}], 
     "\[Equal]", "\[DoubleStruckCapitalO]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"\[DoubleStruckCapitalX]", "+", "\[DoubleStruckCapitalY]"}], 
     "\[Equal]", "\[DoubleStruckCapitalI]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4818100939792147`*^9, 3.481810159775794*^9}, {
  3.481810212933009*^9, 3.481810282008719*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481810097879252*^9, 3.481810147091721*^9, 
  3.4818102040223713`*^9, 3.481810284067727*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481810097879252*^9, 3.481810147091721*^9, 
  3.4818102040223713`*^9, 3.481810284222925*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481810097879252*^9, 3.481810147091721*^9, 
  3.4818102040223713`*^9, 3.4818102842290783`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481810097879252*^9, 3.481810147091721*^9, 
  3.4818102040223713`*^9, 3.4818102842885103`*^9}]
}, Open  ]],

Cell["If we define", "Text",
 CellChangeTimes->{{3.481812929240506*^9, 3.4818129323592253`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"jx", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Adj", "[", "X", "]"}], ".", "J"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{"jy", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Adj", "[", "Y", "]"}], ".", "J"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], "Input",
 CellChangeTimes->{{3.481810421159515*^9, 3.481810480565002*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     SubscriptBox["\[Delta]", "1"]}]], " ", "x", " ", 
   SubscriptBox["\[ScriptCapitalE]", "1"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SubscriptBox["\[Delta]", "2"]}]}]], " ", "y", " ", 
   SubscriptBox["\[ScriptCapitalE]", "2"]}]}]], "Output",
 CellChangeTimes->{3.481810496705409*^9, 3.481812896425088*^9, 
  3.48181294256674*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      SubscriptBox["\[Delta]", "1"]}]]}], " ", "y", " ", 
   SubscriptBox["\[ScriptCapitalE]", "1"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SubscriptBox["\[Delta]", "2"]}]}]], " ", "x", " ", 
   SubscriptBox["\[ScriptCapitalE]", "2"]}]}]], "Output",
 CellChangeTimes->{3.481810496705409*^9, 3.481812896425088*^9, 
  3.481812942588909*^9}]
}, Open  ]],

Cell["\<\
then we can display an arbitrary J-beam as a weighted superposition of X and \
Y-beams:\
\>", "Text",
 CellChangeTimes->{{3.481812948007113*^9, 3.481812981011778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"J", "==", 
     RowBox[{
      RowBox[{"jx", " ", "X"}], "+", 
      RowBox[{"jy", " ", "Y"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.481810554128758*^9, 3.481810557675449*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481810597904229*^9}]
}, Open  ]],

Cell["\<\
The intensities of the X and Y-beams are given by expressions\
\>", "Text",
 CellChangeTimes->{{3.481813015471279*^9, 3.481813075573064*^9}, 
   3.4818131347516823`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"CompConj", "[", "jx", "]"}], "jx"}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{
      RowBox[{"CompConj", "[", "jy", "]"}], "jy"}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.481810761039379*^9, {3.4818107968830147`*^9, 3.4818107974292727`*^9}, {
   3.481810831147403*^9, 3.481810904623231*^9}, {3.4818109346523542`*^9, 
   3.481810979323987*^9}, {3.4818112650597057`*^9, 3.481811287309222*^9}, {
   3.481813083875024*^9, 3.4818130895566797`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"]}], "+", 
  RowBox[{"2", " ", "x", " ", "y", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Phi]", "+", 
     SubscriptBox["\[Delta]", "1"], "-", 
     SubscriptBox["\[Delta]", "2"]}], "]"}], " ", 
   SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
   SubscriptBox["\[ScriptCapitalE]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["y", "2"], " ", 
   SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.48181076824403*^9, {3.48181087725353*^9, 3.481810906853259*^9}, 
   3.4818109809093113`*^9, 3.481811294507609*^9, 3.481813093598096*^9, 
   3.481813184850748*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["y", "2"], " ", 
   SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"]}], "-", 
  RowBox[{"2", " ", "x", " ", "y", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Phi]", "+", 
     SubscriptBox["\[Delta]", "1"], "-", 
     SubscriptBox["\[Delta]", "2"]}], "]"}], " ", 
   SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
   SubscriptBox["\[ScriptCapitalE]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.48181076824403*^9, {3.48181087725353*^9, 3.481810906853259*^9}, 
   3.4818109809093113`*^9, 3.481811294507609*^9, 3.481813093598096*^9, 
   3.481813184993025*^9}]
}, Open  ]],

Cell["that when added give back the intensity of the J-beam:", "Text",
 CellChangeTimes->{{3.481813151724682*^9, 3.4818131730776577`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"%", "+", "%%"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
  SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]], "Output",
 CellChangeTimes->{
  3.481813117104952*^9, {3.481813179029468*^9, 3.4818131876427317`*^9}}]
}, Open  ]],

Cell["\<\
If we assume that the J-beam is linearly polarized, and that so also are the \
X and Y-beams, then the preceding statements simplify markedly: \
\>", "Text",
 CellChangeTimes->{{3.481813274111415*^9, 3.481813368632259*^9}, 
   3.481817568231584*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"jx", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Adj", "[", "X", "]"}], ".", "J"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Delta]", "1"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["\[Delta]", "2"], "\[Rule]", "0"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", "0"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jy", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Adj", "[", "Y", "]"}], ".", "J"}], ")"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Delta]", "1"], "\[Rule]", "0"}], ",", 
      RowBox[{
       SubscriptBox["\[Delta]", "2"], "\[Rule]", "0"}], ",", 
      RowBox[{"\[Phi]", "\[Rule]", "0"}]}], "}"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"ComplexExpand", "[", 
       RowBox[{
        RowBox[{"CompConj", "[", "jx", "]"}], "jx"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Delta]", "1"], "\[Rule]", "0"}], ",", 
        RowBox[{
         SubscriptBox["\[Delta]", "2"], "\[Rule]", "0"}], ",", 
        RowBox[{"\[Phi]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"ComplexExpand", "[", 
       RowBox[{
        RowBox[{"CompConj", "[", "jy", "]"}], "jy"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Delta]", "1"], "\[Rule]", "0"}], ",", 
        RowBox[{
         SubscriptBox["\[Delta]", "2"], "\[Rule]", "0"}], ",", 
        RowBox[{"\[Phi]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"%", "+", "%%"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.481810421159515*^9, 3.481810480565002*^9}, {
  3.481813416889268*^9, 3.48181348547508*^9}, {3.481813536952755*^9, 
  3.481813569476521*^9}, {3.481813601530014*^9, 3.481813618751811*^9}, {
  3.481813689952922*^9, 3.4818137316894083`*^9}, {3.481813778655938*^9, 
  3.4818137792489033`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", 
   SubscriptBox["\[ScriptCapitalE]", "1"]}], "+", 
  RowBox[{"y", " ", 
   SubscriptBox["\[ScriptCapitalE]", "2"]}]}]], "Output",
 CellChangeTimes->{3.481813783981694*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "y"}], " ", 
   SubscriptBox["\[ScriptCapitalE]", "1"]}], "+", 
  RowBox[{"x", " ", 
   SubscriptBox["\[ScriptCapitalE]", "2"]}]}]], "Output",
 CellChangeTimes->{3.48181378399755*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"]}], "+", 
  RowBox[{"2", " ", "x", " ", "y", " ", 
   SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
   SubscriptBox["\[ScriptCapitalE]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["y", "2"], " ", 
   SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]}]], "Output",
 CellChangeTimes->{3.481813784007629*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["y", "2"], " ", 
   SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"]}], "-", 
  RowBox[{"2", " ", "x", " ", "y", " ", 
   SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
   SubscriptBox["\[ScriptCapitalE]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]}]], "Output",
 CellChangeTimes->{3.4818137841052923`*^9}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
  SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]], "Output",
 CellChangeTimes->{3.481813784116604*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.481817504775202*^9, 3.481817583152111*^9}],

Cell[TextData[{
 "The projection matrices ",
 StyleBox["\[DoubleStruckCapitalX]", "Output"],
 " and ",
 StyleBox["\[DoubleStruckCapitalY]", "Output"],
 " serve individually to describe the action of ",
 StyleBox["crossed polarizers", "Subsection",
  FontSize->10],
 ". When a J-beam is incident upon an X-polarizer, its X-component is \
transmitted and its Y-component is extinguished:"
}], "Text",
 CellChangeTimes->{{3.48181759446072*^9, 3.481817745947538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["J", "in"], "=", "J"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["J", "out"], "=", 
    RowBox[{"\[DoubleStruckCapitalX]", ".", "J"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["J", "in"], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["J", "out"], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.481817785420253*^9, 3.4818178286769953`*^9}, {
  3.481817958323176*^9, 3.481818039773479*^9}, {3.48181851845322*^9, 
  3.481818586445301*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Delta]", "1"]}]], " ", 
       SubscriptBox["\[ScriptCapitalE]", "1"]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["\[Delta]", "2"]}]], " ", 
       SubscriptBox["\[ScriptCapitalE]", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481817797135165*^9, 3.481817830191216*^9, 
  3.4818182534157248`*^9, 3.48181828877029*^9, 3.481818368523637*^9, 
  3.481818431346847*^9, 3.4818185927160883`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Delta]", "1"]}]], " ", 
        SuperscriptBox["x", "2"], " ", 
        SubscriptBox["\[ScriptCapitalE]", "1"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Delta]", "2"]}]}]], " ", "x", " ", "y", " ", 
        SubscriptBox["\[ScriptCapitalE]", "2"]}]}]},
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Delta]", "1"]}]}]], " ", "x", " ", "y", " ", 
        SubscriptBox["\[ScriptCapitalE]", "1"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Delta]", "2"]}]], " ", 
        SuperscriptBox["y", "2"], " ", 
        SubscriptBox["\[ScriptCapitalE]", "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481817797135165*^9, 3.481817830191216*^9, 
  3.4818182534157248`*^9, 3.48181828877029*^9, 3.481818368523637*^9, 
  3.481818431346847*^9, 3.481818592848682*^9}]
}, Open  ]],

Cell["The intensity attenuation factor is", "Text",
 CellChangeTimes->{{3.481818691769148*^9, 3.481818709825534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     FractionBox[
      RowBox[{"ComplexExpand", "[", 
       RowBox[{
        RowBox[{"Adj", "[", 
         SubscriptBox["J", "out"], "]"}], ".", 
        SubscriptBox["J", "out"]}], "]"}], 
      RowBox[{"ComplexExpand", "[", 
       RowBox[{
        RowBox[{"Adj", "[", 
         SubscriptBox["J", "in"], "]"}], ".", 
        SubscriptBox["J", "in"]}], "]"}]], "]"}], "\[LeftDoubleBracket]", "1",
     "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "/.", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}], "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.481818352501334*^9, 3.4818183633739233`*^9}, {
  3.481818404991791*^9, 3.481818424481351*^9}, {3.481818607781804*^9, 
  3.481818620449133*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"]}], "+", 
   RowBox[{"2", " ", "x", " ", "y", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Phi]", "+", 
      SubscriptBox["\[Delta]", "1"], "-", 
      SubscriptBox["\[Delta]", "2"]}], "]"}], " ", 
    SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
    SubscriptBox["\[ScriptCapitalE]", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["y", "2"], " ", 
    SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]}], 
  RowBox[{
   SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
   SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]]], "Output",
 CellChangeTimes->{3.481818291597114*^9, 3.481818373359449*^9, 
  3.481818435787818*^9, 3.481818625931632*^9}]
}, Open  ]],

Cell[TextData[{
 "which when the incident beam is ",
 StyleBox["linearly",
  FontSlant->"Italic"],
 " polarized and the polarizer is a ",
 StyleBox["linear",
  FontSlant->"Italic"],
 " polarizer (the case in which we will acquire primary interest) assumes the \
simple form. "
}], "Text",
 CellChangeTimes->{{3.4818187201059628`*^9, 3.481818871496789*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "1"], "\[Rule]", "0"}], ",", 
    RowBox[{
     SubscriptBox["\[Delta]", "2"], "\[Rule]", "0"}], ",", 
    RowBox[{"\[Phi]", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4818184517989264`*^9, 3.481818470047283*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"]}], "+", 
   RowBox[{"2", " ", "x", " ", "y", " ", 
    SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
    SubscriptBox["\[ScriptCapitalE]", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["y", "2"], " ", 
    SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]}], 
  RowBox[{
   SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
   SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}]]], "Output",
 CellChangeTimes->{3.481818472031434*^9, 3.481818636799766*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.481819280672624*^9, 3.481819529224082*^9}],

Cell[TextData[{
 StyleBox["REMARK", "Subsection",
  FontSize->12],
 ": The action of polarizers can be described"
}], "Text",
 CellChangeTimes->{{3.481819288053854*^9, 3.4818193174704037`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["S", "0"]},
       {
        SubscriptBox["S", "1"]},
       {
        SubscriptBox["S", "2"]},
       {
        SubscriptBox["S", "3"]}
      }], "\[NoBreak]", ")"}], "in"], "\[LongRightArrow]", 
   SubscriptBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["S", "0"]},
       {
        SubscriptBox["S", "1"]},
       {
        SubscriptBox["S", "2"]},
       {
        SubscriptBox["S", "3"]}
      }], "\[NoBreak]", ")"}], "out"]}], "=", 
  RowBox[{"\[DoubleStruckCapitalM]", ".", 
   SubscriptBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["S", "0"]},
       {
        SubscriptBox["S", "1"]},
       {
        SubscriptBox["S", "2"]},
       {
        SubscriptBox["S", "3"]}
      }], "\[NoBreak]", ")"}], "in"]}]}]], "Input",
 CellChangeTimes->{{3.4818193332800217`*^9, 3.481819418044656*^9}}],

Cell[TextData[{
 "where ",
 StyleBox["\[DoubleStruckCapitalM]", "Output"],
 " is a 4\[Cross]4 \"Mueller matrix.\" But I will refrain from pursuit of \
that elegantly useful topic: for detailed discussion, see \"Ellipsometry.\""
}], "Text",
 CellChangeTimes->{{3.4818194331460342`*^9, 3.4818195039533997`*^9}, {
  3.481822969236389*^9, 3.481823016551362*^9}, {3.482159222646222*^9, 
  3.4821592376031923`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.481819522230845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Photons and meters", "Subsection",
 CellChangeTimes->{{3.481819537231997*^9, 3.4818195571238403`*^9}, 
   3.481822164747595*^9}],

Cell["The Jones vector", "Text",
 CellChangeTimes->{{3.481828871108295*^9, 3.481828874502305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SubscriptBox["\[ScriptCapitalE]", "1"]},
      {
       RowBox[{
        SubscriptBox["\[ScriptCapitalE]", "2"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Delta]"}]]}]}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.481828881613392*^9, 3.481828890638949*^9}}],

Cell["\<\
\[LongDash]a complex unit vector if, as will be understood,\
\>", "Text",
 CellChangeTimes->{{3.4818289062577267`*^9, 3.481828922354899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
   SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}], "=", "1"}]], "Output",
 CellChangeTimes->{{3.481828947545288*^9, 3.481828947989595*^9}}],

Cell[TextData[{
 "\[LongDash]will be taken now to describe the ",
 StyleBox["quantum state of a photon", "Subsection",
  FontSize->10],
 ", of which the Stokes parameters continue as before to describe the \
polarization. The linearly polarized photons to which we will restrict our \
attention are described by ",
 StyleBox["real",
  FontSlant->"Italic"],
 " unit 2-vectors (",
 StyleBox["\[Delta]=0", "Output"],
 ").\n\n"
}], "Text",
 CellChangeTimes->{{3.4818289843296413`*^9, 3.481829052111088*^9}, {
  3.481829156256336*^9, 3.481829217438641*^9}, {3.481832497280951*^9, 
  3.481832497520946*^9}}],

Cell[TextData[{
 "It is with regard to the action of \"polarizers\" that the classical and \
quantum theories differ most markedly. And the differences comes to this: the \
action of a classical polarizer, as determined by a downstream photometer, is \
deterministic, while the action of a quantum polarizer\[LongDash]a \
prototypical \"meter\"\[LongDash]as determined by a downstream counter, is \
probabilistic. \n\n",
 StyleBox["Action of a classical polarizer:", "Subsection",
  FontSize->12],
 " Reverting to a notation introduced at the outset, let ",
 StyleBox["p", "Output"],
 " and ",
 StyleBox["q", "Output"],
 " be a normalized pair of real numbers (marking a point on the unit circle). \
Then "
}], "Text",
 CellChangeTimes->{{3.481839663313684*^9, 3.481839839493251*^9}, {
  3.4818398884977837`*^9, 3.4818399599674873`*^9}, {3.4821678148108807`*^9, 
  3.482167823463501*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["u", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"p"},
      {
       RowBox[{"q", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["u", "2"], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "q"}]},
      {
       RowBox[{"p", " "}]}
     }], ")"}]}], ";"}]}], "Input"],

Cell["are orthonormal, and their associated projectors", "Text",
 CellChangeTimes->{{3.481839984152905*^9, 3.481840004739048*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckU]", "1"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["u", "1"], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckU]", "2"], "=", 
   RowBox[{
    SubscriptBox["u", "2"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["u", "2"], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.481840009344968*^9, 3.481840059359795*^9}, {
  3.481854786708049*^9, 3.481854795496599*^9}}],

Cell[TextData[{
 "are orthogonal and complete. Suppose the Jones vector of a linearly \
polarized optical beam ",
 StyleBox["J", "Input"],
 " has been developed in the ",
 StyleBox["u", "Input"],
 "-basis:"
}], "Text",
 CellChangeTimes->{{3.481840081042797*^9, 3.4818400905464973`*^9}, {
  3.4818537346209993`*^9, 3.4818538207675533`*^9}, {3.481853882568233*^9, 
  3.481853887070459*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["J", "in"], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["j", "1"], 
     SubscriptBox["u", "1"]}], "+", 
    RowBox[{
     SubscriptBox["j", "2"], 
     SubscriptBox["u", "2"]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4818538254668913`*^9, 3.4818538718126707`*^9}, 
   3.4818539422638474`*^9, {3.4818540753434134`*^9, 3.481854091568351*^9}, 
   3.481856675400367*^9}],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  SubscriptBox["j", "1"]]],
 " and ",
 Cell[BoxData[
  SubscriptBox["j", "2"]],
  CellChangeTimes->{3.481853950677631*^9}],
 " are a normalized pair of real numbers. Presentation of the beam to a ",
 Cell[BoxData[
  SubscriptBox["\[DoubleStruckU]", "1"]],
  CellChangeTimes->{{3.481840009344968*^9, 3.481840059359795*^9}}],
 "-polarizer produces ",
 StyleBox["with certainty",
  FontSlant->"Italic"],
 " the beam"
}], "Text",
 CellChangeTimes->{{3.481853902246458*^9, 3.481853934042409*^9}, {
  3.4818539960205803`*^9, 3.481854055431394*^9}, {3.481854106402232*^9, 
  3.481854150962905*^9}, {3.481854817550124*^9, 3.4818548188182907`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["J", "out1"], "=", 
   RowBox[{
    SubscriptBox["j", "1"], 
    SubscriptBox["u", "1"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.481854171987495*^9, 3.481854172552269*^9}, 
   3.481854232163419*^9, 3.4818543026284847`*^9}],

Cell["which has intensity ", "Text",
 CellChangeTimes->{{3.481854238710393*^9, 3.481854260014575*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["p", "2"], "+", 
     SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Adj", "[", 
         SubscriptBox["J", "out1"], "]"}], ".", 
        SubscriptBox["J", "out1"]}], ")"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4818542756280127`*^9, 3.481854424969615*^9}}],

Cell[BoxData[
 SubsuperscriptBox["j", "1", "2"]], "Output",
 CellChangeTimes->{3.4818544273555613`*^9}]
}, Open  ]],

Cell[TextData[{
 "while presentation to a ",
 Cell[BoxData[
  SubscriptBox["\[DoubleStruckU]", "2"]],
  CellChangeTimes->{{3.481840009344968*^9, 3.481840059359795*^9}}],
 "-polarizer produces (with certainty)"
}], "Text",
 CellChangeTimes->{{3.481854444161221*^9, 3.481854486268553*^9}, {
  3.4818548248894157`*^9, 3.481854827345767*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["J", "out2"], "=", 
   RowBox[{
    SubscriptBox["j", "2"], 
    SubscriptBox["u", "2"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.481854509673607*^9, 3.481854516373392*^9}}],

Cell["which has intensity", "Text",
 CellChangeTimes->{{3.481854546401412*^9, 3.481854548958373*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["p", "2"], "+", 
     SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Adj", "[", 
         SubscriptBox["J", "out2"], "]"}], ".", 
        SubscriptBox["J", "out2"]}], ")"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.481854562983861*^9, 3.4818545658610973`*^9}}],

Cell[BoxData[
 SubsuperscriptBox["j", "2", "2"]], "Output",
 CellChangeTimes->{3.481854683434268*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.48185471741816*^9, 3.4818547176467857`*^9}}],

Cell[TextData[{
 StyleBox["Action of a quantum polarizer: ", "Subsection",
  FontSize->12],
 "Turning to the analogous quantum mechanical sitution, we begin by \
incorporating the \[DoubleStruckU]-matrices into the design of matrix that \
represents the action of a \"",
 StyleBox["\[DoubleStruckCapitalU]", "Output"],
 "-meter\""
}], "Text",
 CellChangeTimes->{{3.4818548794157677`*^9, 3.4818549886975203`*^9}, {
  3.482167860351467*^9, 3.482167871427814*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalU]", "=", 
   RowBox[{
    SubscriptBox["\[DoubleStruckU]", "1"], "-", 
    SubscriptBox["\[DoubleStruckU]", "2"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.481854995786166*^9, 3.48185501776219*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["p", "2"], "+", 
     SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Eigenvalues", "[", "\[DoubleStruckCapitalU]", "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.481855039590829*^9, 3.48185504795945*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.481855056526696*^9, 3.481893848553343*^9}]
}, Open  ]],

Cell[TextData[{
 "When presented with a ",
 StyleBox["photon",
  FontVariations->{"Underline"->True}],
 " in state J the meter ",
 StyleBox["either",
  FontSlant->"Italic"],
 " announces +1 (\"up\"), signaling that it prepared a photon in state  ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox[
    StyleBox["u", "Input"], "1"], " "}]],
  CellChangeTimes->{{3.481854171987495*^9, 3.481854172552269*^9}, 
    3.481854232163419*^9, 3.4818543026284847`*^9}],
 "(this it does with ",
 StyleBox["probability",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  SubsuperscriptBox["j", "1", "2"]],
  CellChangeTimes->{3.4818544273555613`*^9}],
 "), ",
 StyleBox["else",
  FontSlant->"Italic"],
 " it announces \"dn\", signaling that it prepared a photon in state  ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["u", "Input"], "2"]],
  CellChangeTimes->{{3.481854171987495*^9, 3.481854172552269*^9}, 
    3.481854232163419*^9, 3.4818543026284847`*^9}],
 " (this it does with probability ",
 Cell[BoxData[
  SubsuperscriptBox["j", "2", "2"]],
  CellChangeTimes->{3.4818544273555613`*^9}],
 "). "
}], "Text",
 CellChangeTimes->{{3.4818555919965973`*^9, 3.481855636202074*^9}, {
  3.481855672471037*^9, 3.481855861614798*^9}, {3.481856019683325*^9, 
  3.481856024757429*^9}, {3.481893426570949*^9, 3.48189342829941*^9}}],

Cell["\<\
In generic quantum contexts it often proves advantageous to employ the \
density matrix formalism when analyzing the action of meters (when the \
quantum system is in a mixed state there is no alternative). Look, for \
example, to the case of a linearly polarized photon: the density matrix \
\>", "Text",
 CellChangeTimes->{{3.4818934181394863`*^9, 3.481893441223543*^9}, {
   3.481893502179839*^9, 3.481893517706835*^9}, {3.48189355296883*^9, 
   3.481893603454158*^9}, {3.481893689971642*^9, 3.481893712063467*^9}, {
   3.48189390102386*^9, 3.4818939404901447`*^9}, {3.48189406760527*^9, 
   3.481894070289908*^9}, 3.4818946121559668`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Rho]", "in"], "=", 
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["\[ScriptCapitalE]", "1"]},
       {
        SubscriptBox["\[ScriptCapitalE]", "2"]}
      }], "\[NoBreak]", ")"}], ".", 
    RowBox[{"Adj", "[", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SubscriptBox["\[ScriptCapitalE]", "1"]},
        {
         SubscriptBox["\[ScriptCapitalE]", "2"]}
       }], "\[NoBreak]", ")"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Rho]", "in"], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.481856065409482*^9, 3.481856130714278*^9}, {
  3.481856167311317*^9, 3.481856168097705*^9}, {3.481893954357423*^9, 
  3.481893988295479*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], 
      RowBox[{
       SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
       SubscriptBox["\[ScriptCapitalE]", "2"]}]},
     {
      RowBox[{
       SubscriptBox["\[ScriptCapitalE]", "1"], " ", 
       SubscriptBox["\[ScriptCapitalE]", "2"]}], 
      SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.4818561002367563`*^9, {3.481856132241961*^9, 3.481856137149335*^9}, {
   3.48185616972556*^9, 3.481856177255723*^9}, 3.481856695186263*^9, 
   3.481893992180893*^9}]
}, Open  ]],

Cell["\<\
possesses the properties one expects of a pure-state density matrix:\
\>", "Text",
 CellChangeTimes->{{3.481894088192691*^9, 3.481894099632228*^9}, 
   3.481894641079138*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
     SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}], "\[Equal]", "1"}], 
   ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Tr", "[", 
     SubscriptBox["\[Rho]", "in"], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
     SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}], "\[Equal]", "1"}], 
   ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Tr", "[", 
     RowBox[{
      SubscriptBox["\[Rho]", "in"], ".", 
      SubscriptBox["\[Rho]", "in"]}], "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.481856607546926*^9, 3.481856637159481*^9}, {
  3.481856750395132*^9, 3.4818567633211727`*^9}, {3.4818940102598667`*^9, 
  3.4818940583259687`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.4818566404026546`*^9, {3.481856742220727*^9, 3.481856764563005*^9}, 
   3.48189410795889*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.4818566404026546`*^9, {3.481856742220727*^9, 3.481856764563005*^9}, 
   3.4818941080040913`*^9}]
}, Open  ]],

Cell["\<\
The meter announce \"up/dn\" with probabilities (that yield unity when added) \
\>", "Text",
 CellChangeTimes->{{3.481894123201024*^9, 3.481894151100526*^9}, {
  3.481894213079764*^9, 3.4818942584709883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["Prob", "up"], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
        SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}], "\[Equal]", "1"}],
       ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Tr", "[", 
      RowBox[{
       SubscriptBox["\[Rho]", "in"], ".", 
       SubscriptBox["\[DoubleStruckU]", "1"]}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "dn"], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
        SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}], "\[Equal]", "1"}],
       ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Tr", "[", 
      RowBox[{
       SubscriptBox["\[Rho]", "in"], ".", 
       SubscriptBox["\[DoubleStruckU]", "2"]}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
       SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}], "\[Equal]", "1"}], 
     ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["p", "2"], "+", 
       SuperscriptBox["q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubscriptBox["Prob", "up"], "+", 
     SubscriptBox["Prob", "dn"]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.48185651508288*^9, 3.4818565829280777`*^9}, {
  3.48185693301269*^9, 3.481857001584776*^9}, {3.4818941668474283`*^9, 
  3.481894192947837*^9}, {3.481894233065494*^9, 3.481894245049395*^9}, {
  3.4818942829598846`*^9, 3.4818942872458878`*^9}, {3.481894339225401*^9, 
  3.481894390105867*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"p", " ", 
     SubscriptBox["\[ScriptCapitalE]", "1"]}], "+", 
    RowBox[{"q", " ", 
     SubscriptBox["\[ScriptCapitalE]", "2"]}]}], ")"}], "2"]], "Output",
 CellChangeTimes->{
  3.481856556002029*^9, 3.481856587013254*^9, 3.481856774216427*^9, 
   3.481857005900444*^9, 3.481894195916871*^9, {3.481894268053938*^9, 
   3.481894291346302*^9}, 3.481894396185638*^9}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"q", " ", 
     SubscriptBox["\[ScriptCapitalE]", "1"]}], "-", 
    RowBox[{"p", " ", 
     SubscriptBox["\[ScriptCapitalE]", "2"]}]}], ")"}], "2"]], "Output",
 CellChangeTimes->{
  3.481856556002029*^9, 3.481856587013254*^9, 3.481856774216427*^9, 
   3.481857005900444*^9, 3.481894195916871*^9, {3.481894268053938*^9, 
   3.481894291346302*^9}, 3.481894396198813*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.481856556002029*^9, 3.481856587013254*^9, 3.481856774216427*^9, 
   3.481857005900444*^9, 3.481894195916871*^9, {3.481894268053938*^9, 
   3.481894291346302*^9}, 3.481894396205471*^9}]
}, Open  ]],

Cell["The meter-created states are given respectively by", "Text",
 CellChangeTimes->{{3.481894413943798*^9, 3.4818944352916327`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Rho]", "outup"], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
        SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}], "\[Equal]", "1"}],
       ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["q", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["\[DoubleStruckU]", "1"], ".", 
        SubscriptBox["\[Rho]", "in"], ".", 
        SubscriptBox["\[DoubleStruckU]", "1"]}], 
       RowBox[{"Tr", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", "in"], ".", 
         SubscriptBox["\[DoubleStruckU]", "1"]}], "]"}]], "\[Equal]", 
      SubscriptBox["\[DoubleStruckU]", "1"]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Rho]", "outdn"], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["j", "1"], "2"], "+", 
        SuperscriptBox[
         SubscriptBox["j", "2"], "2"]}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["\[DoubleStruckU]", "2"], ".", 
        SubscriptBox["\[Rho]", "in"], ".", 
        SubscriptBox["\[DoubleStruckU]", "2"]}], 
       RowBox[{"Tr", "[", 
        RowBox[{
         SubscriptBox["\[Rho]", "in"], ".", 
         SubscriptBox["\[DoubleStruckU]", "2"]}], "]"}]], "\[Equal]", 
      SubscriptBox["\[DoubleStruckU]", "2"]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4818568055879717`*^9, 3.481856916750738*^9}, {
  3.481894499409484*^9, 3.481894524146205*^9}, {3.48189455896463*^9, 
  3.481894566664826*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.481856843329104*^9, 3.4818568610782843`*^9}, {
   3.481856896282194*^9, 3.481856920953143*^9}, 3.481894574445685*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.481856843329104*^9, 3.4818568610782843`*^9}, {
   3.481856896282194*^9, 3.481856920953143*^9}, 3.4818945744872026`*^9}]
}, Open  ]],

Cell["\<\
Such computational labor can, however, be avoided if the input state is \
presented in \"meter pre-adapted form\" (as Hardy was at pains to do)\
\>", "Text",
 CellChangeTimes->{{3.481894692789612*^9, 3.4818948053008833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["J", "in"], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.481894916803748*^9, 3.481894920432222*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"p", " ", 
        SubscriptBox["j", "1"]}], "-", 
       RowBox[{"q", " ", 
        SubscriptBox["j", "2"]}]}]},
     {
      RowBox[{
       RowBox[{"q", " ", 
        SubscriptBox["j", "1"]}], "+", 
       RowBox[{"p", " ", 
        SubscriptBox["j", "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481894921220952*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Rho]", "in"], "=", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[ScriptCapitalE]", "1", "2"], "+", 
         SubsuperscriptBox["\[ScriptCapitalE]", "2", "2"]}], "\[Equal]", 
        "1"}], ",", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["j", "1", "2"], "+", 
         SubsuperscriptBox["j", "2", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", 
     
     RowBox[{"Simplify", "[", 
      RowBox[{
       SubscriptBox["J", "in"], ".", 
       RowBox[{"Adj", "[", 
        SubscriptBox["J", "in"], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Rho]", "in"], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.4818949764560347`*^9, 3.481895000519174*^9}, 
   3.4818950358117867`*^9, {3.481895070556793*^9, 3.481895119757867*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", 
          SubscriptBox["j", "1"]}], "-", 
         RowBox[{"q", " ", 
          SubscriptBox["j", "2"]}]}], ")"}], "2"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", 
          SubscriptBox["j", "1"]}], "+", 
         RowBox[{"p", " ", 
          SubscriptBox["j", "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", 
          SubscriptBox["j", "1"]}], "-", 
         RowBox[{"q", " ", 
          SubscriptBox["j", "2"]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", 
          SubscriptBox["j", "1"]}], "+", 
         RowBox[{"p", " ", 
          SubscriptBox["j", "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", 
          SubscriptBox["j", "1"]}], "-", 
         RowBox[{"q", " ", 
          SubscriptBox["j", "2"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", 
          SubscriptBox["j", "1"]}], "+", 
         RowBox[{"p", " ", 
          SubscriptBox["j", "2"]}]}], ")"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481895083000318*^9, 3.48189512180011*^9}]
}, Open  ]],

Cell["\<\
To illustrate the point, I turn to a generic instance of the physical \
situation contemplated by Hardy:\
\>", "Text",
 CellChangeTimes->{{3.481895250524888*^9, 3.4818952922004833`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4818952961281013`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Generic entangled pair of photons, meters of two generic designs\
\>", "Subsection",
 CellChangeTimes->{{3.481895338802319*^9, 3.481895364883027*^9}}],

Cell["\<\
Alice has a \[DoubleStruckU]-meter, with eigenstates/projectors\
\>", "Text",
 CellChangeTimes->{{3.481896065056281*^9, 3.481896101142169*^9}, {
  3.48189626675721*^9, 3.481896270084084*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["u", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"p"},
      {
       RowBox[{"q", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["u", "2"], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "q"}]},
      {
       RowBox[{"p", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckU]", "1"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["u", "1"], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckU]", "2"], "=", 
   RowBox[{
    SubscriptBox["u", "2"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["u", "2"], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.481896274496037*^9, 3.4818963567301598`*^9}}],

Cell["Bob has a \[DoubleStruckV]-meter, with", "Text",
 CellChangeTimes->{{3.481896367686721*^9, 3.481896388581102*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["v", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"P"},
      {
       RowBox[{"Q", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["v", "2"], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "Q"}]},
      {
       RowBox[{"P", " "}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckV]", "1"], "=", 
   RowBox[{
    SubscriptBox["v", "1"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["v", "1"], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckV]", "2"], "=", 
   RowBox[{
    SubscriptBox["v", "2"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["v", "2"], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4818964216972437`*^9, 3.481896441337715*^9}}],

Cell["\<\
Alice/Bob's meters are (in God's spectral resolutions) described by the \
traceless hermitian 4\[Cross]4 matrices\
\>", "Text",
 CellChangeTimes->{{3.4818965698054037`*^9, 3.481896576945188*^9}, {
  3.481896614895082*^9, 3.4818966678933907`*^9}, {3.481896763639133*^9, 
  3.4818968131553*^9}, {3.4818969814840384`*^9, 3.481896986601255*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalU]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckU]", "1"], "\[CircleTimes]", 
     "\[DoubleStruckCapitalI]"}], "-", 
    RowBox[{
     SubscriptBox["\[DoubleStruckU]", "2"], "\[CircleTimes]", 
     "\[DoubleStruckCapitalI]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalV]", "=", 
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalI]", "\[CircleTimes]", 
     SubscriptBox["\[DoubleStruckV]", "1"]}], "-", 
    RowBox[{"\[DoubleStruckCapitalI]", "\[CircleTimes]", 
     SubscriptBox["\[DoubleStruckV]", "2"]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.481896678676313*^9, 3.481896736659116*^9}, {
  3.481896820014639*^9, 3.481896858571619*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[DoubleStruckCapitalU]", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalV]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.4818968709848433`*^9, 3.4818968937692413`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["p", "2"], "-", 
       SuperscriptBox["q", "2"]}], "0", 
      RowBox[{"2", " ", "p", " ", "q"}], "0"},
     {"0", 
      RowBox[{
       SuperscriptBox["p", "2"], "-", 
       SuperscriptBox["q", "2"]}], "0", 
      RowBox[{"2", " ", "p", " ", "q"}]},
     {
      RowBox[{"2", " ", "p", " ", "q"}], "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "+", 
       SuperscriptBox["q", "2"]}], "0"},
     {"0", 
      RowBox[{"2", " ", "p", " ", "q"}], "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "+", 
       SuperscriptBox["q", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481896896935308*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["P", "2"], "-", 
       SuperscriptBox["Q", "2"]}], 
      RowBox[{"2", " ", "P", " ", "Q"}], "0", "0"},
     {
      RowBox[{"2", " ", "P", " ", "Q"}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["P", "2"]}], "+", 
       SuperscriptBox["Q", "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["P", "2"], "-", 
       SuperscriptBox["Q", "2"]}], 
      RowBox[{"2", " ", "P", " ", "Q"}]},
     {"0", "0", 
      RowBox[{"2", " ", "P", " ", "Q"}], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["P", "2"]}], "+", 
       SuperscriptBox["Q", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4818968969659863`*^9}]
}, Open  ]],

Cell[TextData[{
 "The state vector ",
 StyleBox["\[CapitalPsi]", "Output"],
 " of a composite 2-photon system lives in a 4-space, where the 4-vectors"
}], "Text",
 CellChangeTimes->{{3.481897123490992*^9, 3.4818972482889633`*^9}, {
  3.4818973105190697`*^9, 3.4818973114777184`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "1"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "2"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "3"], "=", 
   RowBox[{
    SubscriptBox["u", "2"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "4"], "=", 
   RowBox[{
    SubscriptBox["u", "2"], "\[CircleTimes]", 
    SubscriptBox["v", "2"]}]}], ";"}]}], "Input"],

Cell["\<\
provide an orthonormal basis. The associated projectors are\
\>", "Text",
 CellChangeTimes->{{3.481897009351204*^9, 3.4818970726440887`*^9}, {
  3.48189726975467*^9, 3.481897371385563*^9}, {3.481899438902604*^9, 
  3.4818994547097893`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckU]\[DoubleStruckV]", "1"], "=", 
   RowBox[{
    SubscriptBox["uv", "1"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["uv", "1"], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckU]\[DoubleStruckV]", "2"], "=", 
   RowBox[{
    SubscriptBox["uv", "2"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["uv", "2"], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckU]\[DoubleStruckV]", "3"], "=", 
   RowBox[{
    SubscriptBox["uv", "3"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["uv", "3"], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckU]\[DoubleStruckV]", "4"], "=", 
   RowBox[{
    SubscriptBox["uv", "4"], ".", 
    RowBox[{"Adj", "[", 
     SubscriptBox["uv", "4"], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.481899549686392*^9, 3.4818995706167707`*^9}, {
  3.481899603020944*^9, 3.481899657758627*^9}}],

Cell[TextData[{
 "The meter pre-adapted representation of ",
 StyleBox["\[CapitalPsi]", "Output"],
 " reads"
}], "Text",
 CellChangeTimes->{{3.481899497508079*^9, 3.481899513808321*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPsi]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "1"], 
     SubscriptBox["uv", "1"]}], "+", 
    RowBox[{
     SubscriptBox["\[Psi]", "2"], 
     SubscriptBox["uv", "2"]}], "+", 
    RowBox[{
     SubscriptBox["\[Psi]", "3"], 
     SubscriptBox["uv", "3"]}], "+", 
    RowBox[{
     SubscriptBox["\[Psi]", "4"], 
     SubscriptBox["uv", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.481897402196307*^9, 3.481897461288625*^9}, {
   3.48189750183884*^9, 3.481897509621977*^9}, 3.4818977239328737`*^9, {
   3.4818980288331633`*^9, 3.4818980457165728`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"p", " ", "P", " ", 
        SubscriptBox["\[Psi]", "1"]}], "-", 
       RowBox[{"p", " ", "Q", " ", 
        SubscriptBox["\[Psi]", "2"]}], "-", 
       RowBox[{"P", " ", "q", " ", 
        SubscriptBox["\[Psi]", "3"]}], "+", 
       RowBox[{"q", " ", "Q", " ", 
        SubscriptBox["\[Psi]", "4"]}]}]},
     {
      RowBox[{
       RowBox[{"p", " ", "Q", " ", 
        SubscriptBox["\[Psi]", "1"]}], "+", 
       RowBox[{"p", " ", "P", " ", 
        SubscriptBox["\[Psi]", "2"]}], "-", 
       RowBox[{"q", " ", "Q", " ", 
        SubscriptBox["\[Psi]", "3"]}], "-", 
       RowBox[{"P", " ", "q", " ", 
        SubscriptBox["\[Psi]", "4"]}]}]},
     {
      RowBox[{
       RowBox[{"P", " ", "q", " ", 
        SubscriptBox["\[Psi]", "1"]}], "-", 
       RowBox[{"q", " ", "Q", " ", 
        SubscriptBox["\[Psi]", "2"]}], "+", 
       RowBox[{"p", " ", "P", " ", 
        SubscriptBox["\[Psi]", "3"]}], "-", 
       RowBox[{"p", " ", "Q", " ", 
        SubscriptBox["\[Psi]", "4"]}]}]},
     {
      RowBox[{
       RowBox[{"q", " ", "Q", " ", 
        SubscriptBox["\[Psi]", "1"]}], "+", 
       RowBox[{"P", " ", "q", " ", 
        SubscriptBox["\[Psi]", "2"]}], "+", 
       RowBox[{"p", " ", "Q", " ", 
        SubscriptBox["\[Psi]", "3"]}], "+", 
       RowBox[{"p", " ", "P", " ", 
        SubscriptBox["\[Psi]", "4"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481898046809486*^9}]
}, Open  ]],

Cell["\<\
where I will, for notational simplicity, assume the coordinates \[Psi] are \
real. The associated density matrix reads\
\>", "Text",
 CellChangeTimes->{{3.4818975597268248`*^9, 3.48189756605365*^9}, {
  3.481897607451522*^9, 3.48189763575426*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]\[Rho]", "=", 
   RowBox[{"\[CapitalPsi]", ".", 
    RowBox[{"Adj", "[", "\[CapitalPsi]", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Rho]\[Rho]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.4818976574595737`*^9, 3.481897687521916*^9}, {
  3.4818979942268343`*^9, 3.481898005117915*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], "2"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], "2"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], "2"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "2"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "-", 
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "3"]}], "-", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "1"]}], "+", 
         RowBox[{"P", " ", "q", " ", 
          SubscriptBox["\[Psi]", "2"]}], "+", 
         RowBox[{"p", " ", "Q", " ", 
          SubscriptBox["\[Psi]", "3"]}], "+", 
         RowBox[{"p", " ", "P", " ", 
          SubscriptBox["\[Psi]", "4"]}]}], ")"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.481897691912662*^9, 3.4818980074324007`*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.481898070763479*^9}],

Cell["\<\
Alice makes a measurement, gets \"up/dn\" with probabilities that I use \
density matrix formalism to evaluate\
\>", "Text",
 CellChangeTimes->{{3.4818980798791237`*^9, 3.481898103997458*^9}, {
  3.482168072221568*^9, 3.482168102343741*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Prob", 
    SubscriptBox["A", "up"]], "=", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["P", "2"], "+", 
         SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
     ",", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Tr", "[", 
       RowBox[{"\[Rho]\[Rho]", ".", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[DoubleStruckU]", "1"], "\[CircleTimes]", 
          "\[DoubleStruckCapitalI]"}], ")"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["Prob", 
    SubscriptBox["A", "dn"]], "=", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["P", "2"], "+", 
         SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
     ",", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Tr", "[", 
       RowBox[{"\[Rho]\[Rho]", ".", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[DoubleStruckU]", "2"], "\[CircleTimes]", 
          "\[DoubleStruckCapitalI]"}], ")"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.481898109942788*^9, 3.4818981134579697`*^9}, {
  3.481898145346004*^9, 3.4818981717170143`*^9}, {3.481898216786867*^9, 
  3.48189828927501*^9}, {3.481898340413858*^9, 3.4818983735714617`*^9}, {
  3.4818984274690037`*^9, 3.481898429083358*^9}, {3.481898473420495*^9, 
  3.48189853171507*^9}, {3.481898572325644*^9, 3.481898621270091*^9}, {
  3.481902903495319*^9, 3.4819029073744783`*^9}, {3.4819029850003767`*^9, 
  3.481902996544601*^9}}],

Cell[TextData[{
 "but which, as I demonstrate, can be obtained directly from the \"meter \
pre-adapted\" representation of ",
 StyleBox["\[CapitalPsi]", "Output"],
 ":"
}], "Text",
 CellChangeTimes->{{3.4821681256740847`*^9, 3.482168141179071*^9}, {
  3.482168184719346*^9, 3.482168228212059*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["p", "2"], "+", 
       SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["P", "2"], "+", 
       SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
   ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubscriptBox["Prob", 
      SubscriptBox["A", "up"]], "\[Equal]", 
     RowBox[{
      SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
      SubsuperscriptBox["\[Psi]", "2", "2"]}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["p", "2"], "+", 
       SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["P", "2"], "+", 
       SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
   ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubscriptBox["Prob", 
      SubscriptBox["A", "dn"]], "\[Equal]", 
     RowBox[{
      SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
      SubsuperscriptBox["\[Psi]", "4", "2"]}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.481902920731146*^9, 3.481902975410221*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.4818984383858232`*^9, 3.4818984792668657`*^9, 3.481898533091271*^9, {
   3.481898611944867*^9, 3.4818986259584513`*^9}, 3.4819030011133137`*^9, 
   3.481903139522036*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.4818984383858232`*^9, 3.4818984792668657`*^9, 3.481898533091271*^9, {
   3.481898611944867*^9, 3.4818986259584513`*^9}, 3.4819030011133137`*^9, 
   3.481903139534751*^9}]
}, Open  ]],

Cell["\<\
The measurement-created states that Alice ships to Bob would, in density \
matrix formalism, be computed\
\>", "Text",
 CellChangeTimes->{{3.481899242449194*^9, 3.481899261879421*^9}, {
  3.482168272762207*^9, 3.4821682850729027`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Rho]\[Rho]", "Aup"], "=", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["P", "2"], "+", 
         SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
     ",", 
     RowBox[{"Simplify", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[DoubleStruckU]", "1"], "\[CircleTimes]", 
          "\[DoubleStruckCapitalI]"}], ")"}], ".", "\[Rho]\[Rho]", ".", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[DoubleStruckU]", "1"], "\[CircleTimes]", 
          "\[DoubleStruckCapitalI]"}], ")"}]}], 
       RowBox[{"Tr", "[", 
        RowBox[{"\[Rho]\[Rho]", ".", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[DoubleStruckU]", "1"], "\[CircleTimes]", 
           "\[DoubleStruckCapitalI]"}], ")"}]}], "]"}]], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Rho]\[Rho]", "Adn"], "=", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["p", "2"], "+", 
         SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["P", "2"], "+", 
         SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
         SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
     ",", 
     RowBox[{"Simplify", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[DoubleStruckU]", "2"], "\[CircleTimes]", 
          "\[DoubleStruckCapitalI]"}], ")"}], ".", "\[Rho]\[Rho]", ".", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[DoubleStruckU]", "2"], "\[CircleTimes]", 
          "\[DoubleStruckCapitalI]"}], ")"}]}], 
       RowBox[{"Tr", "[", 
        RowBox[{"\[Rho]\[Rho]", ".", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[DoubleStruckU]", "2"], "\[CircleTimes]", 
           "\[DoubleStruckCapitalI]"}], ")"}]}], "]"}]], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.481899270242242*^9, 3.481899296937891*^9}, {
  3.481899342062417*^9, 3.481899378941731*^9}, {3.481899806495323*^9, 
  3.481899835501487*^9}, {3.4819024219526043`*^9, 3.4819024461117268`*^9}, {
  3.481902481400375*^9, 3.48190253869694*^9}, {3.481903092654009*^9, 
  3.48190309927001*^9}, {3.481903151692252*^9, 3.481903153597126*^9}}],

Cell[TextData[{
 "but become immediately evident if one works from the \"meter pre-adapted\" \
representation of ",
 StyleBox["\[CapitalPsi]", "Output"],
 ":"
}], "Text",
 CellChangeTimes->{{3.482168298393423*^9, 3.4821683291711273`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["p", "2"], "+", 
       SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["P", "2"], "+", 
       SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
   ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubscriptBox["\[Rho]\[Rho]", "Aup"], "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Psi]", "1"], 
          SubscriptBox["uv", "1"]}], "+", 
         RowBox[{
          SubscriptBox["\[Psi]", "2"], 
          SubscriptBox["uv", "2"]}]}], ")"}], ".", 
       RowBox[{"Adj", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Psi]", "1"], 
           SubscriptBox["uv", "1"]}], "+", 
          RowBox[{
           SubscriptBox["\[Psi]", "2"], 
           SubscriptBox["uv", "2"]}]}], ")"}], "]"}]}], 
      RowBox[{
       SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "2", "2"]}]]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["p", "2"], "+", 
       SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["P", "2"], "+", 
       SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
   ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     SubscriptBox["\[Rho]\[Rho]", "Adn"], "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Psi]", "3"], 
          SubscriptBox["uv", "3"]}], "+", 
         RowBox[{
          SubscriptBox["\[Psi]", "4"], 
          SubscriptBox["uv", "4"]}]}], ")"}], ".", 
       RowBox[{"Adj", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Psi]", "3"], 
           SubscriptBox["uv", "3"]}], "+", 
          RowBox[{
           SubscriptBox["\[Psi]", "4"], 
           SubscriptBox["uv", "4"]}]}], ")"}], "]"}]}], 
      RowBox[{
       SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
       SubsuperscriptBox["\[Psi]", "4", "2"]}]]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.481903050792954*^9, 3.4819030762571573`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481899865415578*^9, 3.481902452167532*^9, 
  3.481902541291361*^9, 3.48190318654519*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481899865415578*^9, 3.481902452167532*^9, 
  3.481902541291361*^9, 3.481903186600648*^9}]
}, Open  ]],

Cell["\<\
Bob will, with his \[DoubleStruckV]-meter, get \"up/dn\" with conditional \
probabilities\
\>", "Text",
 CellChangeTimes->{{3.4819025855301933`*^9, 3.4819026358201923`*^9}, {
   3.481902707808074*^9, 3.481902718423491*^9}, 3.4819031992696123`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["Prob", "AupBup"], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["P", "2"], "+", 
        SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
    ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        SubscriptBox["\[Rho]\[Rho]", "Aup"], ".", 
        RowBox[{"(", 
         RowBox[{"\[DoubleStruckCapitalI]", "\[CircleTimes]", 
          SubscriptBox["\[DoubleStruckV]", "1"]}], ")"}]}], "]"}], "\[Equal]", 
      FractionBox[
       SubsuperscriptBox["\[Psi]", "1", "2"], 
       RowBox[{
        SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "2", "2"]}]]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "AupBdn"], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["P", "2"], "+", 
        SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
    ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        SubscriptBox["\[Rho]\[Rho]", "Aup"], ".", 
        RowBox[{"(", 
         RowBox[{"\[DoubleStruckCapitalI]", "\[CircleTimes]", 
          SubscriptBox["\[DoubleStruckV]", "2"]}], ")"}]}], "]"}], "\[Equal]", 
      FractionBox[
       SubsuperscriptBox["\[Psi]", "2", "2"], 
       RowBox[{
        SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "2", "2"]}]]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "AdnBup"], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["P", "2"], "+", 
        SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
    ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        SubscriptBox["\[Rho]\[Rho]", "Adn"], ".", 
        RowBox[{"(", 
         RowBox[{"\[DoubleStruckCapitalI]", "\[CircleTimes]", 
          SubscriptBox["\[DoubleStruckV]", "1"]}], ")"}]}], "]"}], "\[Equal]", 
      FractionBox[
       SubsuperscriptBox["\[Psi]", "3", "2"], 
       RowBox[{
        SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "4", "2"]}]]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "AdnBdn"], "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["p", "2"], "+", 
        SuperscriptBox["q", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["P", "2"], "+", 
        SuperscriptBox["Q", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "4", "2"]}], "\[Equal]", "1"}]}], "}"}], 
    ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        SubscriptBox["\[Rho]\[Rho]", "Adn"], ".", 
        RowBox[{"(", 
         RowBox[{"\[DoubleStruckCapitalI]", "\[CircleTimes]", 
          SubscriptBox["\[DoubleStruckV]", "2"]}], ")"}]}], "]"}], "\[Equal]", 
      FractionBox[
       SubsuperscriptBox["\[Psi]", "4", "2"], 
       RowBox[{
        SubsuperscriptBox["\[Psi]", "3", "2"], "+", 
        SubsuperscriptBox["\[Psi]", "4", "2"]}]]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.481902728365838*^9, 3.4819028219122543`*^9}, {
  3.481903236076358*^9, 3.481903310886628*^9}, {3.481903504166772*^9, 
  3.481903620036935*^9}, {3.481903672914344*^9, 3.481903764656303*^9}, {
  3.481903800960538*^9, 3.481903830735313*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481902830336955*^9, 3.481903211139282*^9, 
  3.481903315736731*^9, 3.481903840035738*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481902830336955*^9, 3.481903211139282*^9, 
  3.481903315736731*^9, 3.4819038401041117`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481902830336955*^9, 3.481903211139282*^9, 
  3.481903315736731*^9, 3.481903840111844*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.481902830336955*^9, 3.481903211139282*^9, 
  3.481903315736731*^9, 3.481903840167676*^9}]
}, Open  ]],

Cell["\<\
If, on the other hand, Bob makes the first measurement, his expected results \
are described by marginal probabilities\
\>", "Text",
 CellChangeTimes->{{3.481904414043582*^9, 3.48190446881376*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["Prob", "Bup"], "=", 
  RowBox[{
   SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
   SubsuperscriptBox["\[Psi]", "3", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "Bdn"], "=", 
  RowBox[{
   SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
   SubsuperscriptBox["\[Psi]", "4", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.4819044758479223`*^9, 3.4819045005364027`*^9}, {
  3.481904532420529*^9, 3.481904610832365*^9}}],

Cell["\<\
and Alice's expected results are described by the conditional probablities\
\>", "Text",
 CellChangeTimes->{{3.481904642499579*^9, 3.4819046626738*^9}, 
   3.4819798999700327`*^9}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["Prob", "BupAup"], "=", 
  FractionBox[
   SubsuperscriptBox["\[Psi]", "1", "2"], 
   RowBox[{
    SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
    SubsuperscriptBox["\[Psi]", "3", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "BupAdn"], "=", 
  FractionBox[
   SubsuperscriptBox["\[Psi]", "3", "2"], 
   RowBox[{
    SubsuperscriptBox["\[Psi]", "1", "2"], "+", 
    SubsuperscriptBox["\[Psi]", "3", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "BdnAup"], "=", 
  FractionBox[
   SubsuperscriptBox["\[Psi]", "2", "2"], 
   RowBox[{
    SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
    SubsuperscriptBox["\[Psi]", "4", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "BdnAdn"], "=", 
  FractionBox[
   SubsuperscriptBox["\[Psi]", "4", "2"], 
   RowBox[{
    SubsuperscriptBox["\[Psi]", "2", "2"], "+", 
    SubsuperscriptBox["\[Psi]", "4", "2"]}]]}]}], "Input",
 CellChangeTimes->{{3.481904669041648*^9, 3.481904736249322*^9}, {
  3.48190476739287*^9, 3.481904821584586*^9}, {3.481904879554572*^9, 
  3.481904906145993*^9}}],

Cell["\<\
The joint probabilities\[LongDash]computed by appeal to the general formula\
\>", "Text",
 CellChangeTimes->{{3.481904942426167*^9, 3.4819049588000803`*^9}, {
  3.481905168310789*^9, 3.481905182970525*^9}}],

Cell[BoxData[
 RowBox[{"joint", "=", 
  RowBox[{"marginal", "*", "conditional"}]}]], "Output",
 CellChangeTimes->{{3.481905190362731*^9, 3.48190520696313*^9}}],

Cell[TextData[{
 "\[LongDash]are ",
 StyleBox["independent of who makes the first measurement",
  FontVariations->{"Underline"->True}],
 ", and given very simply by"
}], "Text",
 CellChangeTimes->{{3.4819052348158293`*^9, 3.481905253758564*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["Prob", "upup"], "=", 
  SubsuperscriptBox["\[Psi]", "1", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "updn"], "=", 
  SubsuperscriptBox["\[Psi]", "2", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "dnup"], "=", 
  SubsuperscriptBox["\[Psi]", "3", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["Prob", "dndn"], "=", 
  SubsuperscriptBox["\[Psi]", "4", "2"]}]}], "Input",
 CellChangeTimes->{{3.481904969517528*^9, 3.481905117320436*^9}}],

Cell["\<\
These results make very clear the advantage gained by working from the meter \
pre-adapted representation of the initial composite state. Which is precisely \
what Hardy has prepared us to do. \
\>", "Text",
 CellChangeTimes->{{3.481905285052446*^9, 3.48190531017877*^9}, {
  3.481905365202828*^9, 3.481905419981324*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.481920185430366*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["At last: Hardy's nonlocality argument", "Subsection",
 CellChangeTimes->{{3.4819201977142553`*^9, 3.481920209800455*^9}}],

Cell["\<\
A composite pair of photons (one susceptible to measurement by Alice, the \
other by Bob) are assumed to be initially in the composite state\
\>", "Text",
 CellChangeTimes->{{3.481926214555561*^9, 3.481926294493849*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPsi]", "=", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"1"},
         {"0"}
        }], ")"}], "\[CircleTimes]", 
      RowBox[{"(", GridBox[{
         {"1"},
         {"0"}
        }], ")"}]}]}], "-", 
    RowBox[{"\[Beta]", 
     RowBox[{
      RowBox[{"(", GridBox[{
         {"0"},
         {"1"}
        }], ")"}], "\[CircleTimes]", 
      RowBox[{"(", GridBox[{
         {"0"},
         {"1"}
        }], ")"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.481926297812871*^9, 3.4819263050267487`*^9}, {
  3.481926343465548*^9, 3.481926344324671*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\[Alpha]"},
     {"0"},
     {"0"},
     {
      RowBox[{"-", "\[Beta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4819263508877068`*^9}]
}, Open  ]],

Cell[TextData[{
 "Alice (ditto Bob) possesses both a \[DoubleStruckU]-meter and a \
\[DoubleStruckV]-meter. Prior to each experiment, Alice and Bob, acting \
independently, decide which of their respective meters they will use. Four \
meter-pairs are possible, so four meter pre-adapted representrations of ",
 StyleBox["\[CapitalPsi]", "Output"],
 " acquire interest.  If the eigenvectors of  \[DoubleStruckU] and \
\[DoubleStruckV] are denoted ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["u", "1"], ",", 
    SubscriptBox["u", "2"]}], "}"}]],
  CellChangeTimes->{{3.481980148927162*^9, 3.481980155884618*^9}}],
 " and ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["v", "1"], ",", 
    SubscriptBox["v", "2"]}], "}"}]],
  CellChangeTimes->{{3.481980148927162*^9, 3.481980175371999*^9}}],
 " then the elements of those pre-adapted bases are"
}], "Text",
 CellChangeTimes->{{3.481926381970333*^9, 3.481926513856497*^9}, {
  3.481980024609605*^9, 3.481980059231701*^9}, {3.48198012939835*^9, 
  3.48198018134408*^9}, {3.481980351786771*^9, 3.481980381925111*^9}, {
  3.48198054880049*^9, 3.481980551980916*^9}, {3.481980585752984*^9, 
  3.481980649172936*^9}, {3.481980689562726*^9, 3.481980837041786*^9}, {
  3.481980931997388*^9, 3.481981031328504*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["uu", "1"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["u", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uu", "2"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["u", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uu", "3"], "=", 
   RowBox[{
    SubscriptBox["u", "2"], "\[CircleTimes]", 
    SubscriptBox["u", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["uu", "4"], "=", 
    RowBox[{
     SubscriptBox["u", "2"], "\[CircleTimes]", 
     SubscriptBox["u", "2"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "1"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "2"], "=", 
   RowBox[{
    SubscriptBox["u", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["uv", "3"], "=", 
   RowBox[{
    SubscriptBox["u", "2"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["uv", "4"], "=", 
    RowBox[{
     SubscriptBox["u", "2"], "\[CircleTimes]", 
     SubscriptBox["v", "2"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vu", "1"], "=", 
   RowBox[{
    SubscriptBox["v", "1"], "\[CircleTimes]", 
    SubscriptBox["u", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vu", "2"], "=", 
   RowBox[{
    SubscriptBox["v", "1"], "\[CircleTimes]", 
    SubscriptBox["u", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vu", "3"], "=", 
   RowBox[{
    SubscriptBox["v", "2"], "\[CircleTimes]", 
    SubscriptBox["u", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["vu", "4"], "=", 
    RowBox[{
     SubscriptBox["v", "2"], "\[CircleTimes]", 
     SubscriptBox["u", "2"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vv", "1"], "=", 
   RowBox[{
    SubscriptBox["v", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vv", "2"], "=", 
   RowBox[{
    SubscriptBox["v", "1"], "\[CircleTimes]", 
    SubscriptBox["v", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vv", "3"], "=", 
   RowBox[{
    SubscriptBox["v", "2"], "\[CircleTimes]", 
    SubscriptBox["v", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["vv", "4"], "=", 
   RowBox[{
    SubscriptBox["v", "2"], "\[CircleTimes]", 
    SubscriptBox["v", "2"]}]}], ";"}]}], "Output",
 CellChangeTimes->{{3.481729939438064*^9, 3.481730101477063*^9}}],

Cell["in terms of which we have", "Text",
 CellChangeTimes->{{3.481981255834387*^9, 3.48198126118301*^9}}],

Cell[BoxData[{
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["A", "1"], 
    SubscriptBox["uu", "1"]}], "+", 
   RowBox[{
    SubscriptBox["A", "2"], 
    SubscriptBox["uu", "2"]}], "+", 
   RowBox[{
    SubscriptBox["A", "3"], 
    SubscriptBox["uu", "3"]}], "+", 
   RowBox[{
    SubscriptBox["A", "4"], 
    SubscriptBox["uu", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["B", "1"], 
    SubscriptBox["uv", "1"]}], "+", 
   RowBox[{
    SubscriptBox["B", "2"], 
    SubscriptBox["uv", "2"]}], "+", 
   RowBox[{
    SubscriptBox["B", "3"], 
    SubscriptBox["uv", "3"]}], "+", 
   RowBox[{
    SubscriptBox["B", "4"], 
    SubscriptBox["uv", "4"]}]}]}]}], "Output",
 CellChangeTimes->{{3.481984174897996*^9, 3.481984177496077*^9}}],

Cell[TextData[{
 "plus two additional such equations that I refrain for the moment from \
writing out. Hardy fixes the ",
 StyleBox["\[CapitalPsi]", "Output"],
 "-dependent design of \[DoubleStruckU] (",
 StyleBox["i.e",
  FontSlant->"Italic"],
 "., of  ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["u", "1"], ",", 
    SubscriptBox["u", "2"]}], "}"}]],
  CellChangeTimes->{{3.481980148927162*^9, 3.481980155884618*^9}}],
 ") by imposing the requirement ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["A", "1"], "=", "0"}]],
  CellChangeTimes->{{3.481982280217259*^9, 3.481982280622946*^9}}],
 ". This places him in position to fix the design of \[DoubleStruckV] (i.e., \
of  ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["v", "1"], ",", 
    SubscriptBox["v", "2"]}], "}"}]],
  CellChangeTimes->{{3.481980148927162*^9, 3.481980175371999*^9}}],
 ") by imposing the further requirement that ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["B", "4"], "=", "0"}]],
  CellChangeTimes->{{3.481982280217259*^9, 3.481982280622946*^9}, {
   3.48198237807286*^9, 3.481982379665162*^9}}],
 ". At this point he has "
}], "Text",
 CellChangeTimes->{{3.4819820816025476`*^9, 3.481982147100099*^9}, {
  3.481982188882134*^9, 3.4819822490381413`*^9}, {3.48198228909871*^9, 
  3.4819823699429483`*^9}, {3.4819824193771343`*^9, 3.48198244081918*^9}}],

Cell[BoxData[{
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    StyleBox["0", "Input",
     FontColor->RGBColor[1, 0, 0]], 
    SubscriptBox["uu", "1"]}], "+", 
   RowBox[{
    SubscriptBox["A", "2"], 
    SubscriptBox["uu", "2"]}], "+", 
   RowBox[{
    SubscriptBox["A", "3"], 
    SubscriptBox["uu", "3"]}], "+", 
   RowBox[{
    SubscriptBox["A", "4"], 
    SubscriptBox["uu", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["B", "1"], 
    SubscriptBox["uv", "1"]}], "+", 
   RowBox[{
    SubscriptBox["B", "2"], 
    SubscriptBox["uv", "2"]}], "+", 
   RowBox[{
    SubscriptBox["B", "3"], 
    SubscriptBox["uv", "3"]}], "+", 
   RowBox[{
    StyleBox["0",
     FontColor->RGBColor[1, 0, 0]], 
    SubscriptBox["uv", "4"]}]}]}]}], "Output",
 CellChangeTimes->{{3.481984219391725*^9, 3.481984221765366*^9}}],

Cell["from which", "Text",
 CellChangeTimes->{{3.481982588259838*^9, 3.481982589641531*^9}}],

Cell[BoxData[{
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["B", "1"], 
    SubscriptBox["vu", "1"]}], "+", 
   RowBox[{
    SubscriptBox["B", "3"], 
    SubscriptBox["vu", "2"]}], "+", 
   RowBox[{
    SubscriptBox["B", "2"], 
    SubscriptBox["vu", "3"]}], "+", 
   RowBox[{
    StyleBox["0",
     FontColor->RGBColor[1, 0, 0]], 
    SubscriptBox["vu", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["D", "1"], 
    SubscriptBox["vv", "1"]}], "+", 
   RowBox[{
    SubscriptBox["D", "3"], 
    SubscriptBox["vv", "2"]}], "+", 
   RowBox[{
    SubscriptBox["D", "2"], 
    SubscriptBox["vv", "3"]}], "+", 
   RowBox[{
    SubscriptBox["D", "4"], 
    SubscriptBox["vv", "4"]}]}]}]}], "Output",
 CellChangeTimes->{{3.4819842548599777`*^9, 3.4819842576026163`*^9}}],

Cell[TextData[{
 "follow as forced corollaries. (Note that the anticipated C-coefficients are \
actually a permutation of the B-coefficients\[LongDash]this in consequence of \
the special structure of ",
 StyleBox["\[CapitalPsi]", "Output"],
 ".) Though only the ",
 StyleBox["0", "Output",
  FontColor->RGBColor[1, 0, 0]],
 "s and the fact that ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["D", "1"], "\[NotEqual]", "0"}]],
  CellChangeTimes->{{3.4819848151314077`*^9, 3.481984817525647*^9}}],
 " are of relevance to Hardy's argument, they are by now known functions of \
",
 StyleBox["\[Alpha]", "Output"],
 " and ",
 StyleBox["\[Beta]", "Output"],
 ". We have established that ",
 StyleBox["squared coefficients can be read as joint probabilities",
  FontVariations->{"Underline"->True}],
 ", and that these are independent of whether it is Alice or Bob who makes \
the first measurement.  I display those joint probabilities below as \
functions of ",
 StyleBox["\[Xi]", "Output"],
 ": "
}], "Text",
 CellChangeTimes->{{3.481982853081423*^9, 3.481982892095298*^9}, {
  3.4819829262609987`*^9, 3.481982926596655*^9}, {3.481983040448951*^9, 
  3.4819830943395033`*^9}, {3.481984061020384*^9, 3.4819840650004396`*^9}, {
  3.4819847872024727`*^9, 3.481984798643964*^9}, {3.481984835058893*^9, 
  3.4819848428813887`*^9}, {3.481984891183877*^9, 3.4819849894977903`*^9}, {
  3.4820863864607553`*^9, 3.4820864175581903`*^9}, {3.482087987920971*^9, 
  3.482087996923922*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AProbabilities", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SqrtBox["\[Alpha]"], " ", 
         SqrtBox["\[Beta]"]}], ")"}], "2"], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SqrtBox["\[Alpha]"], " ", 
          SqrtBox["\[Beta]"]}], ")"}], "2"], "+", "0.015"}], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "-", "\[Beta]"}], ")"}], "2"]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", 
       RowBox[{"Cos", "[", "\[Xi]", "]"}]}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BProbabilities", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SqrtBox["\[Alpha]"], " ", 
          SqrtBox["\[Beta]"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Alpha]", "2"], "-", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Alpha]", "3"], "+", 
            SuperscriptBox["\[Beta]", "3"]}]]}]], ")"}], "2"], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Alpha]", " ", "\[Beta]", " ", 
          SqrtBox[
           RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Alpha]", "3"], "+", 
           SuperscriptBox["\[Beta]", "3"]}]]], ")"}], "2"], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Alpha]", "3"], "+", 
           SuperscriptBox["\[Beta]", "3"]}]], 
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]]], ")"}], "2"], ",", "0"}], 
     "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", 
       RowBox[{"Cos", "[", "\[Xi]", "]"}]}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CProbabilities", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SqrtBox["\[Alpha]"], " ", 
          SqrtBox["\[Beta]"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Alpha]", "2"], "-", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Alpha]", "3"], "+", 
            SuperscriptBox["\[Beta]", "3"]}]]}]], ")"}], "2"], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Alpha]", "3"], "+", 
           SuperscriptBox["\[Beta]", "3"]}]], 
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]]], ")"}], "2"], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Alpha]", " ", "\[Beta]", " ", 
          SqrtBox[
           RowBox[{"\[Alpha]", "+", "\[Beta]"}]]}], 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Alpha]", "3"], "+", 
           SuperscriptBox["\[Beta]", "3"]}]]], ")"}], "2"], ",", "0"}], "}"}],
     "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", 
       RowBox[{"Cos", "[", "\[Xi]", "]"}]}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}], "}"}]}]}], ";", 
  RowBox[{"DProbabilities", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], "+", "\[Beta]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]], ")"}], "2"], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Alpha]", 
           RowBox[{"3", "/", "2"}]], " ", 
          SuperscriptBox["\[Beta]", 
           RowBox[{"3", "/", "2"}]]}], 
         RowBox[{"1", "-", 
          RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]], ")"}], "2"], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Alpha]", 
            RowBox[{"3", "/", "2"}]], " ", 
           SuperscriptBox["\[Beta]", 
            RowBox[{"3", "/", "2"}]]}], 
          RowBox[{"1", "-", 
           RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]], ")"}], "2"], "+", 
       "0.015"}], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"\[Alpha]", " ", "\[Beta]"}], "+", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}]}], 
         RowBox[{"1", "-", 
          RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]], ")"}], "2"]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", 
       RowBox[{"Cos", "[", "\[Xi]", "]"}]}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.482096115117401*^9, 3.4820961218152514`*^9}, 
   3.482096251951983*^9, {3.482096573720324*^9, 3.48209660423101*^9}, {
   3.4820967312200823`*^9, 3.482096757760933*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{"AProbabilities", ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], "\[Pi]"}], ",", 
        RowBox[{
         FractionBox["1", "2"], "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Xi]\>\"", "}"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\[DoubleStruckU]/\[DoubleStruckU] Probabilities\>\""}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"BProbabilities", ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], "\[Pi]"}], ",", 
        RowBox[{
         FractionBox["1", "2"], "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Xi]\>\"", "}"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\[DoubleStruckU]/\[DoubleStruckV] Probabilities\>\""}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"CProbabilities", ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], "\[Pi]"}], ",", 
        RowBox[{
         FractionBox["1", "2"], "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Xi]\>\"", "}"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\[DoubleStruckV]/\[DoubleStruckU] Probabilities\>\""}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"DProbabilities", ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], "\[Pi]"}], ",", 
        RowBox[{
         FractionBox["1", "2"], "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Xi]\>\"", "}"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\[DoubleStruckV]/\[DoubleStruckV] Probabilities\>\""}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.482096636263537*^9, 3.482096658787257*^9}, {
  3.482096775822523*^9, 3.482096795140401*^9}, {3.482096832021935*^9, 
  3.4820968537406187`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1:eJxF0ntI0wEQB/DppKYQTJkTGWpqGqhgEVFjs5WYlpLpopdW06k1ZzlfVJoh
lc3QsvnLxGfLwqmEopjOzGxkoylLRJfm5vttvk3XfFdQdwfH8fnv7stxRXz7
CBKJZPynT/2dR0IPjrSZfSST/hWH88yW1TTlBD5N9IS7V62BeUSdQUAbA4uI
kk+p3lpwClG0l+B9Az8lcrXW17lgKZFTc2kpC1wV72nmq2SB62NqQv2TYsAK
R+PMiPob4M/8UtOTkxqw6mIdSe+eDlaXKJ6rXGPB7dF9lVFhuH/HVUnAuQ98
sOaRQqFZDAN3iWUi+b7H4O9JqYfkCmOwNnegzc/FHNxLLLz2lJ4A98tTvNXz
VuDBSLJRw5d88FD47u1jNmzwcMLdUeqgK3gkrlZgUVYBHhW7dl7uTwaPZb/w
O8zG+8Yl03wvKd438epWSH5MO3iyuG/LwYcJnio8WsY83gL+8WaYmVddAp4u
vyJ0c7QEzzRa36cYdYBnW9pl8ZRa8JySL6RauoHnuw7Q9Jnz4AWhyD0tzRE9
4anVBQ2DF6NrVzvHML/FWbogIu42eOkm3begzh+tJycLN+bAP+Oj397rLkav
J4Z4CDCP5aTY4KxNG/CKCaU1w2ccnWHLUTs3g/Wm9iYyihCd1eyx56Uc/Muc
q2Sz2tCZIWcKhAawgb7rrDRAhc4uLWUz8d8MOb0rX2cj0XkWXrxi/HdDUfLQ
A9MUtIzLaOkpRMs3JOcTu9C6wMS4Bl90n1hlEh2IHmik5zhcQI8617xLv4ae
WZ8jBaWit2T8J2tN4FWSrtquUokmU7er+Wr0zjuFmlYdmhrQzcjHPFYtxE4V
/tto2vsEDnkH2trZnB9FQzOCect2DLSNpPJhpwPaTrlpleaCtl/3K2ft/+/f
ZJQ8Hw==
     "]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], LineBox[CompressedData["
1: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
o3IYmj9i9chY7//+H7iip/M/PweEOA==
     "]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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
0q99udqb/v//Abv/A/xlSRk=
     "]]}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
7qkr//9/wOZ/cKP2Tg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Xi]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"\[DoubleStruckU]/\[DoubleStruckU] Probabilities\"", TraditionalForm],
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.9999999358858641}}, {{
     0, 1.5707963267948966`}, {0., 0.9999999358858641}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.482096666083185*^9, 3.482096811717697*^9, 
  3.482096858038003*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1:eJwVWgk0Ve8XFRUpRZSQBkJUMobCLo0oSYZShso8k1TIXKQSMmcqKUOUJIWM
75aQzGSI/AzvIeK9Zwz/+1/rrfXWXve+e84+Z5/9fd9dT8/56k5LFhYWVvJz
7v/f6lcU/6vnLGP7/zflm8h+4Mm2Q6U0MeCx8i2mxhmcjfxpsf/tPM4+WGc1
eJwNZpEfZm34BmEWuPnTo7cJcI5Mrww60Qnn69qNhWwP4RuZJBFp1grf84Hy
jsfs8DgyrlPAQQ+PN37Xmi1yR0pkTP7lqQgkP8yM85RdhbfXNTi1iEPIDcdP
hxvp+OiSf0XH0wUFpd82zlv2o1yUNczyoyOKr5SetS5+hnKFFTvOaUqj+FbU
DVnmNMqPLb9T/fkXxY8vW+UOd6Lc6l8b74I7iksqErwvCKI8a0a4Ut0TJZv7
vvDqH0WF3GjONso9lFQ7HeJW3INKjZba9oZUlO54Ge2f0gzK1VdrNKktKNfT
oX+xEQPFLfD47vgJlF9SXxJ1MwUlwMyfXZsT5Ra7r20yDAXlOf8sJecwym8M
H3DnFgLldwgVrtkoj+drD3EPAGFu91VhPgDlv6Sz3Pk88cVU+u6OdftRcU2P
+7OXMr44cZYvfdZChb2d94MxJr7cGfrX42SBiuvevCobGfiSlOKe0JCAisDQ
4vANOvjSw22xKXo1KtIMGndkh+Lrpamja4W7UfH7WVd1tA+qL35gmd4fisqL
HFs0uRiothvao3nTE5XmPaMywVyo9t5skFhmi0qb7LuLOb6oTvbIOnr2FCpv
SXNxLImi+j+l8+HO7KiMaVCMGe/GN4ePL6Vyg1DZFJy4ZNmBGt9ibbN9Pqg6
+jH2F+dB1ISP3nh3wwlVWkEhci1zqHkulLrqswmqzp3aeEurFTUUL8brM6qo
Mi2YyAzwR+0a1aQ5hwVU3d6bMRUrgNrIz3+fvL6Fqtd3V/B9iENdenl09R5X
UNb93LjtQh7qPqT6DVgOgLLRS5H/LQvqvvo5sKQagrJl09bd2rWoox3WUNl0
EBRRGbkaM2N831s2nrnMCooKm42s9gC+55edfNAUCco14b3yh++gvuLz3Nnb
70DJ23JJ11kX9U1JA/bvd4FSkGdsb1CD+v/u/AgejwGlSINteZ8WfqxSSy+/
5glKlZb+itnj+HHqs57sGQ1QWqbbeJ9swI8fJdm8O0jdTJf2lk8x0ODUk2t/
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
     "]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], LineBox[CompressedData["
1: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
z5OmLlLv6UFzovJgvDiYtv/IN3Jf1uavT1AEI/6Wgu/X6+Q+6bKnefqDkfQp
p1xXhtw373CrIjJ++oHSE8fJeY7/erCDQQPjs1KbjbEWub9STZ63gsEou3ru
dSO5D393nFvz6R0YlVn9Y6YvQQxvV6bI+YDxS2HypjmZ/+DasrU6q8Do2sH9
+Byp375H19VXd4DRa0dt7ibn3Wvp6NcaBwY9RVj0IukHPVJv5+J0wRiXlE61
8yX9KEHajxKLQXYxyidnch7tuvMvnHsxKMXrwrhJ+t8vi8Xp6rsYlDnBVFi0
BfGz5JSjpD8G5UJ83G+R+169mfdYiTMGldc8WLrrDqKqItFzChjUXvFS8MEe
EKUV5zTf1GLQbrbpUFQGiPeBR/xG2jB4SdUiYCOpr8x7a+S3+WDQxeNP9TMe
EBmehxJG4zF4fXLELIb0t9fHOTfsvYLBByMrLyeR/pqQyicSPYjBN937n2Yl
gwiVcuL4vh2D71pkLeZJPQd3PT3twIbB7BqRzUdI/Tx8IlX25wYGCz8uJLYU
gfCfNKutfI3BH4+L3yw1gPC2N7KxGMfg0KEjn/WXgbA/UhxwcApDsvGG3YNW
INRaDlvXcWBIIUozWYn0P9Xu3KnDchjaE7zXzof0I+WBbO7ghxg6cF1gmJes
X/GPMWUxFUN6J35PqwaBkAw/raWkiyGHpTMr738kz+vJ8XgBdwy9OuMoJ0me
7/XZYVfyOTGU/so0iBoGWk15MN/UFQxlTWkOsa8G7fuvcw08ThgqeCjy6g8b
aGX1cY++BGPoR+7P7bHDoL0Pzfu7MQZDIzy7JDeR7y9h/aHZm5kY3lM4s4nP
HTRdYftrGmMY3sfZ7XVnFDQtRyptrTKG1QxrWsYdQUPu0HymD4YPD6Q+qT0H
moqacndfE4ZN+E8LhhwHTZLN6696H4Y9HYt4V0uic/766TNsExguEr7Ltawe
nWl7KkyjGBguMTjzNJ18/0uk19Ff7sVweYDaTvNV6Ix5mhCKEgxXT03pvz+I
TupQlF1uHIY7a20jrTPQ6WMoN1LqheGlgGMSX4LQaSj9PeqiFv5qTgto+Guh
Y3qNvIejOP5+q025ypWLDoXbROVrNYxUWDuuF5RDW4jVLsKJDaPNewVmQkbR
El7JziUTiDHHK4oBAZJojmgLVf27H2MDmm3t5t1ofGA1d059Lcadc2cb+o6i
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
ALIGP3s=
     "]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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

     "]]}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJxF0ntI0wEQB/DppKYQTJkTGWpqGqhgEVFjs5WYlpLpopdW06k1ZzlfVJoh
lc3QsvnLxGfLwqmEopjOzGxkoylLRJfm5vttvk3XfFdQdwfH8fnv7stxRXz7
CBKJZPynT/2dR0IPjrSZfSST/hWH88yW1TTlBD5N9IS7V62BeUSdQUAbA4uI
kk+p3lpwClG0l+B9Az8lcrXW17lgKZFTc2kpC1wV72nmq2SB62NqQv2TYsAK
R+PMiPob4M/8UtOTkxqw6mIdSe+eDlaXKJ6rXGPB7dF9lVFhuH/HVUnAuQ98
sOaRQqFZDAN3iWUi+b7H4O9JqYfkCmOwNnegzc/FHNxLLLz2lJ4A98tTvNXz
VuDBSLJRw5d88FD47u1jNmzwcMLdUeqgK3gkrlZgUVYBHhW7dl7uTwaPZb/w
O8zG+8Yl03wvKd438epWSH5MO3iyuG/LwYcJnio8WsY83gL+8WaYmVddAp4u
vyJ0c7QEzzRa36cYdYBnW9pl8ZRa8JySL6RauoHnuw7Q9Jnz4AWhyD0tzRE9
4anVBQ2DF6NrVzvHML/FWbogIu42eOkm3begzh+tJycLN+bAP+Oj397rLkav
J4Z4CDCP5aTY4KxNG/CKCaU1w2ccnWHLUTs3g/Wm9iYyihCd1eyx56Uc/Muc
q2Sz2tCZIWcKhAawgb7rrDRAhc4uLWUz8d8MOb0rX2cj0XkWXrxi/HdDUfLQ
A9MUtIzLaOkpRMs3JOcTu9C6wMS4Bl90n1hlEh2IHmik5zhcQI8617xLv4ae
WZ8jBaWit2T8J2tN4FWSrtquUokmU7er+Wr0zjuFmlYdmhrQzcjHPFYtxE4V
/tto2vsEDnkH2trZnB9FQzOCect2DLSNpPJhpwPaTrlpleaCtl/3K2ft/+/f
ZJQ8Hw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Xi]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"\[DoubleStruckU]/\[DoubleStruckV] Probabilities\"", TraditionalForm],
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.9999999679429319}}, {{
     0, 1.5707963267948966`}, {0., 0.9999999679429319}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.482096666083185*^9, 3.482096811717697*^9, 
  3.482096858296926*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1:eJwVWgk0Ve8XFRUpRZSQBkJUMobCLo0oSYZShso8k1TIXKQSMmcqKUOUJIWM
75aQzGSI/AzvIeK9Zwz/+1/rrfXWXve+e84+Z5/9fd9dT8/56k5LFhYWVvJz
7v/f6lcU/6vnLGP7/zflm8h+4Mm2Q6U0MeCx8i2mxhmcjfxpsf/tPM4+WGc1
eJwNZpEfZm34BmEWuPnTo7cJcI5Mrww60Qnn69qNhWwP4RuZJBFp1grf84Hy
jsfs8DgyrlPAQQ+PN37Xmi1yR0pkTP7lqQgkP8yM85RdhbfXNTi1iEPIDcdP
hxvp+OiSf0XH0wUFpd82zlv2o1yUNczyoyOKr5SetS5+hnKFFTvOaUqj+FbU
DVnmNMqPLb9T/fkXxY8vW+UOd6Lc6l8b74I7iksqErwvCKI8a0a4Ut0TJZv7
vvDqH0WF3GjONso9lFQ7HeJW3INKjZba9oZUlO54Ge2f0gzK1VdrNKktKNfT
oX+xEQPFLfD47vgJlF9SXxJ1MwUlwMyfXZsT5Ra7r20yDAXlOf8sJecwym8M
H3DnFgLldwgVrtkoj+drD3EPAGFu91VhPgDlv6Sz3Pk88cVU+u6OdftRcU2P
+7OXMr44cZYvfdZChb2d94MxJr7cGfrX42SBiuvevCobGfiSlOKe0JCAisDQ
4vANOvjSw22xKXo1KtIMGndkh+Lrpamja4W7UfH7WVd1tA+qL35gmd4fisqL
HFs0uRiothvao3nTE5XmPaMywVyo9t5skFhmi0qb7LuLOb6oTvbIOnr2FCpv
SXNxLImi+j+l8+HO7KiMaVCMGe/GN4ePL6Vyg1DZFJy4ZNmBGt9ibbN9Pqg6
+jH2F+dB1ISP3nh3wwlVWkEhci1zqHkulLrqswmqzp3aeEurFTUUL8brM6qo
Mi2YyAzwR+0a1aQ5hwVU3d6bMRUrgNrIz3+fvL6Fqtd3V/B9iENdenl09R5X
UNb93LjtQh7qPqT6DVgOgLLRS5H/LQvqvvo5sKQagrJl09bd2rWoox3WUNl0
EBRRGbkaM2N831s2nrnMCooKm42s9gC+55edfNAUCco14b3yh++gvuLz3Nnb
70DJ23JJ11kX9U1JA/bvd4FSkGdsb1CD+v/u/AgejwGlSINteZ8WfqxSSy+/
5glKlZb+itnj+HHqs57sGQ1QWqbbeJ9swI8fJdm8O0jdTJf2lk8x0ODUk2t/
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
     "]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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
z5OmLlLv6UFzovJgvDiYtv/IN3Jf1uavT1AEI/6Wgu/X6+Q+6bKnefqDkfQp
p1xXhtw373CrIjJ++oHSE8fJeY7/erCDQQPjs1KbjbEWub9STZ63gsEou3ru
dSO5D393nFvz6R0YlVn9Y6YvQQxvV6bI+YDxS2HypjmZ/+DasrU6q8Do2sH9
+Byp375H19VXd4DRa0dt7ibn3Wvp6NcaBwY9RVj0IukHPVJv5+J0wRiXlE61
8yX9KEHajxKLQXYxyidnch7tuvMvnHsxKMXrwrhJ+t8vi8Xp6rsYlDnBVFi0
BfGz5JSjpD8G5UJ83G+R+169mfdYiTMGldc8WLrrDqKqItFzChjUXvFS8MEe
EKUV5zTf1GLQbrbpUFQGiPeBR/xG2jB4SdUiYCOpr8x7a+S3+WDQxeNP9TMe
EBmehxJG4zF4fXLELIb0t9fHOTfsvYLBByMrLyeR/pqQyicSPYjBN937n2Yl
gwiVcuL4vh2D71pkLeZJPQd3PT3twIbB7BqRzUdI/Tx8IlX25wYGCz8uJLYU
gfCfNKutfI3BH4+L3yw1gPC2N7KxGMfg0KEjn/WXgbA/UhxwcApDsvGG3YNW
INRaDlvXcWBIIUozWYn0P9Xu3KnDchjaE7zXzof0I+WBbO7ghxg6cF1gmJes
X/GPMWUxFUN6J35PqwaBkAw/raWkiyGHpTMr738kz+vJ8XgBdwy9OuMoJ0me
7/XZYVfyOTGU/so0iBoGWk15MN/UFQxlTWkOsa8G7fuvcw08ThgqeCjy6g8b
aGX1cY++BGPoR+7P7bHDoL0Pzfu7MQZDIzy7JDeR7y9h/aHZm5kY3lM4s4nP
HTRdYftrGmMY3sfZ7XVnFDQtRyptrTKG1QxrWsYdQUPu0HymD4YPD6Q+qT0H
moqacndfE4ZN+E8LhhwHTZLN6696H4Y9HYt4V0uic/766TNsExguEr7Ltawe
nWl7KkyjGBguMTjzNJ18/0uk19Ff7sVweYDaTvNV6Ix5mhCKEgxXT03pvz+I
TupQlF1uHIY7a20jrTPQ6WMoN1LqheGlgGMSX4LQaSj9PeqiFv5qTgto+Guh
Y3qNvIejOP5+q025ypWLDoXbROVrNYxUWDuuF5RDW4jVLsKJDaPNewVmQkbR
El7JziUTiDHHK4oBAZJojmgLVf27H2MDmm3t5t1ofGA1d059Lcadc2cb+o6i
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
ALIGP3s=
     "]]}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJxF0ntI0wEQB/DppKYQTJkTGWpqGqhgEVFjs5WYlpLpopdW06k1ZzlfVJoh
lc3QsvnLxGfLwqmEopjOzGxkoylLRJfm5vttvk3XfFdQdwfH8fnv7stxRXz7
CBKJZPynT/2dR0IPjrSZfSST/hWH88yW1TTlBD5N9IS7V62BeUSdQUAbA4uI
kk+p3lpwClG0l+B9Az8lcrXW17lgKZFTc2kpC1wV72nmq2SB62NqQv2TYsAK
R+PMiPob4M/8UtOTkxqw6mIdSe+eDlaXKJ6rXGPB7dF9lVFhuH/HVUnAuQ98
sOaRQqFZDAN3iWUi+b7H4O9JqYfkCmOwNnegzc/FHNxLLLz2lJ4A98tTvNXz
VuDBSLJRw5d88FD47u1jNmzwcMLdUeqgK3gkrlZgUVYBHhW7dl7uTwaPZb/w
O8zG+8Yl03wvKd438epWSH5MO3iyuG/LwYcJnio8WsY83gL+8WaYmVddAp4u
vyJ0c7QEzzRa36cYdYBnW9pl8ZRa8JySL6RauoHnuw7Q9Jnz4AWhyD0tzRE9
4anVBQ2DF6NrVzvHML/FWbogIu42eOkm3begzh+tJycLN+bAP+Oj397rLkav
J4Z4CDCP5aTY4KxNG/CKCaU1w2ccnWHLUTs3g/Wm9iYyihCd1eyx56Uc/Muc
q2Sz2tCZIWcKhAawgb7rrDRAhc4uLWUz8d8MOb0rX2cj0XkWXrxi/HdDUfLQ
A9MUtIzLaOkpRMs3JOcTu9C6wMS4Bl90n1hlEh2IHmik5zhcQI8617xLv4ae
WZ8jBaWit2T8J2tN4FWSrtquUokmU7er+Wr0zjuFmlYdmhrQzcjHPFYtxE4V
/tto2vsEDnkH2trZnB9FQzOCect2DLSNpPJhpwPaTrlpleaCtl/3K2ft/+/f
ZJQ8Hw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Xi]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"\[DoubleStruckV]/\[DoubleStruckU] Probabilities\"", TraditionalForm],
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.9999999679429319}}, {{
     0, 1.5707963267948966`}, {0., 0.9999999679429319}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.482096666083185*^9, 3.482096811717697*^9, 
  3.4820968584926157`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1:eJw12nk0lG8bB3BZivZCJUkpQiWVosK3/CpLJUuorNkqW/YW7YhSM2MsRfZ9
yS47ISQJ2ZJ1kmXGvs+g8j798Z4z58z5nGfO3Mt1Xfdz/3Fp3TLdacHGxsZO
fC7/+1a8duRX3coPHCDlaQ57bs8D/LafKGGI/vO44adNuEj9YX4gfYGw1kpN
qVLopW5owVzGP2uTKK9gTM1h3eDr/+de/emXMCtMXVMt8JKwdt2mgwu4nsoW
biAeR1hH6iCbBKwjtKUnZEsJ6209Om2GW9TYco+z7YSvJH72roFD+X3J1ZL/
xjOYidwnDqfCWMfWQ16Er218pVgGl+y6wojjfIQtBZ23b8btFBan1alIwjZ7
tCUTcDd+5wUZVSnCTuqKdYlwi1AL+KtRSNgtwdQjHQ+CnLqrL6sQ9lRn6zbD
I2roHqpxC2GKnpPPRjyu/CUndfjf+kK69hpp4Un57U4/2duEk5jpulQ8/bD6
MeuEIuGCD5HRIXAvjBQ1BCfh2gvvU7bDI+/I53KlGsI9BQUCQvDMrrHbc9aX
8KywX6M1nmUYb3ypdhmk/NUBWLcSXinTOZPq2wmLydTrBsA7yVtfV7OPsNLm
W95kPI/ftlSok0zYRPdabxFeRGfE7LjiSPjJKrYV5vCJOKviaShHOEa9kMMX
L0PaR4ZM/hKuOSGocx6vgm75XjSvJDzFKJ2sBJn6pl3ARgukgvMz3y6bgqIc
+AFyqwk/9Jh8/ROUyp8bHPInCGcplm+Zg2+5y/vW4hyQCsVe967xA/VkKTcP
gghbWEdHFYL6YeXVE2X3Ccd/m6+mwq8w7G9E5X8gFcmWntfaBv9jDI0mZTHC
ng/unJKFf97haK7PKwl/l339yxQB2dXKVrUNIBV7rd0U/gKBhzcGhapnEe43
MbsejcAMg+H6hkCQSlQEH6kp4XXKJEWm2RCkD4LHuBZH8Gbfid7ruicJ+zQK
XRzHm6RnMkFtu0EqXXbKoOkaguK3tv3tGCK8uD479j8Ei1rsPWj4FaSyRwly
f9sQHJ32wKwnHaRyHo/ihC94G3F6Z/UvIt4f999PENmGkO0kp0WLq4Q/NRzf
z4+QkLaq/YNE/Cuu/xDlYSI0yNaKOkzEvzL/vmXmEMKpgVkGU0S8q+P2vBRO
QMSaUvlg/lcgfX4a513mhgitI8KeGY0g1VgOayY9R0TH9n6DIX2QapWvvtNp
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
sJ9Aw0iN7sDxS4gzE46+cYIb36xylq6tT0V8h3vwp8pcfHMM+Ewv4UP8NK3u
SKgBvt1z9re3vouE1XrhtyY34tuLQxKPqk4jQYGq9eNOIr4lpmiHuXUgIVLh
yZm91fhGj47vGORGou1t7hSdQDRaUjR0i02RLNAyikxLNN4S2Lgl5xCSZdt2
a35zQuPtyKb2NHYk6yzcZTdpQaN3lp5RRBSSqeEl63YHoTGp1cjSvRfv1th5
K5ltReP4NhtXNVOk8Oz13MgmhabbCd4B302RJuC/XKiEhWbv0tLmSTNkNBQz
fXLeoJmSp0e5Z4KM3jzfqKNn0fwmbew8hwEyZsobKCWlaE4IF/zIr4tMgeVa
juJDaK5+4JpxTAWZpqqLkke10MJ9fN+rJ1LIZFbbO19KRYtX1puz61nIlqpg
pJGL0fos7lau9EvkfC1YuygQh1aSy8D3QzXI+XXpzFdfBloDzxgyj3Ajh/XX
f4RHE62xfedlj3kgd7e7902/CLRWiojnKrkh9/7FLQybdfjOEfoz95IV8qTG
LY5tf4nvjwO0c+8oIz/Csi1g4hHa7nnI5payoyg7YnjddxO0v+mpOye5AeW7
Dommx51HJ3UiWilcBVUyuk6JSavRnfvobO34ZnwRvRB5mH0laDc5lhV8CkaD
nHR0xfASfprvWDolJI/GRtGGtrSr6HV+0LeethctGTXNIX9k8Mvx/Y2NCSlo
0zLWnVLUR9+zvU2G3ffRvnDJamXpIvpeWIQqKM+gg3P/ibwrQegjhV/flmGD
jrVsZX8OHUbf640LHR766Nj5+vNKrjb0xS+IXJE8jg4Vj5qPa8+j73O1wyWX
eXQEaI1X7KKhf43FunNrXNEp+fTbHZNR9PuHnZOTd0DXKe1jb3xZ6H9DfuRv
x4Yu1RUVoTdk0R/yOGsinIQujfedo7Oh6I8x25bInoQu479v32r7oz97z5hA
dS+6Hp4K3fWVjv6mDMqiziV05XtvF3vBj4GNFa0ldkfRLTlsJmK3HgObclZt
Da9A98FKUx+ZZRjYGg/Xb1rolnsjnumbiwGR5wkHZOzQfXbPZIzbDAYOqd8N
X4hHt8l44wp2Lgxotm174rUF3QGCxXe55jBAGTY9Hb6AbmZRL2/oYwwEHKQq
MBXR/XdX5OhXPQwE3S6XVX+CHs4nG3KvHsFAFKeIxB9u9GwQHgirrsZA1rbe
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
37l4LvHEwf/3W/0Pl4jVLA==
     "]]}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
DCRl0c0XplTwU57k9Re8HrihW8TDi6tmkcxHtYR15SN0rzMvtEr5TLLFQOw5
Jro36s68CM4g8znQkFypgG4VeS0260skOzRJVSyhW4M/0FzbmKxHM7P0TTW6
dWYrc9ZsIFlni8zxB+j+r5f99wyLrGfCNdF9bOg2ywt/UpBG1nvzqR91M+i2
TvgwH32B1IPDXMCdXnQ7h64+5HGQ1EtkvLgqGb/fkXvTm2ZAW1nF8OH1Rnfg
zg6DZQ2k3t7lH5LlQ/c1mXVJP5JJPb4+59U8iO64qSf6KQdA477Pb6+lie6H
V3ua6kn9LT/md+5BF7ozRNfaMd6CtmxZte5eMh9U7ajAvftA49BdVjvsj+6K
D/W8nmGkP2oWk50b0P3WjuN+whsQS9qNLoevorvt6sXiEX3SX0sri0La0d0v
UqQvdIX032Gfn+pn0U3PGm/SqSb9ebvASkcE3QsfHMejAWKmr2BjOTd61okc
lt+uC2K8J2HN9DH0bMy6UWwTCGK0LDHrXR96VLVq9lwn/U6/eTrKWw49FNsd
tu2kv3+wfN8/zUWPQ5ZMQjB5f+pU52d+uY+ezJ2z3O/UQbye+SOcZoee3Pdb
7k2dBVH9K0VtSR09hI37RvE8EBXtKz5YsqHn3eW+3R6qIGhXdXO9N6BnpKHh
kqASiGcqa07aLkevmvXjUeuNICJbD+mFL6B3x692/zBnEOFjNTaFs+jFZeHl
uekgwqb5/RVp6D2aEb6BTRZEUJtqmagDen1/+VpnSoE4M1thm7gXvbTQ/R8n
14AwiGoOZMqit2rEsSo2EYR+u/RXyUvorTcLKtJYC4IiMvjB1wi9HZuK7l8i
WcNlRGvgPnoXm6ScOCVAyLiuU5U7jj6KzOz8GilQZwd+nPxngL79twVGypJB
nTqmxnBsRJ/xrHK3jTSooy83KTvno8++wbEmTQbUPntV0aQP6Lvi8ylSWQ7U
eu6lVb7L0femluxqFUBN6A+pdqCh75NKtfBAFqgxlyOb7erQ9y2ha3kYuX5L
OJqy+xD6hs4IjDVsAjVYKDT4Rw/6uXgrrTffBdXpXF7J+gn0yxcpyRcngKr0
WQIrrNB/mpO9/B3ZdxZxrwWjF/0ek5cK+qdQ8izp6eAfDvR7dzGyFg1Q8mRD
DPW2I/r9SwbiVWZQclf0Qkh9I/rDXWvOxBmj5HyA6ZeRLejPfn9lnS0HSnYY
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
/2SiqkXd/wAyjTIK
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Xi]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"\[DoubleStruckV]/\[DoubleStruckV] Probabilities\"", TraditionalForm],
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.9999999999999989}}, {{
     0, 1.5707963267948966`}, {0., 0.9999999999999989}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.482096666083185*^9, 3.482096811717697*^9, 
  3.482096858733782*^9}]
}, Open  ]],

Cell[TextData[{
 "Except for those that vanish identically, all are non-zero except (in some \
instances) at\n",
 StyleBox["\[Xi] = {0, \[Pi]/4, \[Pi]/2}", "Output"],
 ". The 0s and 1s that appear at ",
 StyleBox["\[Xi]=0", "Output"],
 " (where ",
 StyleBox["\[Alpha]=1", "Output"],
 " and ",
 StyleBox["\[Beta]=0", "Output"],
 ") can be understood as follows: "
}], "Text",
 CellChangeTimes->{{3.4819854313921547`*^9, 3.481985508025079*^9}, {
   3.48198556413354*^9, 3.481985589020732*^9}, 3.481986570725676*^9, 
   3.4820887736475353`*^9, {3.482088811810186*^9, 3.482088988768106*^9}, {
   3.482173227594062*^9, 3.482173235174622*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.482173231507511*^9, 3.482173231758947*^9}}],

Cell[TextData[{
 StyleBox["A note concerning the edge values of those curves", "Subsection",
  FontSize->12],
 ": Those occur at \[Xi] = 0 and \[Xi] = 1, where \[CapitalPsi] is \
disentangled, so are susceptible to direct analysis. I do so as a check on \
the accuracy of the results in hand."
}], "Text",
 CellChangeTimes->{{3.482173091899843*^9, 3.482173195041909*^9}}],

Cell[TextData[{
 "At ",
 StyleBox["\[Xi]=0", "Output"],
 " we have"
}], "Text",
 CellChangeTimes->{3.4821732417136183`*^9}],

Cell[BoxData[
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{"up", "\[CircleTimes]", "up"}]}]], "Input",
 CellChangeTimes->{{3.482089008213813*^9, 3.4820890215673227`*^9}}],

Cell["while from", "Text",
 CellChangeTimes->{{3.482089066317679*^9, 3.482089067866701*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["u", "1"], "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        SqrtBox["\[Beta]"], 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]},
      {
       RowBox[{"-", 
        FractionBox[
         SqrtBox["\[Alpha]"], 
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["u", "2"], "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        SqrtBox["\[Alpha]"], 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]},
      {
       FractionBox[
        SqrtBox["\[Beta]"], 
        SqrtBox[
         RowBox[{"\[Alpha]", "+", "\[Beta]"}]]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["v", "1"], "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Alpha]", 
           RowBox[{"3", "/", "2"}]]}], "+", 
         RowBox[{
          SqrtBox["\[Alpha]"], " ", "\[Beta]"}], "-", 
         RowBox[{
          SqrtBox["\[Beta]"], " ", 
          SqrtBox[
           RowBox[{"\[Alpha]", " ", "\[Beta]"}]]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          SqrtBox["\[Beta]"]}], "+", 
         SuperscriptBox["\[Beta]", 
          RowBox[{"3", "/", "2"}]], "+", 
         RowBox[{
          SqrtBox["\[Alpha]"], " ", 
          SqrtBox[
           RowBox[{"\[Alpha]", " ", "\[Beta]"}]]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["v", "2"], "[", 
   RowBox[{"\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"\[Alpha]", " ", 
          SqrtBox["\[Beta]"]}], "-", 
         SuperscriptBox["\[Beta]", 
          RowBox[{"3", "/", "2"}]], "-", 
         RowBox[{
          SqrtBox["\[Alpha]"], " ", 
          SqrtBox[
           RowBox[{"\[Alpha]", " ", "\[Beta]"}]]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Alpha]", 
           RowBox[{"3", "/", "2"}]]}], "+", 
         RowBox[{
          SqrtBox["\[Alpha]"], " ", "\[Beta]"}], "-", 
         RowBox[{
          SqrtBox["\[Beta]"], " ", 
          SqrtBox[
           RowBox[{"\[Alpha]", " ", "\[Beta]"}]]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]], " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]}], "Input",
 CellChangeTimes->{{3.482087193342154*^9, 3.4820872122619543`*^9}, {
   3.482087360718267*^9, 3.48208750224511*^9}, 3.482087533044814*^9, {
   3.4820875663550053`*^9, 3.482087566884815*^9}}],

Cell["we have", "Text",
 CellChangeTimes->{{3.482089101260253*^9, 3.482089102160199*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["u", "1"], "[", 
   RowBox[{"1", ",", "0"}], "]"}], "\[Equal]", 
  RowBox[{"-", "dn"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["u", "2"], "[", 
   RowBox[{"1", ",", "0"}], "]"}], "\[Equal]", 
  "up"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["v", "1"], "[", 
   RowBox[{"1", ",", "0"}], "]"}], "\[Equal]", 
  RowBox[{"-", "up"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["v", "2"], "[", 
   RowBox[{"1", ",", "0"}], "]"}], "\[Equal]", 
  RowBox[{"-", "dn"}]}]}], "Input",
 CellChangeTimes->{{3.48208759767389*^9, 3.4820876410281982`*^9}, {
  3.48208775899403*^9, 3.482087796755117*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.482089116185349*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.482089116225669*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.482089116295599*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4820891163474092`*^9}]
}, Open  ]],

Cell["The equations", "Text",
 CellChangeTimes->{{3.482089851502441*^9, 3.482089857618989*^9}}],

Cell[BoxData[{
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    StyleBox["0", "Input",
     FontColor->RGBColor[1, 0, 0]], 
    SubscriptBox["uu", "1"]}], "+", 
   RowBox[{
    SubscriptBox["A", "2"], 
    SubscriptBox["uu", "2"]}], "+", 
   RowBox[{
    SubscriptBox["A", "3"], 
    SubscriptBox["uu", "3"]}], "+", 
   RowBox[{
    SubscriptBox["A", "4"], 
    SubscriptBox["uu", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["B", "1"], 
    SubscriptBox["uv", "1"]}], "+", 
   RowBox[{
    SubscriptBox["B", "2"], 
    SubscriptBox["uv", "2"]}], "+", 
   RowBox[{
    SubscriptBox["B", "3"], 
    SubscriptBox["uv", "3"]}], "+", 
   RowBox[{
    StyleBox["0",
     FontColor->RGBColor[1, 0, 0]], 
    SubscriptBox["uv", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["B", "1"], 
    SubscriptBox["vu", "1"]}], "+", 
   RowBox[{
    SubscriptBox["B", "3"], 
    SubscriptBox["vu", "2"]}], "+", 
   RowBox[{
    SubscriptBox["B", "2"], 
    SubscriptBox["vu", "3"]}], "+", 
   RowBox[{
    StyleBox["0",
     FontColor->RGBColor[1, 0, 0]], 
    SubscriptBox["vu", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["D", "1"], 
    SubscriptBox["vv", "1"]}], "+", 
   RowBox[{
    SubscriptBox["D", "3"], 
    SubscriptBox["vv", "2"]}], "+", 
   RowBox[{
    SubscriptBox["D", "2"], 
    SubscriptBox["vv", "3"]}], "+", 
   RowBox[{
    SubscriptBox["D", "4"], 
    SubscriptBox["vv", "4"]}]}]}]}], "Output",
 CellChangeTimes->{{3.48208923057655*^9, 3.482089231075474*^9}}],

Cell["therefore become", "Text",
 CellChangeTimes->{{3.482089863514255*^9, 3.482089866002111*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"up", "\[CircleTimes]", "up"}], "=", 
  RowBox[{
   RowBox[{
    StyleBox["0", "Input",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{"dn", "\[CircleTimes]", "dn"}]}], "-", 
   RowBox[{
    SubscriptBox["A", "2"], 
    RowBox[{"dn", "\[CircleTimes]", "up"}]}], "-", 
   RowBox[{
    SubscriptBox["A", "3"], 
    RowBox[{"up", "\[CircleTimes]", "dn"}]}], "+", 
   RowBox[{
    SubscriptBox["A", "4"], 
    RowBox[{"up", "\[CircleTimes]", "up"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"up", "\[CircleTimes]", "up"}], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["B", "1"], 
    RowBox[{"dn", "\[CircleTimes]", "up"}]}], "+", 
   RowBox[{
    SubscriptBox["B", "2"], 
    RowBox[{"dn", "\[CircleTimes]", "dn"}]}], "-", 
   RowBox[{
    SubscriptBox["B", "3"], 
    RowBox[{"up", "\[CircleTimes]", "up"}]}], "-", 
   RowBox[{
    StyleBox["0",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{"up", "\[CircleTimes]", "dn"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"up", "\[CircleTimes]", "up"}], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["B", "1"], 
    RowBox[{"up", "\[CircleTimes]", "dn"}]}], "-", 
   RowBox[{
    SubscriptBox["B", "3"], 
    RowBox[{"up", "\[CircleTimes]", "up"}]}], "+", 
   RowBox[{
    SubscriptBox["B", "2"], 
    RowBox[{"dn", "\[CircleTimes]", "dn"}]}], "-", 
   RowBox[{
    StyleBox["0",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{"dn", "\[CircleTimes]", "up"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"up", "\[CircleTimes]", "up"}], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["D", "1"], 
    RowBox[{"up", "\[CircleTimes]", "up"}]}], "+", 
   RowBox[{
    SubscriptBox["D", "3"], 
    RowBox[{"up", "\[CircleTimes]", "dn"}]}], "+", 
   RowBox[{
    SubscriptBox["D", "2"], 
    RowBox[{"dn", "\[CircleTimes]", "up"}]}], "+", 
   RowBox[{
    SubscriptBox["D", "4"], 
    RowBox[{"dn", "\[CircleTimes]", "dn"}]}]}]}]}], "Output",
 CellChangeTimes->{{3.482089289579185*^9, 3.482089418652895*^9}, {
   3.482089449044218*^9, 3.4820895754341097`*^9}, {3.482089609018231*^9, 
   3.482089637019372*^9}, 3.482089670926878*^9, {3.4820897142920856`*^9, 
   3.482089794495874*^9}, 3.482089830532003*^9}],

Cell["which entail", "Text",
 CellChangeTimes->{{3.482089872577797*^9, 3.482089875609633*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["A", "4"], "=", 
  RowBox[{
   RowBox[{"-", 
    SubscriptBox["B", "3"]}], "=", 
   RowBox[{
    SubscriptBox["D", "1"], "=", "1"}]}]}]], "Output",
 CellChangeTimes->{{3.4820898849612007`*^9, 3.482089906867861*^9}}],

Cell["\<\
and force all other coefficients to vanish, in precise agreement with the \
following quotations from the preceding figures:\
\>", "Text",
 CellChangeTimes->{{3.482089956173811*^9, 3.4820899682040987`*^9}, {
  3.48209014753483*^9, 3.4820902139413567`*^9}, {3.482096931536888*^9, 
  3.482096937222101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A4B3C2D1", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "-", "\[Beta]"}], ")"}], "2"], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Alpha]", "3"], "+", 
           SuperscriptBox["\[Beta]", "3"]}]], 
         SqrtBox[
          RowBox[{"\[Alpha]", "+", "\[Beta]"}]]], ")"}], "2"], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Alpha]", "3"], "+", 
            SuperscriptBox["\[Beta]", "3"]}]], 
          SqrtBox[
           RowBox[{"\[Alpha]", "+", "\[Beta]"}]]], ")"}], "2"], "+", 
       "0.015"}], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], "+", "\[Beta]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]], ")"}], "2"]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", 
       RowBox[{"Cos", "[", "\[Xi]", "]"}]}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.482105826160387*^9, 3.482105925596427*^9}, {
  3.482106017666525*^9, 3.4821060224259043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"A4B3C2D1", ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], "\[Pi]"}], ",", 
        RowBox[{
         FractionBox["1", "2"], "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Xi]\>\"", "}"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SubscriptBox[\(A\), \(4\)]\), \!\(\*SubscriptBox[\(B\), \(2\)]\
\), \!\(\*SubscriptBox[\(C\), \(2\)]\) & \!\(\*SubscriptBox[\(D\), \(1\)]\) \
Probabilities\>\""}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.482105991237933*^9, {3.482106057444981*^9, 3.482106112294626*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1: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
7qkr//9/wOZ/cKP2Tg==
     "]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1:eJw12Hk81Nv/B/BIRd0WqaQsUSFuUkm30OvmakFXqFRUlmsthAo11munhOSW
LKmsLbJWbotE1JUKlUh9ZsbMfD4MRomx/873j99f83g+5vOZz/mc8z6vc85Y
n3RSdZk2bZrktGkS0//3uc1xE7dp9rPpEBn5XDNcegC4pGzwlFkNkUGAr9ir
B3tTPjuvuz8K0ZaQ3S1harBPqRS7L+JBtClh2OF1E06m5NZE7myHaG2+nV58
IkJTMjVS7D9ApPT1UO7SbFxMudKu4GmN/vGM6cm3VZCdklZ25Hsy+kPOxPfU
hOH+KePZZnUG6PPqKbZTeoKHPmWOFud80Osbp1fKYaF6pWSiy0MvCINlZE6N
K6HWKV/GlG5FT6BW/K2BZ2g4XDltaF08uuPqxQ4JM9CYW325QdsXTOK8E8Y6
jXjn3XnvxF+joLOKv38+qoFm1yRLmydOENT/cdl3qyZaY6urWwf+Al+waX7s
eSN8jM47+UD3PPgq7dKcZRfQdi5y84NqSfBcHbV/aMig/cq3JnMtWXQVLmvU
mJyOLymim8bZu9EldfK68i/B+PogdGdjvzy49hUL52ZOB+UxXaKqPh2cxsx0
74cssJ1XTG1XMgTHav7aTvX54JwO7lpAaYPd7i9ORjg4gf41KwQWYLd1GLkd
Vwcn6OR13T4fsD/97qHETwAn0vGI5Xg52K1zzyTPswcn1aQ1WcEQ7DelLlbJ
oeCUz6mTtd4D9nONyqX73cH5cTVPttYT7ILqhoqsdeD6VbgvLLgL9rkSTlPZ
UXADpm9/9iES7LMb1W6tDAaXZbXcS/II2AEVgWc/PwQ3QthUf2Q22KefuKaG
rAT38qpNQfNdwfZu3xszSxfcB5ckef4rwP5rt6eqOA7ccZ/Mh3+kgr1nKF42
rgBd0dotR78Ggb0ym2cpZ4+ueJdMo12DYKt5qRTW+aIrMdtNsYS0T9XAU8bk
Ebr+WTjaEWkHtnKHgQ7XAF35o2qHtbaCvUyjwnksAl2vGnz3nxkBe8GgdvXN
Z+DNdZlvPtcf1JTdPTeTYPBksz5r+feBmjS3Oth7ELzFbTdlKFdQE4bSLf/U
g6e8R7+hzAbU2IqKBxfVwVu38djOw5tADQ3LQMULPCuJu9tvDYLq+5TvvyIL
vNQs898MfUF98zD6+IwG78rF0FTvaaC+JoS8qfYALyOsTJSdCKrzXqn9Q2vw
bv2lWChZBKpjeCBe6QB45Rp9Cg0cUG2X33ueaAavpSRp7MB+UO+n1Fo3rwZ/
Ye3Hp976oOpinVNsc8BfUjlnWXYtqNpXsjXNaeAvy4f/e2vi2WXKl1+DrxZX
sE7PG1RNUnP0mj/A32BxNns0H9SzgqgDZ9aAb9WmGB6zFFTVjNoXAffBT+px
MskeBVUcMLR7Mbn/8voUo+FtoO69qi4LYYN/NaBms0U4seLtyhB/8G9Iqa2Z
kAZ1p45bnmoFfpkiZ77tYlBFq7/wvl0E/4OFY/siXVC5yydDA0vA/5ya3HLi
FKhboW0S9jPA72x/3lhTCepmV/PH9wHg891Un/kagbpR+mtBNPl+OJR9q8kM
1HVbP/k2VwgUShxPxrqAusb+063oPARKw8nu3wqID25fdX0tBGpGz530haDS
m2y++ClAoPVadT/PD9TVZ/RftxUhMOCwtxqHgfrn/q0vwjMQHFvkKDWeDupS
Q0L6xQsQ3AhwSPd5B+p8858SwWYQ5J0eW5CkRXxqt1yIKQRFfpejiyOIF//e
scMZglKv1359ZDwSjmjfZL2HoMZZz/xEJqi4n/xK7zwIOFazxl2Pg4o5NFzy
0gUCvsUNvygyXjEy7/6Ni4age48hnasEKvrf/PfGyRB83+XbyiXPj1az3Dhy
CrSkUcddx82gIsfibatiQKtpFR87IgXq786C5UWVoNU1TVtZx4iznGXuTgOt
tbrLLP0BsYOy2ayjoDeoKuh/Js8P5194v9EctLF8xHyb96DCpg47jtaC3rlY
KcqfvF9Yg7T5M13QZgsfjF2OJE6uyFXeCtp6rlDQ+hux5pzyFdWgnaRsqq2y
QIU65GYOaIJ2lRjQ9xETr99tX9oH2mMq4U4Sqb9QSaboSBdo39HqK29ngAop
1OBxD4EOH9Dy3eNJLHHJ+Oph0FF9tYITL0EFt2td6fYFHSe0P5qgQlxWfYHV
DTpZkGr6qpnYg7b9pgM6p3NSbdcWUEEcjboiDdC59bGvb+oRv9g7pGMEurBE
zm9KhzjXs++RB+iSSM0XD9SIPaO2jZPrK7zKPOUUia3C0peVg350cNuik0uI
N/vUzvsT9HOtfS4ac4hnrovPyQJdJ/d1bsRMUKy+Sa2N+qAbJtwrvpH5zGp7
nhV8A/S7dyEz08j8ZxVrzA4tBd1aJX3vO8kT1rVXUuUqoNtuXjpoQRPH2bel
fwdN+RcUzOwkdvOUbdsBustho6VTG/FB9ln9M6Bp0yfip+R9WabmT23sQAs3
7s5Z1khsUMSR3wJapNhi6k/6i6UzyTPNAz048+hAczXxyl0NxSmgh/vpdJ0q
4qVR58etQI99PmUcX0487+GG1gugp2omuvnFxDO+VTVZgpl+J/aSMcmfcxPj
q31GwMxKkzPIukU8PPfUpj/BzAnN5I6S8T43IHcryhnMfA/N8zZXiIXzHj2u
BCNnXaZXmkIsmCzTXAJG3tCoc9554i5u8owSMMtXN0QdjybmPNkXJQdGZf6+
tS9JfpxjJ4zWq4FRE3d+VAv6n/dGf1UGo85xDyG5Qq6fNfwmF4zWfz/U232I
uRV/xpPf06kIfqtP6vkc/2DM2GUwG7KlA1KciZm+PLEEGP3YSyp9ZD6c6ztX
ZCoFZqufUoPZIeIfY8mFxNvsCnzy9hGP+h55UQPGeMdGBUkL0h8SX+boO4LZ
qfPk+bHdxLMNMi4eBWO2dLdHlTGxXNICi2gwFhItC5cYEit9duHJg7HqOVrl
R+Y/a418RsVVMAdaaacmknesTWblcqQ/j+ZPlEWvJra8GB5WC8YxOdaOs4LY
PmdT7zswLiw5qW3LiE/m1+eOg/Gy0Nw/NI845VKoHB+M7+bSCWuSr6zcwBtl
6mDOqBrl3pMkfmSd7RMLJmjQeshlmJjLUwkoBRPW2Zn1/DvxaOb1TZ1gIuvd
dymRPAxaaDY4+gPM+fTgfz5QxCaRi9j3wGT8XrBlxyvich9J7hSY66E6IfWB
xB+8fn7RA3PrSXmtqSbxcMKEAum/u1uf791DxjMYmttKOGCe6rW77DMh7mDv
1M4EU3PKoaiVzIeQGd8u5ZD2vSzhi2xuEutOfOsnz3+r84NlS9ofEp/u/k0F
DLXml2QHUr+h5tacJXZgutxSPnLIeIeGWDb2hoGh8xQUnUkehJZ6Z6wg9TWw
cnW+WwjJI2WZtral6JZU2vbEm4xHuORTe1qE7lWyPgyL5F+EpKJU3SN0a+4d
1pkg63nEriWWPxl0/5oYfDqUzPeIC7pGNlHo3jQnburv0yRfFWs4ZP/SvXPG
zcVxG0BFmTq9fxuEbreRD9vT7pG8bouNtBpGt+dvdjFLSX3Frjt38PAkun38
2Y3pc4ljEvy0XNEd+KPvYCbJtziDOa4708g+s2+W1y2Sr/HF4ZdFMui+zdly
tSQX1IWm7YafctBd3KZlN0bqOVFX4YWtPLrLmpYr7yD1k5giVLhD7v/30fiN
tsegLtqFKJ0NRPd/yc9uT7WAShLbtDpIobtn+46nFhKgUh0+OKXJo0fruhWn
+yhZD4Ufh1Pd0KOTZpyrR/Ivw+tLqnY9ejac3+gWTPIoo79DVTsYPVsDFwll
yftnDtUIA26ix2zvp5+/JZD1doGhS4Ahejymjs2KfkTWa9+3V+5PoKfw2PFf
V5L1/W7/lhyLT+i5W2iTkJJE9gMZNVd/cNFTMmjcIzmb7B/Mve8dNkZPVfzy
QjbJy/t31oln7EHPfxVvNLJIPZaxDhQWZ6Onb67uymVkPXxkqbZUKhDCDf8O
LVtI2lPXYu8c4Qnh5pmcs+H9oF7mrudeCYDQwKqpbYD0V33g6hcpnRD+Icj/
550DqFeqvh6uMhAekDu8OHEPqMbwtCyDWggDjj+Wnb0SVEvg7KF5ayF8rPC3
tATJV47RGtdiRwirLY9dvUvymqsTZ1sZAmFtjIG2rQyorhWThqS+hY2Dgxal
v4Piy6jHrGmGsPOd62UnUg8M/6Stx14Ip2LM1V6Q/hpobe6MdUSv8c9FRlEm
YEuGOUewvND76l3eKekKsDXmXZjbVYHeN097w4P4YGuuK3Oen4Le93f1Lg4s
BXuN1UtWTjV6P8fV3PlM9r/aV0oL+HPQyxh/5ReR39NdnzNPj4U+6Qp5W/Nm
sLdcfOlmugR9u67Gbk8Ukf3zeNnfuVnoq3M6vmDxr2D7p3abZ3DQ/3HjoqHE
frA7N7jIr++E6PjJdTExK8ExF6dGjadCJDBu77DlgPNy3aPm1BEMeFeMtPB2
g3s4Rv17Rj0Gepe4u/gFgisyuXBySyq++y8xu1Zpga4c/6G1qdPwfWh60PHx
PvD2rS8M9KnCj1Pe5eGkrvm/bG+Z6WuFH2NnHYzcR8GnzD5mdnEweM7XLnlC
CYLiiX3rX1bhp5T064RdfNDpbw4Phv2NnwnKaFR/ASZet3Vv9AiGZFSl8qSP
k3kWRJ/ZYoKh5BdGq64/QI9PQ+vgm0oMy1rXGRo0QehiopqWa4nhRId9146L
0XuIYxavMADxkrkHsi0b0Od83kQlyxzi1Px8wy1O6Hc4dXAqdRLitC8/3/R6
oN+5w2Lo9muIry40sc/xQb/HH3aKNx0gzgxiR8iEot9PriTTPQniPOvlrz5n
oD+iwmLOkVKIH4wnHTz7Ef15YyNHsjQg7rA661dlhv7e1Gd3bhdB3BndIOVt
hf6ByYqvfvEQf3u8JE3tEPqH3CtDdGiIu9TLHsW7oX/K8EPxKhmIhWN902wj
IZL2e67/ywuIJ/OcLow+hWiZ4qpxj/sYmdZRonKvDiJFK3sbN3WMTF8wVeLU
CJFydIa+7xOMzGJltL7ugEhtQPGLxzhGFlh+Wp4uhkj75SaZqf0YWRi9+q7F
FDl/j4V8DW3AyKJ/T2P6TIh0dV9RYW8xoqAu63RiEUR615yqH8thZLmd/aDK
coj0393f/Z6DEaWke1EtauR8P2PSmpx/RlTqJuRjtMj532BPScpRjKiOmRca
rP///wf+D9fwaWI=
     "]]}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Xi]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(4\\)]\\), \
\\!\\(\\*SubscriptBox[\\(B\\), \\(2\\)]\\), \\!\\(\\*SubscriptBox[\\(C\\), \
\\(2\\)]\\) & \\!\\(\\*SubscriptBox[\\(D\\), \\(1\\)]\\) Probabilities\"", 
    TraditionalForm],
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 1.0149999679429318`}}, {{
     0, 1.5707963267948966`}, {0., 1.0149999679429318`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.482106172355216*^9}]
}, Open  ]],

Cell[TextData[{
 "A similar argument accounts for the facts at ",
 StyleBox["\[Xi]", "Output"],
 " = 1, where ",
 StyleBox["\[CapitalPsi]", "Output"],
 " = ",
 StyleBox["-dn\[CircleTimes]dn", "Output"],
 "."
}], "Text",
 CellChangeTimes->{{3.482090301108007*^9, 3.4820904142739363`*^9}, {
   3.48210621635816*^9, 3.482106231335046*^9}, 3.4821062724753847`*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.481986705219331*^9}],

Cell[TextData[{
 "We are in position now to construct the ",
 StyleBox["joint, marginal and conditional probabilities", "Subsection",
  FontSize->12],
 " that arise in each of the four possible cases:  "
}], "Text",
 CellChangeTimes->{{3.481986723839382*^9, 3.481986819666263*^9}, {
  3.481989183415266*^9, 3.481989234784816*^9}, {3.482090486973421*^9, 
  3.482090570312989*^9}}],

Cell[TextData[{
 StyleBox["CASE UU", "Subsection",
  FontSize->12],
 ":"
}], "Text",
 CellChangeTimes->{{3.481989252383004*^9, 3.481989258190756*^9}}],

Cell["From the table of joint probabilities", "Text",
 CellChangeTimes->{{3.481989302795761*^9, 3.481989310995118*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"up", ",", "up"}]], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"up", ",", "dn"}]], "=", 
  SubsuperscriptBox["A", "2", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"dn", ",", "up"}]], "=", 
  SubsuperscriptBox["A", "3", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"dn", ",", "dn"}]], "=", 
  SubsuperscriptBox["A", "4", "2"]}]}], "Input",
 CellChangeTimes->{{3.481986875672649*^9, 3.4819869454457417`*^9}, {
  3.481986977223349*^9, 3.48198698649107*^9}, {3.481987095841915*^9, 
  3.481987108664093*^9}, {3.481989116111928*^9, 3.4819891210045*^9}}],

Cell[TextData[{
 "(here the first subscript refers to Alice's meter reading, the second to \
Bob's) we conclude that if Alice/Bob both use \[DoubleStruckU]-meters then ",
 StyleBox["if one gets \"up\" the other necessarily gets \"dn\"",
  FontVariations->{"Underline"->True}],
 " (though it remains a possibility that ",
 StyleBox["both",
  FontSlant->"Italic"],
 " get \"dn\"). Another way to expose this same basic fact: construct the \
marginal probabilities"
}], "Text",
 CellChangeTimes->{{3.48198931705936*^9, 3.481989445819605*^9}, {
   3.481989532927474*^9, 3.481989576220482*^9}, 3.4819896110208397`*^9, {
   3.481999950092597*^9, 3.481999985959374*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUU", "Aup"], "=", 
  SubsuperscriptBox["A", "2", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PUU", "Adn"], "=", 
   RowBox[{
    SubsuperscriptBox["A", "3", "2"], "+", 
    SubsuperscriptBox["A", "4", "2"]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", "Bup"], "=", 
  SubsuperscriptBox["A", "3", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", "Bdn"], "=", 
  RowBox[{
   SubsuperscriptBox["A", "2", "2"], "+", 
   SubsuperscriptBox["A", "4", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.481999033447815*^9, 3.4819991600204477`*^9}}],

Cell["and use", "Text",
 CellChangeTimes->{{3.482000046517766*^9, 3.482000047483549*^9}}],

Cell[BoxData[
 RowBox[{"conditional", "=", 
  FractionBox["joint", "marginal"]}]], "Output",
 CellChangeTimes->{{3.482000052698563*^9, 3.48200006640508*^9}}],

Cell["to construct tables of marginal probabilities", "Text",
 CellChangeTimes->{{3.4820000847291737`*^9, 3.482000098008463*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"Aup", "|", "Bup"}]], "=", 
  RowBox[{
   FractionBox["0", 
    SubsuperscriptBox["A", "3", "2"]], "=", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"Aup", "|", "Bdn"}]], "=", 
  FractionBox[
   SubsuperscriptBox["A", "2", "2"], 
   RowBox[{
    SubsuperscriptBox["A", "2", "2"], "+", 
    SubsuperscriptBox["A", "4", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"Adn", "|", "Bup"}]], "=", 
  RowBox[{
   FractionBox[
    SubsuperscriptBox["A", "3", "2"], 
    SubsuperscriptBox["A", "3", "2"]], "=", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"Adn", "|", "Bdn"}]], "=", 
  FractionBox[
   SubsuperscriptBox["A", "4", "2"], 
   RowBox[{
    SubsuperscriptBox["A", "2", "2"], "+", 
    SubsuperscriptBox["A", "4", "2"]}]]}]}], "Input",
 CellChangeTimes->{{3.48199917432953*^9, 3.48199921363216*^9}, {
   3.481999245385495*^9, 3.48199945316357*^9}, {3.481999496018923*^9, 
   3.48199956592695*^9}, 3.482003219650333*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.482003215331155*^9, 3.482003215635152*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"Bup", "|", "Aup"}]], "=", 
  RowBox[{
   FractionBox["0", 
    SubsuperscriptBox["A", "2", "2"]], "=", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"Bup", "|", "Adn"}]], "=", 
  FractionBox[
   SubsuperscriptBox["A", "3", "2"], 
   RowBox[{
    SubsuperscriptBox["A", "3", "2"], "+", 
    SubsuperscriptBox["A", "4", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"Bdn", "|", "Aup"}]], "=", 
  RowBox[{
   FractionBox[
    SubsuperscriptBox["A", "2", "2"], 
    SubsuperscriptBox["A", "2", "2"]], "=", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"Bdn", "|", "Adn"}]], "=", 
  FractionBox[
   SubsuperscriptBox["A", "4", "2"], 
   RowBox[{
    SubsuperscriptBox["A", "3", "2"], "+", 
    SubsuperscriptBox["A", "4", "2"]}]]}]}], "Input",
 CellChangeTimes->{{3.481999584399227*^9, 3.481999658375424*^9}, {
  3.4819997745399303`*^9, 3.4819998105374002`*^9}, {3.481999853717762*^9, 
  3.481999878709293*^9}}],

Cell[TextData[{
 "These state quite explicitly if Alice/Bob both use \
\[DoubleStruckCapitalU]-meters, and one gets \"up\" then the other gets \"dn,\
\" and ",
 StyleBox["vice versa",
  FontSlant->"Italic"],
 ". We are not surprised to discover that in fact"
}], "Text",
 CellChangeTimes->{{3.482000132174375*^9, 3.482000190275035*^9}, 
   3.482090846735773*^9, {3.482090905655629*^9, 3.482090938161851*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["PUU", 
   RowBox[{"up", ",", "dn"}]], "=", 
  RowBox[{
   SubsuperscriptBox["A", "2", "2"], "=", 
   RowBox[{
    SubsuperscriptBox["A", "3", "2"], "=", 
    SubscriptBox["PUU", 
     RowBox[{"dn", ",", "up"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.4820909494467773`*^9, 3.482090971420471*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.481989457147304*^9, 3.481989457377933*^9}}],

Cell[TextData[{
 StyleBox["CASE UV", "Subsection",
  FontSize->12],
 ":"
}], "Text",
 CellChangeTimes->{{3.481989252383004*^9, 3.481989258190756*^9}, 
   3.4819894766558027`*^9}],

Cell["From the table of joint probabilities", "Text",
 CellChangeTimes->{{3.481989492880371*^9, 3.481989499744134*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"up", ",", "up"}]], "=", 
  SubsuperscriptBox["B", "1", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"up", ",", "dn"}]], "=", 
  SubsuperscriptBox["B", "2", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"dn", ",", "up"}]], "=", 
  SubsuperscriptBox["B", "3", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"dn", ",", "dn"}]], "=", "0"}]}], "Input",
 CellChangeTimes->{{3.481989514838729*^9, 3.481989520043947*^9}}],

Cell["we obtain the marginal probabilities", "Text",
 CellChangeTimes->{{3.481989658590578*^9, 3.481989667086331*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUV", "Aup"], "=", 
  RowBox[{
   SubsuperscriptBox["B", "1", "2"], "+", 
   SubsuperscriptBox["B", "2", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", "Adn"], "=", 
  SubsuperscriptBox["B", "3", "2"]}]}], "Input",
 CellChangeTimes->{{3.481987239639503*^9, 3.4819873146521893`*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUV", "Bup"], "=", 
  RowBox[{
   SubsuperscriptBox["B", "1", "2"], "+", 
   SubsuperscriptBox["B", "3", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", "Bdn"], "=", 
  SubsuperscriptBox["B", "2", "2"]}]}], "Input",
 CellChangeTimes->{{3.481987335240897*^9, 3.481987411510683*^9}, 
   3.482000544974104*^9, {3.482000627220299*^9, 3.4820006322439547`*^9}, {
   3.48200066960631*^9, 3.482000683102202*^9}}],

Cell["whence the conditional probabilities", "Text",
 CellChangeTimes->{{3.481989706782495*^9, 3.4819897203305683`*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Aup", "|", "Bup"}]], "=", 
  FractionBox[
   SubsuperscriptBox["B", "1", "2"], 
   RowBox[{
    SubsuperscriptBox["B", "1", "2"], "+", 
    SubsuperscriptBox["B", "3", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Aup", "|", "Bdn"}]], "=", 
  RowBox[{
   FractionBox[
    SubsuperscriptBox["B", "2", "2"], 
    SubsuperscriptBox["B", "2", "2"]], "=", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Adn", "|", "Bup"}]], "=", 
  FractionBox[
   SubsuperscriptBox["B", "3", "2"], 
   RowBox[{
    SubsuperscriptBox["B", "1", "2"], "+", 
    SubsuperscriptBox["B", "3", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Adn", "|", "Bdn"}]], "=", 
  RowBox[{
   FractionBox["0", 
    SubsuperscriptBox["B", "2", "2"]], "=", "0"}]}]}], "Input",
 CellChangeTimes->{{3.48198809517302*^9, 3.481988110242137*^9}, {
  3.481988184096814*^9, 3.481988274441167*^9}, {3.48198831709809*^9, 
  3.481988364690566*^9}, {3.482000365183134*^9, 3.482000381138029*^9}, {
  3.4820004564680758`*^9, 3.4820004648299847`*^9}, {3.48200058467514*^9, 
  3.482000605040547*^9}, {3.482000741751107*^9, 3.482000775403619*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4820032042536716`*^9, 3.482003204588313*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Bup", "|", "Aup"}]], "=", 
  FractionBox[
   SubsuperscriptBox["B", "1", "2"], 
   RowBox[{
    SubsuperscriptBox["B", "1", "2"], "+", 
    SubsuperscriptBox["B", "2", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Bup", "|", "Adn"}]], "=", 
  RowBox[{
   FractionBox[
    SubsuperscriptBox["B", "3", "2"], 
    SubsuperscriptBox["B", "3", "2"]], "=", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Bdn", "|", "Aup"}]], "=", 
  FractionBox[
   SubsuperscriptBox["B", "2", "2"], 
   RowBox[{
    SubsuperscriptBox["B", "1", "2"], "+", 
    SubsuperscriptBox["B", "2", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Bdn", "|", "Adn"}]], "=", 
  RowBox[{
   FractionBox["0", 
    SubsuperscriptBox["B", "3", "2"]], "=", "0"}]}]}], "Input",
 CellChangeTimes->{{3.481987436090222*^9, 3.481987468013794*^9}, {
   3.481987500251902*^9, 3.481987714864542*^9}, {3.4819877514562187`*^9, 
   3.481987831631606*^9}, {3.481987909630554*^9, 3.481987944196909*^9}, 
   3.481988084783037*^9, {3.4820004739755173`*^9, 3.48200048439001*^9}, {
   3.482000861263468*^9, 3.482000861673703*^9}}],

Cell["\<\
If Alice uses her \[DoubleStruckU] meter, and Bob uses his \[DoubleStruckV] \
meter, then if Alice gets \"dn\" then Bob necessarily gets/got \"up,\" and if \
Bob gets \"dn\" then Alice necessarily gets/got \"up\"\
\>", "Text",
 CellChangeTimes->{{3.481989819141082*^9, 3.481989883104794*^9}, {
  3.481989919742885*^9, 3.481989961476932*^9}, {3.4819899933467083`*^9, 
  3.481990014529723*^9}, {3.48200110604011*^9, 3.48200111468391*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.482001273229195*^9}],

Cell[TextData[{
 StyleBox["CASE VU", "Subsection",
  FontSize->12],
 ":"
}], "Text",
 CellChangeTimes->{
  3.482001277549224*^9, {3.482001354429863*^9, 3.4820013549967012`*^9}}],

Cell[TextData[{
 "The probabilities here follow from those of ",
 StyleBox["CASE UV", "Subsection",
  FontSize->10],
 " by ",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["B", "2", "2"], "\[RightArrowLeftArrow]", 
   SubsuperscriptBox["B", "3", "2"]}]],
  CellChangeTimes->{3.482001411824685*^9}],
 " interchange. Thus"
}], "Text",
 CellChangeTimes->{{3.482001325470744*^9, 3.4820013612598753`*^9}, {
  3.482001419264503*^9, 3.482001445735278*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Aup", "|", "Bup"}]], "=", 
  FractionBox[
   SubsuperscriptBox["B", "1", "2"], 
   RowBox[{
    SubsuperscriptBox["B", "1", "2"], "+", 
    SubsuperscriptBox["B", "2", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Aup", "|", "Bdn"}]], "=", 
  RowBox[{
   FractionBox[
    SubsuperscriptBox["B", "3", "2"], 
    SubsuperscriptBox["B", "3", "2"]], "=", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Adn", "|", "Bup"}]], "=", 
  FractionBox[
   SubsuperscriptBox["B", "2", "2"], 
   RowBox[{
    SubsuperscriptBox["B", "1", "2"], "+", 
    SubsuperscriptBox["B", "2", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Adn", "|", "Bdn"}]], "=", 
  RowBox[{
   FractionBox["0", 
    SubsuperscriptBox["B", "2", "2"]], "=", "0"}]}]}], "Input",
 CellChangeTimes->{{3.48198809517302*^9, 3.481988110242137*^9}, {
  3.481988184096814*^9, 3.481988274441167*^9}, {3.48198831709809*^9, 
  3.481988364690566*^9}, {3.482000365183134*^9, 3.482000381138029*^9}, {
  3.4820004564680758`*^9, 3.4820004648299847`*^9}, {3.48200058467514*^9, 
  3.482000605040547*^9}, {3.482000741751107*^9, 3.482000775403619*^9}, {
  3.482001498866271*^9, 3.4820015187002068`*^9}, {3.4820015542167263`*^9, 
  3.4820015766288033`*^9}, {3.482001615235778*^9, 3.482001649326437*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.482003195025949*^9, 3.4820031953830547`*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Bup", "|", "Aup"}]], "=", 
  FractionBox[
   SubsuperscriptBox["B", "1", "2"], 
   RowBox[{
    SubsuperscriptBox["B", "1", "2"], "+", 
    SubsuperscriptBox["B", "3", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Bup", "|", "Adn"}]], "=", 
  RowBox[{
   FractionBox[
    SubsuperscriptBox["B", "2", "2"], 
    SubsuperscriptBox["B", "32", "2"]], "=", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Bdn", "|", "Aup"}]], "=", 
  FractionBox[
   SubsuperscriptBox["B", "3", "2"], 
   RowBox[{
    SubsuperscriptBox["B", "1", "2"], "+", 
    SubsuperscriptBox["B", "3", "2"]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PUV", 
   RowBox[{"Bdn", "|", "Adn"}]], "=", 
  RowBox[{
   FractionBox["0", 
    SubsuperscriptBox["B", "2", "2"]], "=", "0"}]}]}], "Input",
 CellChangeTimes->{{3.481987436090222*^9, 3.481987468013794*^9}, {
   3.481987500251902*^9, 3.481987714864542*^9}, {3.4819877514562187`*^9, 
   3.481987831631606*^9}, {3.481987909630554*^9, 3.481987944196909*^9}, 
   3.481988084783037*^9, {3.4820004739755173`*^9, 3.48200048439001*^9}, {
   3.482000861263468*^9, 3.482000861673703*^9}, {3.482001525753437*^9, 
   3.482001548001471*^9}, {3.482001583293907*^9, 3.482001606922245*^9}, {
   3.482001654851405*^9, 3.482001681585446*^9}}],

Cell["\<\
Once again, Alice/Bob necessarily get opposite meter readings.\
\>", "Text",
 CellChangeTimes->{{3.482003266305007*^9, 3.4820032854078093`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4820017294375067`*^9}],

Cell["The situation thus far can be summarized as follows:", "Text",
 CellChangeTimes->{{3.482003313286187*^9, 3.482003323605446*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{GridBox[{
        {"U", "U"},
        {"up", "dn"},
        {"dn", "up"}
       },
       GridBoxDividers->{
        "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
         "RowsIndexed" -> {}}], "\[DoubleLongRightArrow]", GridBox[{
        {"U", "V"},
        {"up", "dn"},
        {"dn", "up"}
       },
       GridBoxDividers->{
        "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
         "RowsIndexed" -> {}}]}], " ", "&"}], " ", 
    RowBox[{GridBox[{
       {"V", "U"},
       {"up", "dn"},
       {"dn", "up"}
      },
      GridBoxDividers->{
       "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
        "RowsIndexed" -> {}}], "\[DoubleLongRightArrow]", GridBox[{
       {"V", "V"},
       {"up", "dn"},
       {"dn", "up"}
      },
      GridBoxDividers->{
       "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
        "RowsIndexed" -> {}}]}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.482075461068993*^9, 3.482075461091084*^9}}],

Cell["\<\
All of which could be attributed to hidden instruction sets that tell the \
respective photons how to respond when they encounter a \[DoubleStruckU]/\
\[DoubleStruckV] meter. Note particularly that the preceding line of argment \
leads to the conclusion that \
\>", "Text",
 CellChangeTimes->{{3.4820039917498093`*^9, 3.4820039963489532`*^9}, {
  3.482004124549366*^9, 3.4820042397584457`*^9}, {3.482004285635457*^9, 
  3.482004322057486*^9}}],

Cell[BoxData[
 RowBox[{GridBox[{
    {"V", "V"},
    {"up", "up"},
    {"dn", "dn"}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}], " ", "are", " ", "impossible"}]], "Output",
 CellChangeTimes->{{3.4820043379987297`*^9, 3.482004363081952*^9}}],

Cell["\<\
But quantum mechanics assigns non-vanishing probabilities to those cases:\
\>", "Text",
 CellChangeTimes->{{3.4820044198198977`*^9, 3.4820044331305323`*^9}, {
  3.482004474193071*^9, 3.482004489062831*^9}}],

Cell[TextData[{
 StyleBox["CASE VV", "Subsection",
  FontSize->12],
 ":"
}], "Text",
 CellChangeTimes->{{3.482001752729494*^9, 3.482001760015306*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PVV", 
   RowBox[{"up", ",", "up"}]], "=", 
  SubsuperscriptBox["D", "1", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PVV", 
   RowBox[{"up", ",", "dn"}]], "=", 
  SubsuperscriptBox["D", "2", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PVV", 
   RowBox[{"dn", ",", "up"}]], "=", 
  SubsuperscriptBox["D", "3", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PVV", 
   RowBox[{"dn", ",", "dn"}]], "=", 
  SubsuperscriptBox["D", "4", "2"]}]}], "Input",
 CellChangeTimes->{{3.482003627843635*^9, 3.482003646238751*^9}, {
  3.482003718371396*^9, 3.482003798123529*^9}, {3.482004440519623*^9, 
  3.4820044642876673`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.482005094801169*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Alpha]", "-", "\[Beta]"}], 
         RowBox[{"1", "-", 
          RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]], ")"}], "2"], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Alpha]", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "-", "\[Beta]"}], ")"}], "\[Beta]"}], 
         RowBox[{"1", "-", 
          RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]], ")"}], "2"]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", 
       RowBox[{"Cos", "[", "\[Xi]", "]"}]}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"Sin", "[", "\[Xi]", "]"}]}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], "\[Pi]"}], ",", 
        RowBox[{
         FractionBox["1", "2"], "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Xi]\>\"", "}"}]}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<D-coefficients\>\""}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.482004566394869*^9, 3.482004596604401*^9}, {
  3.4820050015594997`*^9, 3.4820050383434772`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1:eJwVmgk0VO8bx21ZKmUviiQkIYlSNN/yq0SlLKHsayWENllbZClkKaSyZUtl
nzsiklKUUGRfKwwKM5YZWvzv/5w5Z87nXPd9n/d5vt97n2cOk3OO6104ODi4
yM+9/39THLS+Ny59xa375cbORNqRDiBeRqdqVIFyZ+PztrN253E0rtN5S+EC
pWCjXJ6jSz0s8oW/Yq6I8vrm8OjH9//BLo5gnxYbojQpfvZ5l64Fp4p8wTrJ
SEqH+d6dIvb/4VQ+R6q1UjZl8ObLZOnqfpxNM1Wf2lFNGekMXWo5aY5zcVk1
IQe6KJOKftuLas7BuyZAebnyAmWaMPznd9od5yuyfNo0wijs42MjoZqcuFja
WJG2S4zy10eq09l2Ny4/Z/O47U0H5033Y278w7iSs/6IpoEaeGKExjZ+bYN/
muG9f8cqwNcxP8r2mkdw3KONcXZfsVIh3rTasRpXa79rq20rgvDdNMOiYztx
reZyT/yOyxCl3ptT6qzEjYp0BRvwYLVZ1/O+9xIIKdOqr9H7AKmWjWVrrojg
ZukHz40HYiHtdafu14k6hD2fJhhGMlgfYr5V7iEvwvPCrcyNf2ADZ8HupR5c
iMhZu1hx/Cnko+OtguPjcTvtwMGbNtrY2LYg8ipjHnfikrok3U2wRU6Favli
AjH6Ca+gvRzqUT/ocWe5EVM7KOz9Ygpb4y6O7Pxgidiai9S2SgLbintPRf48
ifiKlH9ptf9B+xiVK+JlGu7uHD3Woq+InbcjKv1NmnG3bNvjJfVLsatx7cRq
Wy7cK63Td2toxm63AM/6HkkkPmfEaLbaYO9VvmePn6ogSUXn2ynzPdDTdcqY
O12OpLxQzfsd8tD789Ap6aA17udIdfzrHsO+8IzRJbQ0PEjbt77u+2XoNy7I
vShyQGpcQok1MxZHxQJ2xtYEIk2wWjdZPArHhNukbs4kIs1Ea93Noi849qDg
kn/KKaR1ywxZj1nBmFBYN1PPjfSfTO9lVp4w4xVtjpVZhUyh++Gnd9/FCWGa
ZNOYIDKPrzhr2tmJE5W42BP6Gpn3bxjhkgxOnuWe7mVyI0vOQ0wiPwdWn9Dh
KQNka+5JrV1XDttnvrdzuu4i12KEJsfZD0e3+rKlq3yQ+9A6WTBFHo5fLHaJ
Z8kid+BzwPyu03DatRjiahCBJ2cq9Jp9mHBemRr2484e5PlHNwb94IHLO4kq
eDXjWarWUPc7ZZw59fS/kb3lKDyvt9SwVgdelfX+3rfmURi/oym7VQhe/5wM
RD1fo7BE9R7Xtx/wxoXkCqXvKJyWXFfBEU364O+BM3MiKPKZ0tqs8w0+TY8l
hP0zUOyTYr+sOBwXFuVcl1XNo9R7gdqQ2oYr1Mly83MnUBo75a+U/xR+S7T4
xvcmobRoeE9I5VX4mf3S7GiMRinj80fd7k3wm6XetHMwAtU7d+C5RAACdNNt
kjr6QHhbLIuK2oCg/lf9CndOosyrxMHIzwvXdX9aP+ZsQVkMf66upyGuu2Wz
BmTTUVZgM6nsuAHXkxI4TfnYKJvgD+Q1aMP1WaF/qdnDeHHWJqlKcjduFF6e
z1mhhnJXvmbVsqW4qT6zfQ3/Z7y0ssby2SyEW0y9mxmioHoDV7RLmQfu7Ojr
PcXLjWpNTllj0s93LjW6WncyUb1vsVi3cwp3qNP69/t2odr1T5vo7wuIkfLU
uigYhOo8lnQNxQ8xyfH1fPrP8Fpj/LnM21DEpla2nq+6ixq91o/tzWmIf8kI
sjkij7eOOQIG9FYk7c7KbljWg7oTBMfclltIeykcNd78Hg1Z1ffqNnsjW/Gg
xK2tmmj27M0/67SAp4/S69LNPPDFNeaYeaUjCg3+dR405URreHV1K8MJxa8k
WWuTi9AaU2YR42eP4vcPls1nUNGaVDBxmNsaxc0Slo9DH6M1N3XNG3FzFA/8
vnjmDjda6wIvFe08iBKuoNen/37GV/5dKlHX1FCyz6Fx/Z5GfA0rSTogxEbJ
GytfWYFN+Hrn6RbO+zMo+ShCGUzUwtfEjNpKOQZKvtSsv3pXBl9zYqc1NcdQ
8k1w1eUrHvj63stIzrIXpRxGXz494EIbnyr3v7QalOpcmRX/lI620OxzNPVI
lD7bxi3YLIm26IvD7RofUFrcdc2mfS3aEvbbsLT4UfrC7+T+uDC0Zf04vGNn
CErfZfzJGt+Jtlo5JZqeP0oHEpUFmIlo5340SDNzA1WU51T2Zjrar94zpfnq
k7qrNNmtV4P2cOcP7X4hoF52MNu18ibaYzT3sgJqQA348+rQx7doT21R33GN
Amq4ZEn5bBraXwkvp93aDuqj8cP6cxS0/42spT2UB/X9COebFAo6/EJ20Kq5
QIivbOnb7IKO63+zRQTzQEjOKrj530XH7cti7lYmIGSajufVzaLj4RmG7Nxj
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
t/0PM6Y8Rw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Xi]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"D-coefficients\"", TraditionalForm],
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.9999999999999989}}, {{
     0, 1.5707963267948966`}, {0., 0.9999999999999989}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{
      NCache[Rational[1, 4] Pi, 0.7853981633974483], 
      FormBox[
       FractionBox["\[Pi]", "4"], TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}}, {{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{3.482004602154448*^9, 3.482005043116859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Alpha]", "2"], "+", 
     SuperscriptBox["\[Beta]", "2"]}], "\[Equal]", "1"}], ",", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"\[Alpha]", " ", "\[Beta]"}], "+", 
          SuperscriptBox["\[Beta]", "2"]}], ")"}]}], 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}], "\[Equal]", 
     FractionBox[
      RowBox[{"\[Alpha]", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "-", "\[Beta]"}], ")"}], "\[Beta]"}], 
      RowBox[{"1", "-", 
       RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.482004676474985*^9, 3.4820047221278276`*^9}, {
  3.482004823115403*^9, 3.4820048643028803`*^9}, {3.482004906141704*^9, 
  3.4820049634905567`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.482004954029207*^9, 3.4820049647809687`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{858, 658},
WindowMargins->{{5, Automatic}, {Automatic, 10}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"7.0 for Mac OS X PowerPC (32-bit) (November 11, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 115, 2, 40, "Input"],
Cell[685, 26, 139, 2, 40, "Output"]
}, Open  ]],
Cell[839, 31, 1669, 47, 233, "Input"],
Cell[2511, 80, 87, 1, 64, "Input"],
Cell[CellGroupData[{
Cell[2623, 85, 244, 7, 167, "Title"],
Cell[2870, 94, 189, 7, 75, "Text"],
Cell[3062, 103, 87, 1, 64, "Input"],
Cell[CellGroupData[{
Cell[3174, 108, 309, 7, 88, "Input"],
Cell[3486, 117, 780, 20, 40, "Output"]
}, Open  ]],
Cell[4281, 140, 43543, 719, 223, "Input"],
Cell[CellGroupData[{
Cell[47849, 863, 104, 1, 51, "Subsection"],
Cell[47956, 866, 2043, 32, 377, "Text"],
Cell[CellGroupData[{
Cell[50024, 902, 250, 6, 64, "Input"],
Cell[50277, 910, 667, 16, 60, "Output"]
}, Open  ]],
Cell[50959, 929, 2268, 35, 633, "Text"],
Cell[53230, 966, 87, 1, 96, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53354, 972, 108, 1, 76, "Subsection"],
Cell[53465, 975, 515, 16, 63, "Text"],
Cell[53983, 993, 635, 22, 183, "Input"],
Cell[54621, 1017, 344, 6, 93, "Text"],
Cell[54968, 1025, 820, 35, 310, "Input"],
Cell[55791, 1062, 93, 1, 58, "Text"],
Cell[55887, 1065, 3031, 103, 688, "Input"],
Cell[58921, 1170, 92, 1, 60, "Input"],
Cell[59016, 1173, 199, 5, 58, "Text"],
Cell[CellGroupData[{
Cell[59240, 1182, 861, 26, 117, "Input"],
Cell[60104, 1210, 631, 19, 165, "Output"]
}, Open  ]],
Cell[60750, 1232, 110, 1, 58, "Text"],
Cell[CellGroupData[{
Cell[60885, 1237, 864, 26, 117, "Input"],
Cell[61752, 1265, 632, 19, 165, "Output"]
}, Open  ]],
Cell[62399, 1287, 165, 3, 58, "Text"],
Cell[62567, 1292, 92, 1, 60, "Input"],
Cell[62662, 1295, 87, 1, 39, "Text"],
Cell[62752, 1298, 337, 12, 112, "Input"],
Cell[63092, 1312, 208, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[63325, 1321, 332, 10, 40, "Input"],
Cell[63660, 1333, 1942, 59, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65639, 1397, 751, 24, 82, "Input"],
Cell[66393, 1423, 97, 1, 40, "Output"]
}, Open  ]],
Cell[66505, 1427, 224, 4, 62, "Text"],
Cell[66732, 1433, 89, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66858, 1439, 122, 1, 51, "Subsection"],
Cell[66983, 1442, 88, 1, 39, "Text"],
Cell[67074, 1445, 251, 5, 64, "Output"],
Cell[67328, 1452, 176, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[67529, 1458, 730, 26, 89, "Input"],
Cell[68262, 1486, 676, 21, 162, "Output"]
}, Open  ]],
Cell[68953, 1510, 1298, 34, 228, "Text"],
Cell[70254, 1546, 92, 1, 60, "Input"],
Cell[70349, 1549, 293, 9, 58, "Text"],
Cell[CellGroupData[{
Cell[70667, 1562, 833, 25, 108, "Input"],
Cell[71503, 1589, 1314, 41, 177, "Output"]
}, Open  ]],
Cell[72832, 1633, 130, 1, 87, "Text"],
Cell[CellGroupData[{
Cell[72987, 1638, 577, 18, 109, "Input"],
Cell[73567, 1658, 225, 6, 99, "Output"]
}, Open  ]],
Cell[73807, 1667, 252, 7, 58, "Text"],
Cell[74062, 1676, 423, 14, 205, "Output"],
Cell[74488, 1692, 91, 1, 58, "Text"],
Cell[74582, 1695, 775, 25, 124, "Input"],
Cell[CellGroupData[{
Cell[75382, 1724, 739, 24, 124, "Input"],
Cell[76124, 1750, 2736, 90, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78897, 1845, 686, 21, 78, "Input"],
Cell[79586, 1868, 836, 28, 122, "Output"]
}, Open  ]],
Cell[80437, 1899, 92, 1, 40, "Input"],
Cell[80532, 1902, 294, 9, 39, "Text"],
Cell[CellGroupData[{
Cell[80851, 1915, 1408, 43, 145, "Input"],
Cell[82262, 1960, 2262, 73, 190, "Output"]
}, Open  ]],
Cell[84539, 2036, 402, 9, 62, "Text"],
Cell[84944, 2047, 557, 18, 156, "Output"],
Cell[85504, 2067, 89, 1, 58, "Text"],
Cell[85596, 2070, 977, 30, 133, "Input"],
Cell[86576, 2102, 1357, 41, 268, "Input"],
Cell[CellGroupData[{
Cell[87958, 2147, 664, 21, 108, "Input"],
Cell[88625, 2170, 1549, 51, 291, "Output"]
}, Open  ]],
Cell[90189, 2224, 96, 1, 60, "Input"],
Cell[90288, 2227, 711, 19, 126, "Text"],
Cell[91002, 2248, 1359, 41, 268, "Input"],
Cell[CellGroupData[{
Cell[92386, 2293, 685, 21, 108, "Input"],
Cell[93074, 2316, 1549, 51, 291, "Output"]
}, Open  ]],
Cell[94638, 2370, 144, 1, 58, "Text"],
Cell[94785, 2373, 94, 1, 60, "Input"],
Cell[94882, 2376, 221, 6, 39, "Text"],
Cell[95106, 2384, 1357, 41, 216, "Input"],
Cell[96466, 2427, 88, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[96579, 2432, 690, 21, 72, "Input"],
Cell[97272, 2455, 1673, 53, 184, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98982, 2513, 1073, 31, 78, "Input"],
Cell[100058, 2546, 169, 3, 40, "Output"]
}, Open  ]],
Cell[100242, 2552, 284, 8, 39, "Text"],
Cell[CellGroupData[{
Cell[100551, 2564, 690, 21, 82, "Input"],
Cell[101244, 2587, 70, 1, 40, "Output"]
}, Open  ]],
Cell[101329, 2591, 192, 5, 39, "Text"],
Cell[101524, 2598, 87, 1, 64, "Input"],
Cell[101614, 2601, 352, 6, 84, "Text"],
Cell[CellGroupData[{
Cell[101991, 2611, 748, 22, 98, "Input"],
Cell[102742, 2635, 596, 18, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103375, 2658, 609, 18, 67, "Input"],
Cell[103987, 2678, 14374, 245, 382, "Output"]
}, Open  ]],
Cell[118376, 2926, 517, 16, 62, "Text"],
Cell[118896, 2944, 730, 30, 69, "Output"],
Cell[119629, 2976, 305, 9, 39, "Text"],
Cell[CellGroupData[{
Cell[119959, 2989, 397, 10, 65, "Input"],
Cell[120359, 3001, 691, 23, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121087, 3029, 968, 31, 115, "Input"],
Cell[122058, 3062, 14471, 243, 341, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136566, 3310, 637, 15, 64, "Input"],
Cell[137206, 3327, 269, 5, 40, "Output"],
Cell[137478, 3334, 268, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137783, 3344, 465, 9, 64, "Input"],
Cell[138251, 3355, 138, 2, 40, "Output"],
Cell[138392, 3359, 138, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138567, 3366, 1145, 29, 170, "Input"],
Cell[139715, 3397, 14771, 253, 350, "Output"]
}, Open  ]],
Cell[154501, 3653, 119, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[154645, 3658, 1347, 53, 113, "Input"],
Cell[155995, 3713, 702, 21, 110, "Output"],
Cell[156700, 3736, 699, 21, 110, "Output"]
}, Open  ]],
Cell[157414, 3760, 110, 1, 39, "Text"],
Cell[157527, 3763, 89, 1, 64, "Input"],
Cell[157619, 3766, 484, 10, 84, "Text"],
Cell[CellGroupData[{
Cell[158128, 3780, 628, 19, 71, "Input"],
Cell[158759, 3801, 570, 16, 73, "Output"]
}, Open  ]],
Cell[159344, 3820, 101, 1, 39, "Text"],
Cell[159448, 3823, 410, 13, 77, "Input"],
Cell[159861, 3838, 89, 1, 39, "Text"],
Cell[159953, 3841, 268, 7, 40, "Input"],
Cell[160224, 3850, 378, 13, 41, "Text"],
Cell[CellGroupData[{
Cell[160627, 3867, 493, 13, 40, "Input"],
Cell[161123, 3882, 13456, 227, 341, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174616, 4114, 283, 8, 40, "Input"],
Cell[174902, 4124, 560, 19, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175499, 4148, 116, 2, 40, "Input"],
Cell[175618, 4152, 329, 10, 40, "Output"]
}, Open  ]],
Cell[175962, 4165, 93, 1, 39, "Text"],
Cell[176058, 4168, 567, 15, 67, "Input"],
Cell[176628, 4185, 222, 4, 62, "Text"],
Cell[CellGroupData[{
Cell[176875, 4193, 967, 29, 96, "Input"],
Cell[177845, 4224, 275, 6, 40, "Output"]
}, Open  ]],
Cell[178135, 4233, 203, 7, 39, "Text"],
Cell[178341, 4242, 87, 1, 64, "Input"],
Cell[178431, 4245, 499, 8, 107, "Text"],
Cell[178933, 4255, 89, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179059, 4261, 124, 1, 51, "Subsection"],
Cell[179186, 4264, 545, 12, 76, "Text"],
Cell[179734, 4278, 196, 4, 62, "Text"],
Cell[179933, 4284, 468, 13, 64, "Output"],
Cell[180404, 4299, 400, 9, 62, "Text"],
Cell[180807, 4310, 679, 19, 74, "Input"],
Cell[181489, 4331, 127, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[181641, 4336, 469, 12, 69, "Input"],
Cell[182113, 4350, 1177, 32, 74, "Output"]
}, Open  ]],
Cell[183305, 4385, 169, 4, 39, "Text"],
Cell[183477, 4391, 852, 31, 211, "Input"],
Cell[184332, 4424, 119, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[184476, 4429, 1913, 53, 112, "Input"],
Cell[186392, 4484, 210, 4, 46, "Output"],
Cell[186605, 4490, 210, 4, 46, "Output"],
Cell[186818, 4496, 249, 5, 40, "Output"],
Cell[187070, 4503, 247, 5, 40, "Output"]
}, Open  ]],
Cell[187332, 4511, 782, 14, 129, "Text"],
Cell[188117, 4527, 320, 7, 64, "Output"],
Cell[188440, 4536, 394, 11, 44, "Text"],
Cell[CellGroupData[{
Cell[188859, 4551, 2066, 50, 172, "Input"],
Cell[190928, 4603, 2358, 45, 750, "Output"]
}, Open  ]],
Cell[193301, 4651, 453, 9, 62, "Text"],
Cell[CellGroupData[{
Cell[193779, 4664, 1417, 37, 149, "Input"],
Cell[195199, 4703, 1901, 38, 710, "Output"]
}, Open  ]],
Cell[197115, 4744, 161, 3, 39, "Text"],
Cell[CellGroupData[{
Cell[197301, 4751, 3188, 88, 214, "Input"],
Cell[200492, 4841, 69, 1, 40, "Output"],
Cell[200564, 4844, 127, 3, 40, "Output"],
Cell[200694, 4849, 129, 3, 40, "Output"],
Cell[200826, 4854, 70, 1, 40, "Output"]
}, Open  ]],
Cell[200911, 4858, 1075, 28, 86, "Text"],
Cell[CellGroupData[{
Cell[202011, 4890, 1847, 49, 218, "Input"],
Cell[203861, 4941, 2032, 41, 710, "Output"]
}, Open  ]],
Cell[205908, 4985, 1522, 40, 132, "Text"],
Cell[CellGroupData[{
Cell[207455, 5029, 3160, 92, 214, "Input"],
Cell[210618, 5123, 72, 1, 40, "Output"],
Cell[210693, 5126, 147, 4, 40, "Output"],
Cell[210843, 5132, 148, 4, 40, "Output"],
Cell[210994, 5138, 72, 1, 40, "Output"]
}, Open  ]],
Cell[211081, 5142, 87, 1, 64, "Input"],
Cell[211171, 5145, 497, 16, 42, "Text"],
Cell[211671, 5163, 646, 20, 121, "Input"],
Cell[212320, 5185, 185, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[212530, 5193, 366, 9, 40, "Input"],
Cell[212899, 5204, 96, 1, 40, "Output"]
}, Open  ]],
Cell[213010, 5208, 279, 7, 39, "Text"],
Cell[213292, 5217, 359, 9, 64, "Input"],
Cell[213654, 5228, 152, 3, 39, "Text"],
Cell[CellGroupData[{
Cell[213831, 5235, 1677, 47, 142, "Input"],
Cell[215511, 5284, 144, 2, 40, "Output"],
Cell[215658, 5288, 144, 2, 40, "Output"],
Cell[215805, 5292, 146, 2, 40, "Output"],
Cell[215954, 5296, 146, 2, 40, "Output"]
}, Open  ]],
Cell[216115, 5301, 96, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[216236, 5306, 631, 18, 64, "Input"],
Cell[216870, 5326, 590, 16, 44, "Output"],
Cell[217463, 5344, 613, 17, 44, "Output"]
}, Open  ]],
Cell[218091, 5364, 177, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[218293, 5372, 404, 12, 49, "Input"],
Cell[218700, 5386, 73, 1, 40, "Output"]
}, Open  ]],
Cell[218788, 5390, 179, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[218992, 5398, 974, 27, 80, "Input"],
Cell[219969, 5427, 717, 18, 46, "Output"],
Cell[220689, 5447, 717, 18, 46, "Output"]
}, Open  ]],
Cell[221421, 5468, 138, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[221584, 5473, 256, 8, 49, "Input"],
Cell[221843, 5483, 239, 5, 46, "Output"]
}, Open  ]],
Cell[222097, 5491, 259, 5, 62, "Text"],
Cell[CellGroupData[{
Cell[222381, 5500, 3011, 87, 284, "Input"],
Cell[225395, 5589, 216, 6, 40, "Output"],
Cell[225614, 5597, 234, 7, 40, "Output"],
Cell[225851, 5606, 427, 11, 46, "Output"],
Cell[226281, 5619, 429, 11, 46, "Output"],
Cell[226713, 5632, 188, 4, 46, "Output"]
}, Open  ]],
Cell[226916, 5639, 90, 1, 40, "Input"],
Cell[227009, 5642, 463, 11, 84, "Text"],
Cell[CellGroupData[{
Cell[227497, 5657, 606, 16, 135, "Input"],
Cell[228106, 5675, 1138, 30, 74, "Output"],
Cell[229247, 5707, 1897, 49, 74, "Output"]
}, Open  ]],
Cell[231159, 5759, 117, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[231301, 5764, 862, 24, 71, "Input"],
Cell[232166, 5790, 796, 20, 74, "Output"]
}, Open  ]],
Cell[232977, 5813, 356, 10, 62, "Text"],
Cell[CellGroupData[{
Cell[233358, 5827, 337, 9, 40, "Input"],
Cell[233698, 5838, 600, 15, 74, "Output"]
}, Open  ]],
Cell[234313, 5856, 90, 1, 40, "Input"],
Cell[234406, 5859, 193, 5, 39, "Text"],
Cell[234602, 5866, 979, 37, 114, "Input"],
Cell[235584, 5905, 409, 8, 62, "Text"],
Cell[235996, 5915, 87, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236120, 5921, 134, 2, 51, "Subsection"],
Cell[236257, 5925, 98, 1, 39, "Text"],
Cell[236358, 5928, 427, 12, 68, "Input"],
Cell[236788, 5942, 151, 3, 39, "Text"],
Cell[236942, 5947, 237, 5, 46, "Output"],
Cell[237182, 5954, 601, 15, 129, "Text"],
Cell[237786, 5971, 888, 18, 174, "Text"],
Cell[238677, 5991, 378, 17, 113, "Input"],
Cell[239058, 6010, 130, 1, 39, "Text"],
Cell[239191, 6013, 538, 16, 64, "Input"],
Cell[239732, 6031, 388, 10, 62, "Text"],
Cell[240123, 6043, 427, 13, 40, "Input"],
Cell[240553, 6058, 681, 19, 62, "Text"],
Cell[241237, 6079, 276, 8, 42, "Input"],
Cell[241516, 6089, 102, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[241643, 6094, 604, 17, 49, "Input"],
Cell[242250, 6113, 103, 2, 46, "Output"]
}, Open  ]],
Cell[242368, 6118, 338, 8, 39, "Text"],
Cell[242709, 6128, 226, 7, 42, "Input"],
Cell[242938, 6137, 101, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[243064, 6142, 604, 17, 49, "Input"],
Cell[243671, 6161, 101, 2, 46, "Output"]
}, Open  ]],
Cell[243787, 6166, 93, 1, 40, "Input"],
Cell[243883, 6169, 461, 10, 84, "Text"],
Cell[244347, 6181, 256, 6, 40, "Input"],
Cell[CellGroupData[{
Cell[244628, 6191, 360, 10, 49, "Input"],
Cell[244991, 6203, 156, 4, 40, "Output"]
}, Open  ]],
Cell[245162, 6210, 1317, 38, 94, "Text"],
Cell[246482, 6250, 652, 10, 84, "Text"],
Cell[CellGroupData[{
Cell[247159, 6264, 778, 22, 89, "Input"],
Cell[247940, 6288, 1105, 29, 74, "Output"]
}, Open  ]],
Cell[249060, 6320, 184, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[249269, 6328, 923, 26, 80, "Input"],
Cell[250195, 6356, 146, 3, 40, "Output"],
Cell[250344, 6361, 149, 3, 40, "Output"]
}, Open  ]],
Cell[250508, 6367, 219, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[250752, 6375, 2178, 64, 111, "Input"],
Cell[252933, 6441, 439, 11, 44, "Output"],
Cell[253375, 6454, 439, 11, 44, "Output"],
Cell[253817, 6467, 237, 4, 40, "Output"]
}, Open  ]],
Cell[254069, 6474, 134, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[254228, 6479, 2025, 59, 200, "Input"],
Cell[256256, 6540, 171, 2, 40, "Output"],
Cell[256430, 6544, 173, 2, 40, "Output"]
}, Open  ]],
Cell[256618, 6549, 235, 4, 62, "Text"],
Cell[CellGroupData[{
Cell[256878, 6557, 148, 3, 40, "Input"],
Cell[257029, 6562, 895, 28, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257961, 6595, 933, 27, 72, "Input"],
Cell[258897, 6624, 1820, 58, 72, "Output"]
}, Open  ]],
Cell[260732, 6685, 196, 4, 39, "Text"],
Cell[260931, 6691, 89, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261057, 6697, 160, 3, 51, "Subsection"],
Cell[261220, 6702, 201, 4, 39, "Text"],
Cell[261424, 6708, 868, 32, 161, "Input"],
Cell[262295, 6742, 120, 1, 39, "Text"],
Cell[262418, 6745, 868, 32, 157, "Input"],
Cell[263289, 6779, 351, 6, 62, "Text"],
Cell[263643, 6787, 756, 18, 64, "Input"],
Cell[CellGroupData[{
Cell[264424, 6809, 238, 4, 64, "Input"],
Cell[264665, 6815, 1237, 38, 126, "Output"],
Cell[265905, 6855, 1239, 38, 126, "Output"]
}, Open  ]],
Cell[267159, 6896, 283, 6, 39, "Text"],
Cell[267445, 6904, 709, 24, 111, "Input"],
Cell[268157, 6930, 250, 5, 39, "Text"],
Cell[268410, 6937, 1034, 30, 111, "Input"],
Cell[269447, 6969, 186, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[269658, 6978, 694, 19, 65, "Input"],
Cell[270355, 6999, 1965, 56, 114, "Output"]
}, Open  ]],
Cell[272335, 7058, 257, 5, 62, "Text"],
Cell[CellGroupData[{
Cell[272617, 7067, 353, 8, 64, "Input"],
Cell[272973, 7077, 11717, 316, 130, "Output"]
}, Open  ]],
Cell[284705, 7396, 87, 1, 64, "Input"],
Cell[284795, 7399, 251, 5, 62, "Text"],
Cell[285049, 7406, 2511, 69, 145, "Input"],
Cell[287563, 7477, 297, 7, 62, "Text"],
Cell[CellGroupData[{
Cell[287885, 7488, 1796, 54, 160, "Input"],
Cell[289684, 7544, 226, 4, 40, "Output"],
Cell[289913, 7550, 226, 4, 40, "Output"]
}, Open  ]],
Cell[290154, 7557, 245, 5, 62, "Text"],
Cell[290402, 7564, 3135, 85, 206, "Input"],
Cell[293540, 7651, 238, 6, 39, "Text"],
Cell[CellGroupData[{
Cell[293803, 7661, 2914, 90, 218, "Input"],
Cell[296720, 7753, 141, 2, 40, "Output"],
Cell[296864, 7757, 142, 2, 40, "Output"]
}, Open  ]],
Cell[297021, 7762, 257, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[297303, 7771, 5058, 144, 441, "Input"],
Cell[302364, 7917, 142, 2, 40, "Output"],
Cell[302509, 7921, 144, 2, 40, "Output"],
Cell[302656, 7925, 142, 2, 40, "Output"],
Cell[302801, 7929, 142, 2, 40, "Output"]
}, Open  ]],
Cell[302958, 7934, 207, 4, 62, "Text"],
Cell[303168, 7940, 472, 12, 76, "Input"],
Cell[303643, 7954, 190, 4, 39, "Text"],
Cell[303836, 7960, 1128, 31, 282, "Input"],
Cell[304967, 7993, 216, 4, 39, "Text"],
Cell[305186, 7999, 159, 3, 40, "Output"],
Cell[305348, 8004, 245, 6, 39, "Text"],
Cell[305596, 8012, 527, 13, 136, "Input"],
Cell[306126, 8027, 331, 6, 62, "Text"],
Cell[306460, 8035, 87, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306584, 8041, 127, 1, 51, "Subsection"],
Cell[306714, 8044, 230, 4, 62, "Text"],
Cell[CellGroupData[{
Cell[306969, 8052, 730, 26, 89, "Input"],
Cell[307702, 8080, 678, 21, 108, "Output"]
}, Open  ]],
Cell[308395, 8104, 1289, 28, 107, "Text"],
Cell[309687, 8134, 3032, 103, 459, "Output"],
Cell[312722, 8239, 106, 1, 39, "Text"],
Cell[312831, 8242, 822, 29, 66, "Output"],
Cell[313656, 8273, 1363, 37, 107, "Text"],
Cell[315022, 8312, 883, 31, 66, "Output"],
Cell[315908, 8345, 92, 1, 39, "Text"],
Cell[316003, 8348, 852, 30, 66, "Output"],
Cell[316858, 8380, 1471, 33, 152, "Text"],
Cell[318332, 8415, 5763, 177, 522, "Input"],
Cell[CellGroupData[{
Cell[324120, 8596, 4604, 138, 564, "Input"],
Cell[328727, 8736, 18167, 314, 388, "Output"],
Cell[346897, 9052, 28208, 479, 388, "Output"],
Cell[375108, 9533, 28210, 479, 388, "Output"],
Cell[403321, 10014, 48662, 813, 388, "Output"]
}, Open  ]],
Cell[451998, 10830, 637, 15, 84, "Text"],
Cell[452638, 10847, 92, 1, 40, "Input"],
Cell[452733, 10850, 371, 7, 84, "Text"],
Cell[453107, 10859, 123, 5, 39, "Text"],
Cell[453233, 10866, 167, 3, 40, "Input"],
Cell[453403, 10871, 92, 1, 39, "Text"],
Cell[453498, 10874, 5585, 171, 435, "Input"],
Cell[459086, 11047, 89, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[459200, 11052, 705, 22, 110, "Input"],
Cell[459908, 11076, 73, 1, 40, "Output"],
Cell[459984, 11079, 73, 1, 40, "Output"],
Cell[460060, 11082, 73, 1, 40, "Output"],
Cell[460136, 11085, 75, 1, 40, "Output"]
}, Open  ]],
Cell[460226, 11089, 95, 1, 39, "Text"],
Cell[460324, 11092, 1662, 60, 114, "Output"],
Cell[461989, 11154, 98, 1, 39, "Text"],
Cell[462090, 11157, 2205, 67, 114, "Output"],
Cell[464298, 11226, 94, 1, 39, "Text"],
Cell[464395, 11229, 254, 8, 42, "Output"],
Cell[464652, 11239, 315, 6, 62, "Text"],
Cell[464970, 11247, 1443, 44, 157, "Input"],
Cell[CellGroupData[{
Cell[466438, 11295, 1305, 37, 153, "Input"],
Cell[467746, 11334, 26573, 452, 387, "Output"]
}, Open  ]],
Cell[494334, 11789, 360, 10, 39, "Text"],
Cell[494697, 11801, 87, 1, 64, "Input"],
Cell[494787, 11804, 379, 8, 62, "Text"],
Cell[495169, 11814, 150, 5, 39, "Text"],
Cell[495322, 11821, 119, 1, 39, "Text"],
Cell[495444, 11824, 706, 18, 134, "Input"],
Cell[496153, 11844, 663, 13, 107, "Text"],
Cell[496819, 11859, 658, 19, 159, "Input"],
Cell[497480, 11880, 89, 1, 39, "Text"],
Cell[497572, 11883, 157, 3, 68, "Output"],
Cell[497732, 11888, 129, 1, 39, "Text"],
Cell[497864, 11891, 1077, 32, 277, "Input"],
Cell[498944, 11925, 92, 1, 40, "Input"],
Cell[499039, 11928, 1061, 32, 277, "Input"],
Cell[500103, 11962, 408, 9, 62, "Text"],
Cell[500514, 11973, 335, 10, 48, "Input"],
Cell[500852, 11985, 92, 1, 40, "Input"],
Cell[500947, 11988, 178, 6, 39, "Text"],
Cell[501128, 11996, 119, 1, 39, "Text"],
Cell[501250, 11999, 563, 16, 135, "Input"],
Cell[501816, 12017, 118, 1, 39, "Text"],
Cell[501937, 12020, 342, 9, 77, "Input"],
Cell[502282, 12031, 463, 11, 76, "Input"],
Cell[502748, 12044, 120, 1, 39, "Text"],
Cell[502871, 12047, 1248, 34, 277, "Input"],
Cell[504122, 12083, 94, 1, 40, "Input"],
Cell[504219, 12086, 1230, 34, 277, "Input"],
Cell[505452, 12122, 446, 7, 62, "Text"],
Cell[505901, 12131, 87, 1, 64, "Input"],
Cell[505991, 12134, 177, 6, 39, "Text"],
Cell[506171, 12142, 450, 13, 45, "Text"],
Cell[506624, 12157, 1398, 36, 276, "Input"],
Cell[508025, 12195, 94, 1, 40, "Input"],
Cell[508122, 12198, 1377, 36, 278, "Input"],
Cell[509502, 12236, 154, 3, 39, "Text"],
Cell[509659, 12241, 89, 1, 64, "Input"],
Cell[509751, 12244, 134, 1, 39, "Text"],
Cell[509888, 12247, 1124, 35, 129, "Input"],
Cell[511015, 12284, 453, 8, 84, "Text"],
Cell[511471, 12294, 323, 9, 98, "Output"],
Cell[511797, 12305, 216, 4, 39, "Text"],
Cell[512016, 12311, 150, 5, 39, "Text"],
Cell[512169, 12318, 695, 19, 138, "Input"],
Cell[512867, 12339, 87, 1, 64, "Input"],
Cell[CellGroupData[{
Cell[512979, 12344, 1614, 46, 165, "Input"],
Cell[514596, 12392, 23870, 404, 388, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538503, 12801, 979, 27, 114, "Input"],
Cell[539485, 12830, 99, 1, 60, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

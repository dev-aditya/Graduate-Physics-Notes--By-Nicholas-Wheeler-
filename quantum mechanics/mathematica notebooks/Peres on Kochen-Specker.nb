(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    877295,      17766]
NotebookOptionsPosition[    859685,      17221]
NotebookOutlinePosition[    860229,      17242]
CellTagsIndexPosition[    860186,      17239]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"2", "-", "2"}]], "Input",
 CellChangeTimes->{{3.478269320731448*^9, 3.4782693209255857`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4782693216585083`*^9, 3.4782808136361427`*^9, 
  3.478394672921774*^9, 3.478433171657847*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "0"], "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"0", "1"},
      {"1", "0"}
     }], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "2"], "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"-", "\[ImaginaryI]"}]},
      {"\[ImaginaryI]", "0"}
     }], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", "3"], "=", 
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      }], ")"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"x", ".", "y"}], "-", 
    RowBox[{"y", ".", "x"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalO]", "2"], "=", 
   RowBox[{"(", GridBox[{
      {"0", "0"},
      {"0", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalO]", "3"], "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalO]", "4"], "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DotProd", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Transpose", "[", "x", "]"}], ".", "y"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], "Input",
 CellChangeTimes->{{3.478280827860013*^9, 3.4782808438670387`*^9}, {
  3.478352536838747*^9, 3.478352560607979*^9}, {3.478352598447554*^9, 
  3.478352608173324*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.47827130560446*^9, 3.4782713197744923`*^9}, 
   3.478280825171846*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4782714057513533`*^9, 3.4782714272886877`*^9}, {
   3.4782723208297033`*^9, 3.4782723749119368`*^9}, 3.4782808394975967`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "   ", 
  StyleBox[
   RowBox[{"Asher", " ", 
    RowBox[{"Peres", "'"}], " ", "simplified", " ", "proof", " ", "of", " ", 
    "the", " ", "KS", " ", "Theorem"}], "Title"]}]], "Input",
 CellChangeTimes->{
  3.478269325858173*^9, {3.4782694698763943`*^9, 3.4782695565063477`*^9}}],

Cell["", "Text"],

Cell["\<\
Nicholas Wheeler
Reed College Physics Department
22 March 2010\
\>", "Text",
 CellChangeTimes->{{3.478269574919289*^9, 3.478269599394958*^9}},
 FontSize->10],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.478271649185424*^9}],

Cell[CellGroupData[{

Cell["Spin one-half preliminaries", "Subsection",
 CellChangeTimes->{{3.478271666521331*^9, 3.478271677397811*^9}}],

Cell["\<\
The following 2\[Cross]2 matrices are found to possess all the properties we \
expect of spin matrices in the case of spin one-half:\
\>", "Text",
 CellChangeTimes->{{3.4783909819073544`*^9, 3.4783910408505087`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[HBar]", "/", "2"}], ")"}], 
    SubscriptBox["\[Sigma]", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "2"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[HBar]", "/", "2"}], ")"}], 
    SubscriptBox["\[Sigma]", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "3"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[HBar]", "/", "2"}], ")"}], 
    SubscriptBox["\[Sigma]", "3"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.478270767943904*^9, 3.478270844923037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[DoubleStruckS]", "1"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[DoubleStruckS]", "2"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[DoubleStruckS]", "3"], "]"}]}], "Input",
 CellChangeTimes->{{3.478270855961228*^9, 3.478270889216975*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[HBar]", "2"]}], ",", 
   FractionBox["\[HBar]", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.478270894565551*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[HBar]", "2"]}], ",", 
   FractionBox["\[HBar]", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.478270894599222*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["\[HBar]", "2"]}], ",", 
   FractionBox["\[HBar]", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.478270894663151*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"m", " ", "\[HBar]"}], "/.", 
  RowBox[{"m", "\[Rule]", 
   RowBox[{
    RowBox[{"\[PlusMinus]", "1"}], "/", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.478271096571005*^9, 3.478271125617799*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "\[HBar]", " ", 
  RowBox[{"(", 
   RowBox[{"\[PlusMinus]", "1"}], ")"}]}]], "Output",
 CellChangeTimes->{3.4782711291316357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[DoubleStruckS]", "1"], ".", 
    SubscriptBox["\[DoubleStruckS]", "1"]}], "+", 
   RowBox[{
    SubscriptBox["\[DoubleStruckS]", "2"], ".", 
    SubscriptBox["\[DoubleStruckS]", "2"]}], "+", 
   RowBox[{
    SubscriptBox["\[DoubleStruckS]", "3"], ".", 
    SubscriptBox["\[DoubleStruckS]", "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.478270923626837*^9, 3.4782709582772837`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[HBar]", "2"]}], "4"], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[HBar]", "2"]}], "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.4782709615096703`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[HBar]", "2"], "\[ScriptL]", 
   RowBox[{"(", 
    RowBox[{"\[ScriptL]", "+", "1"}], ")"}]}], "/.", 
  RowBox[{"\[ScriptL]", "\[Rule]", 
   RowBox[{"1", "/", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.478270994336007*^9, 3.478271071397928*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[HBar]", "2"]}], "4"]], "Output",
 CellChangeTimes->{{3.4782710595960007`*^9, 3.478271071944063*^9}}]
}, Open  ]],

Cell[TextData[{
 "We find that if we measure spin in the direction defined by the unit vector \
",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " we get the same result for all directions"
}], "Text",
 CellChangeTimes->{{3.478391107152883*^9, 3.4783912469290133`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckX]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], 
     SubscriptBox["\[DoubleStruckS]", "1"]}], "+", 
    RowBox[{
     SubscriptBox["x", "2"], 
     SubscriptBox["\[DoubleStruckS]", "2"]}], "+", 
    RowBox[{
     SubscriptBox["x", "3"], 
     SubscriptBox["\[DoubleStruckS]", "3"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckY]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], 
     SubscriptBox["\[DoubleStruckS]", "1"]}], "+", 
    RowBox[{
     SubscriptBox["y", "2"], 
     SubscriptBox["\[DoubleStruckS]", "2"]}], "+", 
    RowBox[{
     SubscriptBox["y", "3"], 
     SubscriptBox["\[DoubleStruckS]", "3"]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.4782696178355093`*^9, {3.478270486675638*^9, 3.478270600938822*^9}, {
   3.4782715532230597`*^9, 3.478271587205749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubsuperscriptBox["x", "1", "2"], "+", 
      SubsuperscriptBox["x", "2", "2"], "+", 
      SubsuperscriptBox["x", "3", "2"]}], "\[Equal]", "1"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{"\[DoubleStruckX]", ".", "\[DoubleStruckX]"}], "]"}]}], "]"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.478270614096381*^9, 3.478270724442049*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SuperscriptBox["\[HBar]", "2"], "4"], "0"},
     {"0", 
      FractionBox[
       SuperscriptBox["\[HBar]", "2"], "4"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.478270630853908*^9, 3.4782706476853724`*^9}, {
   3.478270714235998*^9, 3.478270730561673*^9}, 3.478271604477873*^9}]
}, Open  ]],

Cell["\[LongDash]this because ", "Text",
 CellChangeTimes->{{3.4783912984714727`*^9, 3.47839130077781*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[HBar]", "2"]}], ",", 
    FractionBox["\[HBar]", "2"]}], "}"}], "2"]], "Input",
 CellChangeTimes->{{3.478391274135325*^9, 3.478391274495023*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[HBar]", "2"], "4"], ",", 
   FractionBox[
    SuperscriptBox["\[HBar]", "2"], "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.478391275359282*^9}]
}, Open  ]],

Cell["\<\
And we find, moveover, that\[LongDash]trivially\[LongDash]all such \
measurements commute:\
\>", "Text",
 CellChangeTimes->{{3.4783913108451977`*^9, 3.478391344704452*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    RowBox[{"\[DoubleStruckX]", ".", "\[DoubleStruckX]"}], ",", 
    RowBox[{"\[DoubleStruckY]", ".", "\[DoubleStruckY]"}]}], "]"}], 
  "\[Equal]", 
  SubscriptBox["\[DoubleStruckCapitalO]", "2"]}]], "Input",
 CellChangeTimes->{{3.478271331902298*^9, 3.4782713867305193`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478271363610634*^9, 3.478271438687599*^9, 
  3.478271615567088*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], "+", 
     SubsuperscriptBox["x", "2", "2"], "+", 
     SubsuperscriptBox["x", "3", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"\[DoubleStruckX]", ".", "\[DoubleStruckX]"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4782715004883966`*^9, 3.478271515452248*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[HBar]", "2"], "4"], ",", 
   FractionBox[
    SuperscriptBox["\[HBar]", "2"], "4"]}], "}"}]], "Output",
 CellChangeTimes->{{3.478271504593841*^9, 3.478271516109737*^9}, 
   3.478271625592964*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.478271688666196*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A remarkable property of spin-one particles: the 110 principle\
\>", "Subsection",
 CellChangeTimes->{{3.47827169596489*^9, 3.478271706715467*^9}, {
  3.478273441192514*^9, 3.478273455233708*^9}}],

Cell["\<\
The situation is now similar in many respects, but more interesting:\
\>", "Text",
 CellChangeTimes->{{3.478391825527738*^9, 3.478391839480577*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[DoubleStruckS]", "1"], "=."}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[DoubleStruckS]", "2"], "=."}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[DoubleStruckS]", "3"], "=."}]}], "Input",
 CellChangeTimes->{{3.478271812100363*^9, 3.478271820327783*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[DoubleStruckX]", ",", "\[DoubleStruckY]"}], "]"}]], "Input",
 CellChangeTimes->{{3.478272507691524*^9, 3.4782725189970703`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "1"], "=", 
   RowBox[{"\[HBar]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"0", "\[ImaginaryI]", "0"}
      }], "\[NoBreak]", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "2"], "=", 
   RowBox[{"\[HBar]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "\[ImaginaryI]"},
       {"0", "0", "0"},
       {
        RowBox[{"-", "\[ImaginaryI]"}], "0", "0"}
      }], "\[NoBreak]", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "3"], "=", 
   RowBox[{"\[HBar]", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}], "0"},
       {"\[ImaginaryI]", "0", "0"},
       {"0", "0", "0"}
      }], "\[NoBreak]", ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.478271848110898*^9, 3.478271949584881*^9}, {
  3.47827201090944*^9, 3.478272014113604*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    SubscriptBox["\[DoubleStruckS]", "1"], ",", 
    SubscriptBox["\[DoubleStruckS]", "2"]}], "]"}], "\[Equal]", 
  RowBox[{"\[ImaginaryI]", " ", "\[HBar]", " ", 
   SubscriptBox["\[DoubleStruckS]", "3"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    SubscriptBox["\[DoubleStruckS]", "2"], ",", 
    SubscriptBox["\[DoubleStruckS]", "3"]}], "]"}], "\[Equal]", 
  RowBox[{"\[ImaginaryI]", " ", "\[HBar]", " ", 
   SubscriptBox["\[DoubleStruckS]", "1"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    SubscriptBox["\[DoubleStruckS]", "3"], ",", 
    SubscriptBox["\[DoubleStruckS]", "1"]}], "]"}], "\[Equal]", 
  RowBox[{"\[ImaginaryI]", " ", "\[HBar]", " ", 
   SubscriptBox["\[DoubleStruckS]", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.4782719663019447`*^9, 3.478271998676318*^9}, {
  3.4782720356410713`*^9, 3.478272104110845*^9}, {3.478272298661859*^9, 
  3.478272308122882*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.478271999399763*^9, 3.478272023424077*^9}, 
   3.478272071759739*^9, 3.478272105742075*^9, 3.478280886172503*^9, 
   3.4784332261042957`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.478271999399763*^9, 3.478272023424077*^9}, 
   3.478272071759739*^9, 3.478272105742075*^9, 3.478280886172503*^9, 
   3.478433226143869*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.478271999399763*^9, 3.478272023424077*^9}, 
   3.478272071759739*^9, 3.478272105742075*^9, 3.478280886172503*^9, 
   3.478433226198833*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckS]", "1"], ".", 
     SubscriptBox["\[DoubleStruckS]", "1"]}], "+", 
    RowBox[{
     SubscriptBox["\[DoubleStruckS]", "2"], ".", 
     SubscriptBox["\[DoubleStruckS]", "2"]}], "+", 
    RowBox[{
     SubscriptBox["\[DoubleStruckS]", "3"], ".", 
     SubscriptBox["\[DoubleStruckS]", "3"]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.478272167433392*^9, 3.478272213980423*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{"\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]", ",", 
    SubscriptBox["\[DoubleStruckS]", "1"]}], "]"}], "\[Equal]", 
  SubscriptBox["\[DoubleStruckCapitalO]", "3"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{"\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]", ",", 
    SubscriptBox["\[DoubleStruckS]", "2"]}], "]"}], "\[Equal]", 
  SubscriptBox["\[DoubleStruckCapitalO]", "3"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{"\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]", ",", 
    SubscriptBox["\[DoubleStruckS]", "3"]}], "]"}], "\[Equal]", 
  SubscriptBox["\[DoubleStruckCapitalO]", "3"]}]}], "Input",
 CellChangeTimes->{{3.478272236870864*^9, 3.4782722910512953`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478272391933737*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4782723919743757`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4782723920143557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[DoubleStruckS]", "1"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[DoubleStruckS]", "2"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[DoubleStruckS]", "3"], "]"}]}], "Input",
 CellChangeTimes->{{3.478272409191882*^9, 3.478272441471458*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "\[HBar]"}], ",", "\[HBar]"}], "}"}]], "Output",
 CellChangeTimes->{3.478272443199861*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "\[HBar]"}], ",", "\[HBar]"}], "}"}]], "Output",
 CellChangeTimes->{3.478272443203083*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "\[HBar]"}], ",", "\[HBar]"}], "}"}]], "Output",
 CellChangeTimes->{3.478272443207858*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]",
   "]"}]], "Input",
 CellChangeTimes->{{3.4782724608573008`*^9, 3.4782724686319523`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[HBar]", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.478272470678252*^9}]
}, Open  ]],

Cell[TextData[{
 "Spin measurements in directions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[RightVector]"], " ", "and", " ", 
    OverscriptBox["y", "\[RightVector]"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are found now to commute if and only if the directions are perpendicular:"
}], "Text",
 CellChangeTimes->{{3.478391935900959*^9, 3.47839204722077*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckX]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], 
     SubscriptBox["\[DoubleStruckS]", "1"]}], "+", 
    RowBox[{
     SubscriptBox["x", "2"], 
     SubscriptBox["\[DoubleStruckS]", "2"]}], "+", 
    RowBox[{
     SubscriptBox["x", "3"], 
     SubscriptBox["\[DoubleStruckS]", "3"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckY]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], 
     SubscriptBox["\[DoubleStruckS]", "1"]}], "+", 
    RowBox[{
     SubscriptBox["y", "2"], 
     SubscriptBox["\[DoubleStruckS]", "2"]}], "+", 
    RowBox[{
     SubscriptBox["y", "3"], 
     SubscriptBox["\[DoubleStruckS]", "3"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckZ]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["z", "1"], 
     SubscriptBox["\[DoubleStruckS]", "1"]}], "+", 
    RowBox[{
     SubscriptBox["z", "2"], 
     SubscriptBox["\[DoubleStruckS]", "2"]}], "+", 
    RowBox[{
     SubscriptBox["z", "3"], 
     SubscriptBox["\[DoubleStruckS]", "3"]}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.47827302393979*^9, 3.478273046754534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubsuperscriptBox["x", "1", "2"], "+", 
        SubsuperscriptBox["x", "2", "2"], "+", 
        SubsuperscriptBox["x", "3", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox["y", "1", "2"], "+", 
        SubsuperscriptBox["y", "2", "2"], "+", 
        SubsuperscriptBox["y", "3", "2"]}], "\[Equal]", "1"}]}], "}"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Comm", "[", 
      RowBox[{
       RowBox[{"\[DoubleStruckX]", ".", "\[DoubleStruckX]"}], ",", 
       RowBox[{"\[DoubleStruckY]", ".", "\[DoubleStruckY]"}]}], "]"}], 
     "]"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4782726794332438`*^9, 3.478272738132298*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       SuperscriptBox["\[HBar]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["x", "2"]}], " ", 
          SubscriptBox["y", "1"]}], "+", 
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "1"]}], "+", 
         RowBox[{
          SubscriptBox["x", "2"], " ", 
          SubscriptBox["y", "2"]}], "+", 
         RowBox[{
          SubscriptBox["x", "3"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[HBar]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["x", "3"]}], " ", 
          SubscriptBox["y", "1"]}], "+", 
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "1"]}], "+", 
         RowBox[{
          SubscriptBox["x", "2"], " ", 
          SubscriptBox["y", "2"]}], "+", 
         RowBox[{
          SubscriptBox["x", "3"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[HBar]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "2"], " ", 
          SubscriptBox["y", "1"]}], "-", 
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "2"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "1"]}], "+", 
         RowBox[{
          SubscriptBox["x", "2"], " ", 
          SubscriptBox["y", "2"]}], "+", 
         RowBox[{
          SubscriptBox["x", "3"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}]}], "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[HBar]", "4"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "3"], " ", 
          SubscriptBox["y", "2"]}], "-", 
         RowBox[{
          SubscriptBox["x", "2"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "1"]}], "+", 
         RowBox[{
          SubscriptBox["x", "2"], " ", 
          SubscriptBox["y", "2"]}], "+", 
         RowBox[{
          SubscriptBox["x", "3"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[HBar]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "3"], " ", 
          SubscriptBox["y", "1"]}], "-", 
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "1"]}], "+", 
         RowBox[{
          SubscriptBox["x", "2"], " ", 
          SubscriptBox["y", "2"]}], "+", 
         RowBox[{
          SubscriptBox["x", "3"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["\[HBar]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "3"], " ", 
          SubscriptBox["y", "2"]}], "-", 
         RowBox[{
          SubscriptBox["x", "2"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], " ", 
          SubscriptBox["y", "1"]}], "+", 
         RowBox[{
          SubscriptBox["x", "2"], " ", 
          SubscriptBox["y", "2"]}], "+", 
         RowBox[{
          SubscriptBox["x", "3"], " ", 
          SubscriptBox["y", "3"]}]}], ")"}]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.47827274283707*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubsuperscriptBox["x", "1", "2"], "+", 
        SubsuperscriptBox["x", "2", "2"], "+", 
        SubsuperscriptBox["x", "3", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox["y", "1", "2"], "+", 
        SubsuperscriptBox["y", "2", "2"], "+", 
        SubsuperscriptBox["y", "3", "2"]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["x", "1"], 
         SubscriptBox["y", "1"]}], "+", 
        RowBox[{
         SubscriptBox["x", "2"], 
         SubscriptBox["y", "2"]}], "+", 
        RowBox[{
         SubscriptBox["x", "3"], 
         SubscriptBox["y", "3"]}]}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Comm", "[", 
      RowBox[{
       RowBox[{"\[DoubleStruckX]", ".", "\[DoubleStruckX]"}], ",", 
       RowBox[{"\[DoubleStruckY]", ".", "\[DoubleStruckY]"}]}], "]"}], 
     "]"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.478272789092462*^9, 3.478272862918125*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {"0", "0", "0"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.478272845719027*^9, 3.478272863813613*^9}}]
}, Open  ]],

Cell[TextData[{
 "If we measure not spin but ",
 StyleBox["spin squared",
  FontVariations->{"Underline"->True}]
}], "Text",
 CellChangeTimes->{{3.478392127669424*^9, 3.478392143502656*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], "+", 
     SubsuperscriptBox["x", "2", "2"], "+", 
     SubsuperscriptBox["x", "3", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"\[DoubleStruckX]", ".", "\[DoubleStruckX]"}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["y", "1", "2"], "+", 
     SubsuperscriptBox["y", "2", "2"], "+", 
     SubsuperscriptBox["y", "3", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"\[DoubleStruckY]", ".", "\[DoubleStruckY]"}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["z", "1", "2"], "+", 
     SubsuperscriptBox["z", "2", "2"], "+", 
     SubsuperscriptBox["z", "3", "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"\[DoubleStruckZ]", ".", "\[DoubleStruckZ]"}], "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.478272910516633*^9, 3.478272979658662*^9}, {
  3.478273351009348*^9, 3.47827339902219*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SuperscriptBox["\[HBar]", "2"], ",", 
   SuperscriptBox["\[HBar]", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.478272985732717*^9, 3.4782734011618433`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SuperscriptBox["\[HBar]", "2"], ",", 
   SuperscriptBox["\[HBar]", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.478272985732717*^9, 3.4782734011678658`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SuperscriptBox["\[HBar]", "2"], ",", 
   SuperscriptBox["\[HBar]", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.478272985732717*^9, 3.478273401174425*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubsuperscriptBox["x", "1", "2"], "+", 
       SubsuperscriptBox["x", "2", "2"], "+", 
       SubsuperscriptBox["x", "3", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["y", "1", "2"], "+", 
       SubsuperscriptBox["y", "2", "2"], "+", 
       SubsuperscriptBox["y", "3", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["z", "1", "2"], "+", 
       SubsuperscriptBox["z", "2", "2"], "+", 
       SubsuperscriptBox["z", "3", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], 
        SubscriptBox["y", "1"]}], "+", 
       RowBox[{
        SubscriptBox["x", "2"], 
        SubscriptBox["y", "2"]}], "+", 
       RowBox[{
        SubscriptBox["x", "3"], 
        SubscriptBox["y", "3"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], 
        SubscriptBox["z", "1"]}], "+", 
       RowBox[{
        SubscriptBox["x", "2"], 
        SubscriptBox["z", "2"]}], "+", 
       RowBox[{
        SubscriptBox["x", "3"], 
        SubscriptBox["z", "3"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["y", "1"], 
        SubscriptBox["z", "1"]}], "+", 
       RowBox[{
        SubscriptBox["y", "2"], 
        SubscriptBox["z", "2"]}], "+", 
       RowBox[{
        SubscriptBox["y", "3"], 
        SubscriptBox["z", "3"]}]}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"\[DoubleStruckX]", ".", "\[DoubleStruckX]"}], "+", 
     RowBox[{"\[DoubleStruckY]", ".", "\[DoubleStruckY]"}], "+", 
     RowBox[{"\[DoubleStruckZ]", ".", "\[DoubleStruckZ]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.47827314419488*^9, 3.478273246979179*^9}, {
  3.47827328335457*^9, 3.478273288521077*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["\[HBar]", "2"]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[HBar]", "2"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[HBar]", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.47827325264085*^9, 3.4782732926990767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.47827330846616*^9, 3.47827331269727*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[HBar]", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.478273313894212*^9}]
}, Open  ]],

Cell[TextData[{
 "we discover that in every case two meters register ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[HBar]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " while the third registers 0. We have encountered here the \"",
 StyleBox["110 principle\"", "Subsection",
  FontSize->12],
 ", upon which all subsequent argument hinges.\n\nLooking back in this light \
to the theory of spin one-half particles, we encounter a \"111 principle,\" \
which is trivially uninformative. Looking ahead to the ",
 StyleBox["theory of spin three-halves particles",
  FontWeight->"Bold"],
 ", we have"
}], "Text",
 CellChangeTimes->{{3.478280938852735*^9, 3.478281091313107*^9}, {
  3.478284207638015*^9, 3.478284211865007*^9}, {3.4783921904724627`*^9, 
  3.4783922326137238`*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[DoubleStruckS]", "1"], "=."}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[DoubleStruckS]", "2"], "=."}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[DoubleStruckS]", "3"], "=."}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]", ",", "\[DoubleStruckX]", 
   ",", "\[DoubleStruckY]", ",", "\[DoubleStruckZ]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.478281645302945*^9, 3.478281657720058*^9}, {
  3.478281706090536*^9, 3.478281728203786*^9}}],

Cell[BoxData["Clear"], "Input",
 CellChangeTimes->{{3.478281638504136*^9, 3.47828164144452*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "1"], "=", 
   RowBox[{
    FractionBox["\[HBar]", "2"], 
    RowBox[{"(", GridBox[{
       {"0", 
        SqrtBox["3"], "0", "0"},
       {
        SqrtBox["3"], "0", "2", "0"},
       {"0", "2", "0", 
        SqrtBox["3"]},
       {"0", "0", 
        SqrtBox["3"], "0"}
      }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "2"], "=", 
   RowBox[{"\[ImaginaryI]", 
    FractionBox["\[HBar]", "2"], 
    RowBox[{"(", GridBox[{
       {"0", 
        RowBox[{"-", 
         SqrtBox["3"]}], "0", "0"},
       {
        SqrtBox["3"], "0", 
        RowBox[{"-", "2"}], "0"},
       {"0", "2", "0", 
        RowBox[{"-", 
         SqrtBox["3"]}]},
       {"0", "0", 
        SqrtBox["3"], "0"}
      }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "3"], "=", 
   RowBox[{
    FractionBox["\[HBar]", "2"], 
    RowBox[{"(", GridBox[{
       {"3", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0", 
        RowBox[{"-", "3"}]}
      }], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.47828131085953*^9, 3.47828147049061*^9}, {
  3.4782821798610363`*^9, 3.4782821999814777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckS]", "1"], ",", 
     SubscriptBox["\[DoubleStruckS]", "2"]}], "]"}], "\[Equal]", 
   RowBox[{"\[ImaginaryI]", " ", "\[HBar]", " ", 
    SubscriptBox["\[DoubleStruckS]", "3"]}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckS]", "2"], ",", 
     SubscriptBox["\[DoubleStruckS]", "3"]}], "]"}], "\[Equal]", 
   RowBox[{"\[ImaginaryI]", " ", "\[HBar]", " ", 
    SubscriptBox["\[DoubleStruckS]", "1"]}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Comm", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckS]", "3"], ",", 
     SubscriptBox["\[DoubleStruckS]", "1"]}], "]"}], "\[Equal]", 
   RowBox[{"\[ImaginaryI]", " ", "\[HBar]", " ", 
    SubscriptBox["\[DoubleStruckS]", "2"]}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.47828180724163*^9, 3.4782818102296143`*^9}, {
  3.478281896697279*^9, 3.478281898589539*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.4782815045537033`*^9, 3.478281744554935*^9, {3.478281791034513*^9, 
   3.478281812169072*^9}, 3.478281901700308*^9, 3.478282232358384*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.4782815045537033`*^9, 3.478281744554935*^9, {3.478281791034513*^9, 
   3.478281812169072*^9}, 3.478281901700308*^9, 3.478282232450395*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.4782815045537033`*^9, 3.478281744554935*^9, {3.478281791034513*^9, 
   3.478281812169072*^9}, 3.478281901700308*^9, 3.478282232502335*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckS]", "1"], ".", 
     SubscriptBox["\[DoubleStruckS]", "1"]}], "+", 
    RowBox[{
     SubscriptBox["\[DoubleStruckS]", "2"], ".", 
     SubscriptBox["\[DoubleStruckS]", "2"]}], "+", 
    RowBox[{
     SubscriptBox["\[DoubleStruckS]", "3"], ".", 
     SubscriptBox["\[DoubleStruckS]", "3"]}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{"\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]", ",", 
    SubscriptBox["\[DoubleStruckS]", "1"]}], "]"}], "\[Equal]", 
  SubscriptBox["\[DoubleStruckCapitalO]", "4"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{"\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]", ",", 
    SubscriptBox["\[DoubleStruckS]", "2"]}], "]"}], "\[Equal]", 
  SubscriptBox["\[DoubleStruckCapitalO]", "4"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{"\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]", ",", 
    SubscriptBox["\[DoubleStruckS]", "3"]}], "]"}], "\[Equal]", 
  SubscriptBox["\[DoubleStruckCapitalO]", "4"]}]}], "Input",
 CellChangeTimes->{{3.478281558642096*^9, 3.4782815635753727`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478281567328125*^9, 3.478282273054513*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478281567328125*^9, 3.478282273070718*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478281567328125*^9, 3.4782822730839863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[DoubleStruckS]", "1"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[DoubleStruckS]", "2"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[DoubleStruckS]", "3"], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", "\[HBar]"}], "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[HBar]", "2"]}], ",", 
   FractionBox["\[HBar]", "2"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[HBar]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.478282317044384*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", "\[HBar]"}], "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[HBar]", "2"]}], ",", 
   FractionBox["\[HBar]", "2"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[HBar]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.478282317188356*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", "\[HBar]"}], "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[HBar]", "2"]}], ",", 
   FractionBox["\[HBar]", "2"], ",", 
   FractionBox[
    RowBox[{"3", " ", "\[HBar]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.4782823172459917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "\[DoubleStruckCapitalS]\[DoubleStruckCapitalS]",
   "]"}]], "Input",
 CellChangeTimes->{3.4782823446805067`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"15", " ", 
     SuperscriptBox["\[HBar]", "2"]}], "4"], ",", 
   FractionBox[
    RowBox[{"15", " ", 
     SuperscriptBox["\[HBar]", "2"]}], "4"], ",", 
   FractionBox[
    RowBox[{"15", " ", 
     SuperscriptBox["\[HBar]", "2"]}], "4"], ",", 
   FractionBox[
    RowBox[{"15", " ", 
     SuperscriptBox["\[HBar]", "2"]}], "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.478282349054851*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[HBar]", "2"], "\[ScriptL]", 
   RowBox[{"(", 
    RowBox[{"\[ScriptL]", "+", "1"}], ")"}]}], "/.", 
  RowBox[{"\[ScriptL]", "\[Rule]", 
   FractionBox["3", "2"]}]}]], "Input",
 CellChangeTimes->{{3.478282373361059*^9, 3.47828242269909*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"15", " ", 
   SuperscriptBox["\[HBar]", "2"]}], "4"]], "Output",
 CellChangeTimes->{3.478282437929167*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"\[HBar]", "\[NotEqual]", "0"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Comm", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[DoubleStruckS]", "1"], ".", 
        SubscriptBox["\[DoubleStruckS]", "1"]}], ",", 
       RowBox[{
        SubscriptBox["\[DoubleStruckS]", "2"], ".", 
        SubscriptBox["\[DoubleStruckS]", "2"]}]}], "]"}], "\[Equal]", 
     SubscriptBox["\[DoubleStruckCapitalO]", "4"]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"\[HBar]", "\[NotEqual]", "0"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Comm", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[DoubleStruckS]", "2"], ".", 
        SubscriptBox["\[DoubleStruckS]", "2"]}], ",", 
       RowBox[{
        SubscriptBox["\[DoubleStruckS]", "3"], ".", 
        SubscriptBox["\[DoubleStruckS]", "3"]}]}], "]"}], "\[Equal]", 
     SubscriptBox["\[DoubleStruckCapitalO]", "4"]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"\[HBar]", "\[NotEqual]", "0"}], ",", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Comm", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[DoubleStruckS]", "3"], ".", 
        SubscriptBox["\[DoubleStruckS]", "3"]}], ",", 
       RowBox[{
        SubscriptBox["\[DoubleStruckS]", "1"], ".", 
        SubscriptBox["\[DoubleStruckS]", "1"]}]}], "]"}], "\[Equal]", 
     SubscriptBox["\[DoubleStruckCapitalO]", "4"]}], "]"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.478282470268721*^9, 3.478282575674494*^9}, {
  3.478282615065542*^9, 3.478282700894927*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.478282505051073*^9, {3.4782825611615353`*^9, 3.4782825772734528`*^9}, {
   3.478282647520298*^9, 3.478282666026978*^9}, 3.47828270186166*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.478282505051073*^9, {3.4782825611615353`*^9, 3.4782825772734528`*^9}, {
   3.478282647520298*^9, 3.478282666026978*^9}, 3.47828270189662*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.478282505051073*^9, {3.4782825611615353`*^9, 3.4782825772734528`*^9}, {
   3.478282647520298*^9, 3.478282666026978*^9}, 3.478282701910789*^9}]
}, Open  ]],

Cell[TextData[{
 "we discover that now spin-squared matrices ",
 StyleBox["do not commute",
  FontWeight->"Bold"],
 ". We encounter a brick wall even before we can contemplate phrasing an \
analog of the 110 principle. And so it goes also for all higher spin-values. \
\n\n"
}], "Text",
 CellChangeTimes->{{3.4782827316630487`*^9, 3.478282782465016*^9}, {
  3.478392280113611*^9, 3.4783923560531807`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Enter: The (non-contextual) hidden variable hypothesis", "Subsection",
 CellChangeTimes->{{3.478394288530835*^9, 3.478394307315744*^9}}],

Cell["\<\
To account for 110-property of spin-one particles, we posit the existence of \
\"instruction sets\" (inscribed on \"hidden variables\") that tell the \
particle to register 1 else 0 when subjected to a spin-squared measurement, \
and that those instructions are so coordinated that two members of every \
orthogonal triad are painted blue (instructed to register 1) and one member \
is painted red (instructed to register 0).\
\>", "Text",
 CellChangeTimes->{{3.478394355781955*^9, 3.478394530194028*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.05], SphereBox[{0, 0, 0}, 1.2]}, 
   {Opacity[0.8], SphereBox[{0, 0, 0}, 0.5]}, 
   {RGBColor[1, 0, 0], Thickness[Large], Line3DBox[{{0, 0, 0}, {1, 0, 0}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], Line3DBox[{{0, 0, 0}, {0, 1, 0}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], Line3DBox[{{0, 0, 0}, {0, 0, 1}}]}, 
   {RGBColor[1, 0, 0], SphereBox[{1, 0, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], SphereBox[{0, 1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], SphereBox[{0, 0, 1}, 0.05]}},
  AutomaticImageSize->True,
  Boxed->False,
  ImageSize->{388.6297196330218, 394.44365897164494`},
  ViewPoint->{2.0299972208158965`, -1.6622864390408219`, 2.1368001961018064`},
  
  ViewVertical->{0.13318999376294818`, 0.2057426697731152, 
   0.9695000667333947}]], "Output",
 CellChangeTimes->{3.4783489701726627`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWlwlNeaJpiVe2oD27duVVd191RNR3TPdEzM9PzomImYmJiIuVV3v9e7
QWBjA2bf9x2E9n1HCwgkQEgCIQQIIUAgCYTNZrMZY2Pj3b6+mw2SMlMSEv3O
877nfCe/TBLKUT0/LxFP5pdfpjLPec/zvMs55/v4zfSVc2ctmr5y3szp//Cz
5dOXzp03c8U//HTJcpxy/ZXD4fwZ8Nw/OPiYHA7rIfLvF/xgP/OXE3858ZcT
fznxlxN/OfGXE3858ZcT//+c+C9y7KJ790NAmOGYyI8euncvLB/5K9vH/4P+
+Pf46PcDAoeHHwN0byCcwH+YRPfvh/10/144bPvDfyvHbvxhCB8PWX/s4z9z
0/2B8DN4GE7A3w77+Qt8/AX4ofv3QlazHd/bvu9vrXbju/AVDId8mYu/LJm/
zE8D/ICjCfy1Tv7aAH8tjr4P/dH2Zc9YvdIN4y+TDk3gv57I3+PjI3wEhzRw
X+BIkUecu4fXMBaANgxIuwe+D/OvMBzf2H5qAj+4xG4uafh9xqB0dRBGvz84
nEgDg8Pyeph/VH743/MPT+Tfc/LPBWy/MvC9WMjxhe1XEvnByb/i5B/x8Xe7
+Qsn8Hd7aVCOuFeDA3hpfbeHv1t64OSvlh+ImP+u7Qf8xmJhY378lOqB6ob8
VAr/lI9/IJl/ymN+in9Ffi/sivNTd2w/5bb6EvLwD4idfOYHnuEf0OMyqOD4
kTxGj5WXH/00KA/3YMVBZUAeNjGiNmdMQ27bGvJXNpYI7QaZ+3h0cpP8pkl/
zU1y0ZC0a8jWrqf50alMgIYETEPcNPh9lMkHvlNj+p76+f9mJ/tgOPLLCfx7
yfx7TvPL/ji/nKJ+GadcfDSBfz6Rfx6fw+/zzzMc0hAbr9AOxw3VhrGoNqje
y4gzr8LCWfz1EH8tM2xIj31SnNYE+NHHp5x8JMZI4tb4rZ//LjIC76qfH40x
AUvGa4QzzD+vZYNH8GqIf35I+od3hhQcCfzo41MT+Ugs4uE2JMdpDf/t98PG
Nh7duMHvIuNzRTUuHKdxPnvjhgQOPz9O4HZ5aGhI2cbJrfkRH/2I2+BwKTPd
F/DA3ecB/kGtuaRaE7Rag1G6H2OqgaGwaU2AHydyaxK4NQFug4uCrCl1NDD8
dJwmJZsmOblFXtOQsDQGcFxUDRlQykU7zEjJzwsciebnJ/DPu/lH/fzzyXzk
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
ulCoJRcGJJs1SH03GtkfpreFKlaJr3ralMPJxjulC6kWalItgncCpxDi2Dst
mZzjpKWw/38WZi0HVsWwy+6ecoF8i11A6WSdN7FrAmqBHcwuoH6yYtYeza59
QNMkxS5m1gHgINDGLgkMOfyyZtYrmln4+07gOFjSBZzAObggJ3W/wuMP/0M9
jEkKvZOESNSHj/ZNyaWzU5gwZ6eylzqH1/3AObyHYze/gJn7U9UpPOOj5yZz
IDyHrzmHrz2H1px7KYfOAn0vKpr1PptNZ36TRSd/kUnHf5pB7T9JT4rDME5k
VerO60vCNbxjZb3+x3EtUSdammZyZz7xWcN6jVTCmJ55iBDOabzWXBvNmFeD
Qi72UUNu++RVGIExbA+MEwy53IZcLrMxXhimdsy69Yr+uIWn49TLiZp4CxAW
F2riLZqUBcJlM+mYcg7mHIgHyjmZc47/JKxbi7FYD2wGtsb4NDvryibbAqJm
XZ2ddZMV6xo165qBFuAA0KoZZw+EHYxXlC87zpisGHcSOCU06ha+nMHrnslC
N/ZXkzk160vNA6XyhGKCqbl0fiq6df5V8Oyt1/gzb7+Wy0cRvJrL51x84KS3
pvDS3Hl893l8dz8s1I8Cuf9lANw790I29T6XRad/nUknfpFBx/45Q3ZBjfPk
j5SF4149NyEeTZimOedXcxPDMi2h59cjVOP50gdek4clxOGbdRs1PRPxw/nm
ss+h2/nmNcEyRe8o02su+pIBdUFyUKVfPCU8/tRjKeYxfm0RsFhRTPk0fB4E
A79yQC+m2woM1v9KK2HkVcA6YIMmWhqQAWSlRohWBJTEEg3v12Kw6ybn0S6g
HmgA9gCNk/Ph2vJAtDzaDxzA69ZJ+dQGtAOHgSOv5IFkeSBZHtxaHnUBJ4CT
+M5TQDdIdBo4MzWPeoBeoA+vz07Jg2+amodR7381D8in868x8sClPHp7GgN8
ej2XLgAXXwelLvDDxTfY9V14I5ePrGcXfwBx8QL+5MJrCm8zHUHbt6fk0Nup
OfQWrPYWU/ClbNAvC24vk7pBv66fZQT0HKuQjgn2KPN4kmLcq/aEDAfVNp8Y
5snmWo9hXsBspvdH881l+BYTUGcr5lVEM48D56BVTQ7ZwiizTM2xuqOZ57S5
u+GgjX4JOqBKQRPfzSXoxwUvp9v4l0VL4OaWTGbk2DkICqZaFFydGu3rmILp
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
ZNNFV1001cUs6mIWdTGLuphFXTTVSVOdzKKOLsmUjqbaW+mKprScarScatTl
oqlF0VQKRsvC5LeN5Bg6Lh3fe7Bx+7ekTik7gERIbyhPVd9UIB2cjHX896fS
xquWXH8jlTwVWuId9LeUG2siLS9lJ9BJQdEp96HxPx18r+RN5ehSjyu4JsD5
13SiyZHhVBBNDauBJQ85Z9i7nWEYndEfwBGGHIbRnXeNYu92X+jdPp6S4cwS
zjyefSvAMeGlAIdhFEI0Yd5LhONAzF3CuS/BSX7kQirhZDCMsp7LcNi3iXAY
RiXBm1zMm6gkmmqiqY2U4DTGHIKTsMM+inCSdwlnF50c/vVE0y3AIZo+oukn
moFcGU7BHkZYowyiseI9FBNNCdGUEc10+R7hsCr3MF+1h4XqPaJh1e4Rzh4s
dXuwEo21YQ92ljpVhpMGtKcDy0Sz0iLAYSiphMHH1SpEk5qz8FEq/5lUGEEC
FaE6NgUs/HVD4tJBLp0yl06ZS6cTti6Bi51MbCwLzF1mFrnoF2DSk4ueXPTk
omcM6clFTy56ctGTi56tm56tm55cOsmlo4NcOODoyKW9mWRkLhqZS1M2/h/a
3is6zuRK0MSBo69Sd0/3mDNzdnZmds/Zpz37uk/To5EvldStVkstqVstqUpl
6L0reu+9BT0JggQ9QQIgvHcJJLyngSGQABIeCUNy5tz9bsSffyZIVkszPftw
UyCIosiM77v3RvwRkR2pF6Xm9sGI0G2lIWFm2AW04GcrmI8n+fBr5Bj7/0EO
9yNOrBLuGnfYJ8jHuHOdaGfV2bmE5LV7U3y068rs91zAGO08PTXb5Mb1rt8l
3z8qyz+6jDlqzR1rzY/CrPlxHlFkrdEW7ie0cD+tklU/q5FVWLMaa9b8fXDG
80y++uS5sWbzF+2ybX6n7MSa3Uu6jTUHgtbQwp1Y1y+nvhqUs5Sa85uxZuuI
XNk+gjUjkkD7dkOtodTcxpi7B7GGUvNQrTlGycGaJ8YaZj6nJiT7jGPNOcca
jCm5rNZMiefqFNZMiff6lFQmTEnVjSmpuelYc4uSgzWNag3G3MGYe4exBmOe
qzUY0/ZYqe9I1qtqjTUY04Ux3djiY4bTq0HLlo8xBRhTeFWkiBigzAxRYoZy
tMxMmVmOmpNnlgzo3Ibzbfc2VKAGFfKCPLrPtJiKU4xCJQGjkV8VKhlFHxQq
HUYdFCpFn1LVxy8+FOouQ58yH9qgT9lLRx8qTtkLRyHVpzVMIbq4Mrq4MipO
GRWnlJlPCV1cMTOfolwiC4XSUCjZ6pNj9Wl/clG8iXvtTQqR9pL1oD5OrzNp
IyLSrqS9W3nMEvUMZ2ePHoMLntuelOCHicz+52gWFa6Z7ksYtvsSzEpblOtY
7Hscmzvdsaiwm+WmdC/31JidG812z47H2IVE96N5/xKXLjouUYE+VpdSCFz6
UZhLPy6zS9A/xaWf4dLPa2XV3zXI6l824VKLrP31U1n/2+e49EI2ftYum2nb
ti14KTsWdRmX9tG2HVjZJ4dW+eXY2gFcGpRTG4ZwaVjObR6Ri9tG5fL2Ubm6
c1Suq0tUn8T9jktUn/tMhR5SfR7hUfJxXMKjNDzKxKNsPMqNw6Xzk1J4YVKK
LoW5hEfl8VNSEXTp5pRUJ05J7a0pqbs9JQ13pqTxrrKOSfhy74i6NCXPH03h
0pS0JU9JO9GRMiWdqVN4RKRNSXf6FC5NSU/GFC4RmfpnFFzVVaGiayIl8SKD
OcalkEaRapAuRRcYh2SITm1Qo2gCkwh1qHicpq1kXJfY0MlvYgyN0Kl0BI2G
UWhQesoGxFfWT/jRyOrUpTp5uuSlp5NAJw/VqBydyqlGHlTyoJIHlTxUIw/V
yOOoVMaEqBSVSlCp2FGpKB2dUCnfUSnzujxPOW+vwJrhToKinI/6MAq5S1eT
zhKCeaqjBejVvPcoY+Y/xpjgNXL6caR/8BFoUJXAu6pEu6rEuB3aB64gxo1Z
9sTQlBXkzWy3Qwsts5ntpbONG9+3H77wA/z4KIHpDbXm4yQiFTfSiWwiWGvK
nCVo9aMaN6wfq9SPf2iVNf/4TNapH9SZjZ+rH52ylTqzY3G37GZas295L374
5dDqfjmKH8fXqx/DcnbTiJzbMmr92IEfu8bwY0xuUGcS9wfk1sFxuYsb94/g
B248wo3kE+OSqn6cVj8mJAs3cs85flxUPyal+MqklF2dxI9JKb8+KRUJk+Kl
zlQG/bht/ai/OyWJh2yduYMbrbjxNGlKnuHG88c4on6kgHdHqiajl6jRlW71
6M6wevRkGj2kj/JSgBpFqFGcgCIJQjOWax7d5DGZyXeiYNLIMaz1ZUhfBotQ
AjdQCzFsldEoZdT9pYGI/4AZGFKGHWXYUYYdHscOD3Z4sMPTK13l2FHejQ0v
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
qv3SUUMAd0edXzrr9DOgO+v7Imaax6WdREejRq+UgngZ4SkB9xKJNIk7WilX
xqXNRqSiHvFBEHaiU9rJ4m3A/pz2/FlDs7QyCW2prZVGYK+pLJVKT15w/S3U
pjjPYIKczLYrLqA/111NN49Tza7+P3G7ltnu49TYP5LzsT+G81nKeaR7XDLa
5dxk8dANerEu55Hu7pvgOuP4G73C9Y39xLEfmWkodJtY9F+yYLxEln7PK0s/
rpFlP2mQZX/bLMt/oXy/kOW/he9PHb7nW75XLiVoUlbB95q1TEfhewN8b97c
I9u29cjOHT2yB773wffBvb1y+ECvHDvYK8eP9MrJozB+vE/iTvbJ+dN9chG+
r8D3tfN+uX7RLzcu+yXxil9uX/PLHdi+f93ynXQTxhP7JflWv6Te6ZeDNCdH
4PsouTvrQb9kw3cufOclwzhsF6YOSPETh/F0h/HMASl3+K6E7yr4robvGtiu
he06oh62G2C7kWiC7+YSZbxfWkr7pbVM+X1arisiz2D7udfGC9h+UeWXtirS
c1s1L+01mq7ba/ukvQ6GoTrSvEbBda9hur1RP5ulvYk+u6xEVyQ8pcBNtAdp
fmH6khek7zY3uomX0kZ/8qKpHapfQPVTaYXslrp6aaipltrKCqmk4UnPeOBS
Hessm+uaYfChy1z3Gam2JPZ+FaU18IqY0qD35zV0J1HsdLQ/CWc52k4yXZ4D
BmdnR9m42RhgnhrZWWbYuZQo5xSXw7SmbdufvHJOAL+KmOGCHe1uPp7nXrGi
DYlpTWzGtv33X4I1aftb5bKUtmTpX9XLMtqSZX8H0n8P0r9pl+UgvfxzJ2XT
d69khrmSlL1yFal7La3JelqTDT7ZtNknW7aStkF6164e2bu7R/bv7ZFD+3vl
6CGQPtwrJ472gnSvnAXpcyB94WyfXIrrk6sX+iT+Yp9cB+mbIH3rKljH++Xu
db/cT/DLwxt+kPbLY5BOdpA+5CCd+bBfspL6Jedxv+QSeSn9UpDaL4VP+qU4
rV9KiNKMfinL7BdPFjO77H7x5vRLZW6/VOX1S3W+olpT0M/Q1Bb2g3W/NBSb
iJSmkn7e1eYyqPZAtUa5X1q9fnmmUamZ+FmVn8z3nCz9QqOmT9o0ILoNotvq
Ibu+l/8lGmAYnEG/qZexa6MBaSdKSzXHlZUqHbAsz034NBRuH436C4B+DtDP
AfoZQD8F6BaAbq5vkobaOqmtrpJKb5l4yvIjzIbBaPfhv7lkZ7aL87z37HnR
WaWe1A1okjYkB8yWYvsoKNbtSCJCB9uV5d9ZsA+/04yYWeWQAdpSbZ6FznTX
TiZdqqPf2VI8FTHLXupoc7Zz1iTWvQYiyt7oEryeTp8DvYmyAgcnlCWy5Lvk
6B/XydK/AeaftcqyXz2XZf8IzL8DZu1B6LFXGJh9Jj8rzKvW0IesY0IJzBs2
+WTzVp9s3e6TncC8G5j3AfOB/T1y+GCPHAXm48B8EphPnwTo071y7myvXIzr
lcvnARqY4y/3yY0rfXLzWp/ciu+TO9f75B4w378J0MD86BZA3/HLfkA+SO9x
mN4j/YFfMpL8kv0IoJMBGpjzgLngiQW6KB2ggbkUmMuA2QPMFcBcAcxeYK7K
N0BLNRDXFCrYdUX+iHlSX+yXhhK/NJb6panMD9F+iCYqCK8lurWyT55WEdV9
8qxa8/Czmj4lEpKf1/XaqAfeF/W9+m3Scxvp+QVTxedNPVHyglYjBkB7pITk
HAzL9jMlGZxVFEh+1vxSnjZ1Smtjm7QwbWxm2thQ1yg1NTVSWekVj6c4yk6f
ghu3zH2EwY8ydHLyN4LU6nUMDrqxiq55Wj/jj6R27OupNTtYTPdsoDUPcea4
yTfSPQ8Y66xr209cfBtO8+DyjX5lfmUx/UgW/uccWUTeXfID8u5fN8rSnzXL
sl88k2X/0CbLFNPfO63Ewi5ZwVRwhWK6MoTp2q/Iu2C6cQt5F0y37/TJrt0+
2QOm+/aRd8H0yOEeOXakR06A6SkwPXOqV+LA9AKYXjrfK1cu9sq1S71y/Uqv
3LjaJ4kgejsBVIl7N/vkQWKfJN3uk70guo84AKZP7vsl7aFf0sE087Ffsoic
ZD+Y+iWfKEjzS2G6X4oy/FKS6ZfSLL+UZfvFk+OX8ly/VOT5QdUvlQV+qSKq
C/1SU+SXWhCtBdF6ogFMG0C00dMnTeV90lzBRK7Zq11BC5S2QGmrIfRpjebR
p7W98kyjTjuFZ/X6vef1PVR8orFHu+wm2gTQ5HehdIbJsM9aHFLLRIqJumq+
1+qztJKEWgG1BVBbALUZUJsankt9fTOQ1kllVZWUez0R0bacOp+rabYimbNw
5jxTGK+z3X3p85x+2Hy4YHgP8YG+znAyb2Ai5msYHv1ahgctwzFm1Xr6KaZg
Bo51ZoLDk27eDTvoN8vtlUMXTcc4jyb1wrbgbYa6DV2XrAMm777RNY43wYWO
hf+lSBZ/t1KW/KhOlpB8l9JJLKWTWPabDlkW7CTmO0Qv9cmKFdocQzSdxDol
eqNPvoLoTdtIvjt8sgOid+31yd59PjlwAKoPQfXRHjl+rEdOnuiR0yTes2dI
vhB9AaIvXYBqiI6H6IRrUB3fK7eu98rtG71y90af3Ifoh7f6ZDc074Xm/XQQ
KQ/6JJVIS+qTjEd9UN0nWRCdkwLVT6AaogscooshuhiiSyC6LMdS7TFU94k3
vw+qicI+qS4iivukpqRP6kqJsj6p14DoRohu9EK2t1eaK4kqopqo6ZWWGkW4
pVYzbCsJt7Wuh6lYjzyth92nDbpM8bSRXzYRZk2O12h5CrDRBuIaIDZRxc+3
moTbQifR0twtzXDc1NghDQ1tUk/rUFPbKN7qGimvrJT84jx7TtM5m+NQPNeO
uf30pTG7l9wsfQUvtdVyDMSG3Zkuu9HB54vT2B1/H7vRYewafmOC7bDNvgqr
ajBsto7bc9mhtYu3+t9I9zMIQtgaL1+7/6IZLsW6gEFj/Dpg16RjleKIb8nC
b3pkMSl5CSl5CZ3D0l8+l6V0DsuczmE58C5nZreczmF5sHMA3jW0weuAdz1t
8Abg3Qy823YBMPDuBt59+wH4kE8Ok46PAu8J4D15CoDP9EhcXI+cP0f3ALyX
NCUDb/xVAAbem8B7C3hv3wTgxF65f6tXdgHuHmKvwnu/V1IfAjDwpgFvBvBm
JgNwSp/kpPZJ7pM+yUvvk4KMPinM7JMioji7D4D7pDSnT8py+6QceMuBtwJ4
vcBbCbhVRHVJr9SUKpC1Zb3AUF/eK/UVvdIAuA2A20g0AW8T8DbVWICba3uk
GWhb6mgJWuq1JWglDbcAbQvQthItzZqSW5p90cqm5vRWn7QSVdVKdJWi22xS
cGNzlzSAbX1ju9SSfqvrmsVL+i0n/RYwGXxtPkHCPFEIgmoeLwc/ZcYeoLag
xiio8xTU2S6o5tjcrOnb+j61eB55T1NrU6tO2Ny0qovFFlUFfthpaIO3/rm0
hi8kjzmb/WLcCzHn2tbhle7vDuKpB0T1RSdv5ivF85uy8NsVsvjjOlnMLG2J
ya10C7/tlGV0C8vpFpYvdNBcFuoWVoPmGpradaD5FU3tRrqFLaC5bQ/NLWju
OeCT/Qd9cvCIj9zqk+PHLZqnQPPMWfA8B57ne+TipR65crlHrl7pkfhrPXLj
eo/cBM1E0LwNmtuZle0Ey91guZdm9vGDXnKr4tkrTx71StrjXklP7pXMlF7J
ftIrOURuWq/kZfSCJ5HVK0VEcXavlOQQub1SltcrnoJeKScqinrFW9wLnkSJ
YlkNljOlxtMrtaBZB5p13h6prySqeqSBPNhQA0yNNcpVI2Q2QWZTveKnrzNp
PKG1wUdeJJp85Ej+t5n/JZpaALRZG9dm0xXwpXj5Ywk9ClSl/30DP9fQ1CV1
jZ1SQ16tqn8qFTVN4qmqlcKKCjN0H9oZuLkQ2DwrsJ/qYq8zfq0w6lcBfXAd
0H3XAZ3lB+xlMLHv6V8/CQc0PH8GNKKD5T/EqIbBNMrF9H3lf0b4Yz0no8a6
DztCoOqk0ryYK/jss+s5b4H6f8uCvyyQRd+rksV/1RCWR2kCPgFWmoBl5NFl
iyyoy2kCVtAErKKtXU0TsJa2dh1NwAZA3Uhbu4UmYDug7iKH7gHU/Yd9cghQ
jx4H1pM+OXmaPAqoZ8ijcReA9WKPXALUK4B6FVCvA2pCArDe7JFbiT2yFVB3
AOpOQH14r0ce3e8B1h5JBtTUJAULVCP+vaQDamZqr2QBajag5qZbWPMzLayF
gFoEpMVEaT4BpGWFAAuo5UQF+dNbCqxlPVJFVHuICoozkNZqAGodRGnnWVcD
tERDrQZU1QFeY72+NOhLoyLYCJ6NzSb4Sza2+KIspXxFem4A0HL+OA0Pf7TH
65MawKxuaBdv/XOpqG0RT3W9FHor5Ul+TnTY5CRYHp1lUHMB/JSt9W+cPtA+
uAgYYF9pRtWTxwEDUWCCGNeImPXPoFaf1I2biVesc0TGoTX2PYsE0e52i+Dp
GOeTH+baLdOvbEbVS7jdswKvbej19QH7kG6mofXbsuCbZbLoo2pZ/BObVpcw
CVtKWl1KWl32JaSSVpfRri6j4i+n4i8nra6E1FVU/NWQup6Kv4GKvwlSt1Lx
d0DqLkjdC6kHIPUQpB6B1GOnoPWMT05D6hlS6jlIvUBavQSplyH1Wjy0QmrC
DUurkroNUndA6v27PfIQUpMeWFpTknok9VGPPEnugdQeyUglnvRIZlqPZKf3
SE5Gj+Rm9kgepBZAakGOQyukluQz9ynskbIiMCkGmRKilNwGpUprZTnEVpA6
q706XaquNB2l1AJqbY0PWAkgratTDuuV0nqltL5RX5oU1XrNjBqgOcO80j8A
aJ0TpfyRpThQ4u2SoopOAG2T8tqnUkb2zPdWSXpRYbQ7z/hwOpbmkhTnPukg
lnMVS82jetQ3YOpwCEuNmW+TGXzU4JB5dFrBD4TWA6KmY2mInOkuxka5HM6x
WzmDd5bOs3eWvrIt6Pjr6Sd7zT2mc10OZznd54LvVMgipk6L/7ZFFv/yhSwh
Yy4lYy4lYy5d0C1LKe3LnIypDC4nY66AwZWU9jWU9vUwuIGMuRkGt8HgThjc
DYP7KO0HjsHhCcvhcRg8eRYOz/vk7AWf5ZCMeekqWRMGr5Ex4+Fw43GRzTC4
FQa3UdLvweB9MuaD+z5JeuiTx0k+SX7kk9THcAiD6WEMZsFgFgxmZ8EhkZfT
I/lEQV6PFMJfUUGPFMNgCQyWwmAZDHpgsAL+KsiUFTDordBaW+nVWlsJMdVV
PqmusVGjAYQ1dYQiWKsI1ppEWUuirNMwiZLXGIUuWmrNjKgG/mpgs4qfKCJJ
Fla8lPzydsn1PJPSmhb4q5H0krJoZ2nR4S/KHr5wVp/MFaAWPQXulS48TX34
noyojaaZB/1h+IJpMRAEMPioa2g84p1jtU6CNHOjWe7zLnO29q0iPsfdYxxi
UiF8e24UY597vA7YJ7yWye/Kgu96ZdFfN8jin7fKYvLiEvLiEvLiUvLi0oU+
WUpeXAqPS8mLy5gJLScvLqeCr4LHNVTw9bSaG8mLm6ng22g1dzAL2gOP++Dx
AHnxMDnx6GmYhMeT53zkRZ/EXYLJyz65cNUnl8iLV+DxGjxuOCGyER43w+Ot
Oz65fdcnd+/55D48PngAk/D4GB6TH/skJdknT1J9kkakp/kkM8gjOTEHHnOy
4TIXLuGxAB4L4bEQHovgsQQeS0t0ZR4m4dEDjx54rKB6V3g1fFJR6ZPKKpCr
rNHZdxU4VoFjFThWK47VimNNIzW6pkm/avbNVPLgrwr2Kgkv/HnpPMsbuiSX
HJjjeSGZpa3ypKBO0ksr3uIv2m0hI22dmxwzWU8Pdgf01J7DX3D5KGCAsydW
3yrGn/5h6mLeQ12k20RqJpyc7SbB0Inut2bks94+3EE2nGdX8Z3EOPbaYfC1
ObRoG0tToGfZbQZ23rPg+5Wy8G+aZNEvnsriX7fLYqbjS0iKS0iKSxYDH0lx
KfOdpbSRS5nvLCMpriAprqIwryUpfgWEm0iKW0iK2wBwJ0lxN4V5HwAe0KQI
gMdIisfjfHIKAM9cBEIAPHfFJxevAWG8DwiBGQA3AOAmALwJgLcA8DYA3gXA
ewD4kKSYBICPFEIATEkhOT4BRABMT/dJRgYgZvokO9sHgD4A9AEgAYD5AFgA
gIUAWASAxQBYDIClAFgKgKUA6KnQhEZnx7CVA2BFNVFjIlK8tT7exEoArKwH
xAYnIKxaMaxSDKs0F1bprKbSPFjyOhyWEx5+sqyhW0obOqWkto0c+FRSChvk
QXalzJujxfG12cEXnhBnOMcWNBearDgZsFlRl+OVicCU8jkZ7SwM/WEqjwU3
nk+n0uzjijVU8scMuVS682+zrjknvFXUw9TBbDg3uIPLkPgqdDPyDPu89NWY
WeE0YCp6Dn9zDH//ReZ/VCUL/7ZZFv3quSz+Tacs/pT4okuWkACXkACXkACX
KHskwKUkwGUkwJU0hqtJgOtgbwNz7c2wt4WCvF35O2L52w97B0mAh2HvGOyd
IAGeoiCfIQHGwd45EuAF+FvDu7IO9tbD3kbYS7jtk5uwlwh7t2HvLuzdh70H
JMCHyh/sPYa9ZJJfSprlLw320rPgj8jKgUHYy4G93Hz4K/BJfqFPCoooh8WU
xRKi1CfFZT4p8RDltGwVUFMGejFSRh0uB73yGhsVtYplRZ1i6YU9b4MbkZri
+HZFkwWtotkEP2d6Qq/9pZQTHn67zDDI/5lyWE9vWNMh+VVPJbuySe5lV0WF
QHTb+bdKdLSzI0/XfcykYNJOWvTe1YB9cq8r7pOmVn/wB9gM1umvY3MwxOYM
J2OGsRkRAjOULM0SkXvMP8RmdIhNG3PtJtpXWredbBk2iYnV19l2p6FtHud/
XCULftYiiyjSiyjSi3//UhZ/2S2LmWYvIT8uIT8uoWlcQn5cQn5cBp8ryY+r
yY/rKNAbyI+bKNBb4XM7+XEnfO4hP+6nYTxIfjxMgT4GnyfIjyfJj2cuW0bP
w+dq3pk1NIvrTolcTfRJPHwmkB9v3nMYhc+78HkPPu/D50P4TCIewedj2Ewh
N6bC55Msy2gGfGbCZxZ8ZsNnDnzmwmcefObDZwF8FsJmkQZ8FsFnSQVBYS4h
L5YCaGm1QlmmmdFTq12hh8zoqdd6a5Jog36Pr03eI/R7TWRHT7Ny3qSVWmks
JYobNLqluK5L8muo1FXPJbOyWR4WVticCJUxLoaR7sP2mfbJoJlATwbsQqTB
MMqdqcT8D8M3Fg7fYBh8kcqe7Q2nH1WIdgmMDs5Z3k2IZgF9Sg9QBLH7wMHu
NQU6iJ35V84JYfcD+fJH1bLg71pl4T+CHXOVRZ93ySLK8mLmKotJi4tJi4tJ
i4s3gB1pcTnYrSItrmWesp60uIG+cDNpcSvIbQe5nSC3h7S4j7R4kLR4RLED
ueOkxVOkxTMgF0daXMH7sRrk1uptECB39ZaDHWnxBikxEeRug9wdkLsLcvfB
7QHxEOSSQO4xyCWDXEqWxS6NcpwOchkglwlyWSCXDXI5IJcLcrkglwdu+UQB
yBWU68zBziCKQK4I5IrJicXkwxKiVIOGsBTqyqCutF55KzXUlTRYrkoaNZuW
amHWL2dJMd8sanCivlsKarskD+Cyq15IurdFbueW2uwXo8hFTkcu+KGX+kTa
PJaetEuLr//c7RDnOc/HHeTMJrzo99Ti31vkjjvbqAf197UQm5MDQ7qnNCzZ
DU1omKVwXVIPRy3SnR6/jzdN1a9m2514Qd60v3htUrrZsDTPUPb/yhea3H7R
Kgt+0y4LKb6LKL6LSGyLKL6LSWyLSWyLmQ0vJrEtpfFbzuxjFYltDcV3HYRt
OOBQRuHdzsxjF4TtIbHtJ7EdhLDDJLajUHaCxHaKxHYGwpZD2EregtUU3Us3
fZYyCIsnsSXccyiDsFsQdhvC7kLXPeI+hD2EsCQIewRhjzMtZakQ9gTC0iAs
HcIyICwTwrIgLBvCskvgILfMF/Gh5AFYHnDlawBYgQaQFQJZIWAV1VjQigGs
CMCKNeqVGa210BMrRQYoBanQiQJ+IJ8fzK3pkmygyqhqk9SK1oiYsJVAqHJK
rFNoA289DjRN+xvn471fR8yxn1xkNp5N2qcsr/9CcdOv9PYcB7eYPxq3aAc3
BzUD2rS+z+KmEfOeHUUz3D3O05ZmnE+91L7g1Sxnj3P45GOeffzyWleSgpPf
SHmj7YQC+G9k/i+fyoLftssCqupCpr4LmXUsWk4w7V1EeltEVV1EeltKeltO
VV1Feluzx4EP8DZRVbeS3raT3nYC3h7A2096O0jXdwjwjgLe8Uu06bNnScS/
l3MJNH4wdwnmLsPcFZi7BnPXYS4B5m7A3E2Yu81M9w7M3YW5ezD3gHgIc0kw
9xjmkmEuBeZSYe4JzKXBXDq8ZWjAXCZZLYuMlq0BdDlktVxt9HK9mqjyYC4f
5vJNLS3QWlpQqy91+rv5AFXQYILfzW+gq+PLKP2KcdDfzQO3HBjNBrnM6k5J
q2yTx55mi1yUfWoAaLOd7bdjb5xhCR6Zm2O782l4mWw2031a8k/gFSyg4Xjp
dokBt3jy1+Z1luIV7RI1y0Uo+j1HnWaGfRT3lD5vfhcmk8hinUQ2/nqW+4A5
Womyj5r/tXz5q1aZ/7sOWfDZS1kwv1sWUjAXUjAXUjAXkcoWMY9YRCpbQipb
TsFcSSpbQ4+2jnnEV9C0iYK5lVS2nVS285Qlah+p7ACp7DDF8uglHSOL01lw
igOn8+B0EZwug9MVcLoKTvHgdB2cEsApEZxugdNtcLrzxCJ1nzT2AJySwCkJ
nB7RmyWDUwo4pYJTKiksDZzSwCkdnDKYN2SCUyY4ZYFTtuKUbXDKAadccMo1
OOXVaPXLJY3xleTWOmHQytUllFyFKa9B81geMOVoAFQ2P5XFf5FR3QVQnZJS
2S73S5osVDEuVGbPWIShyo6OjQ9svZnUCd+k3cBgM9Ys9+HwrK8vkG8hdcLN
WLOCCyah9KQLJkOm+Xp7M2+sS1jMe84ZzXAJ09r4ymxm0MPSr/Xfpklq/HWs
u/MmVpGyzzH+lXzx980g1SbzvwCphd2ygOq4kOq4kOq4kAS1kB5sEQlqCQlq
GQlqJW3/apBa6yC1keq4hQS1nQS1E5x2k6D2kqAOkKAOXXSS07+SU9d9cvqG
QxRt1wWIunTXIYq26xo0xUNTAjTdgKabzERvQdMdaLoLTfdIUPeh6QE0PYSm
JGh6TCRDU3IhA59a5CMjpwJTGjClAVM6MKUDUwYFMYNimElkaUBUFkRlV2uS
Uaogg/eTryVLE495RJGlT9OyFSkYoq/nS/0d8xOZRAY/nU48qeqCpk5J8rTJ
7aLGmLCH8AAV/LhKh6GIt+8snHQ2db12Nna9ijCpSpHS82QB7Yvex9X46D/B
lXkkMf5WJZyOmclcke7phxBcse5OmRnu0TWdVb6Kmo6UTiNNqgp2AW9sRBi4
7Brcn8sXn1iw5i/qlvnMJxdQ+RZQ+RYA1QIq30Ly1GLy1DLy1Aoq3yqgWgtU
68lTG8lTW8hT28hTO4FqN3lq77lgfvpTOcoc8jhUnSRPnYaqs1B1DqrOQ9VF
qLoEVVceOmRB1XWISiBukqcSoeoWVN3OYHzvZmlOuQ9UD6h6D4EqiTSVVKAU
PC7STJJMmkqBrNQyG08g6wlkPYGsNIhK9+rPplfyh2VUaTeVXm0BcSJSiYmS
zDpdPssAogwASq+1AKUpRPx8Kkgme7skqaJT7pU+N+9gjG0sgjRFBa/50KeV
DlJzHIYmLT8hhua6uwPnuOXO3MwW9Z7c9FkYQwxhWLlzApQGx50pIyDFBika
ngje1OZeWhITdrYdjmJdjj40Hbw9KDat7pkGfo5DlDN/DBEV4xJlNg5E/Av5
/JPn8uWXL+XLxV0yn4ZqPrlq/joHK8rfAnLVInLVUnLVcpqpVXTya0BqHc3U
BnLVZnLVVnLVDpDaFefkqP8oh2ngj8QzdYSoE+SqU1S+M1AVR+U7D1EXqHwX
IeoyRF2BqGvkqXilCqJuQNRNIpE8dYvKd5tcdYdcdQ+k7oPUfZB6QK56SOV7
SOVLIh6B1GOS1WOQSiZSwCoFrFLMim2qF26eVCrwT0AjrdoEvwKYGHlCypop
qbCTUu0EP/SI1PagokvueTolsfhZpG0ggrstzJoDgzZvrgTff5eleWGH+ILp
aaYtdpD15+6Wvf9BoE5Omw1aikJJKYRSlLNl2rkeIYRQtHvg0OyA0r+mPpgy
q3KvwH1aM244muUUO/2rv9HvvQnY3tzuXvgz/VK++LJTvoCeL2meviQhzadx
mk9CWkClW0BCWkRCWkxCWkpCWkErvlrpISF9RULaBDlbSUjb44LJ6H+T/aBz
kIR0mIR0DHSOg84J0DlNQjpLQooDn/MkpAugc4kydxl0roDONdCJp8xdB50b
JKSboJMIOrdA5w4Z6Q7o3CXugc898LkPPg9A5yEZ6SH4JJUqKo/KNOk8Bp9k
8Emu0EQCPCnmxRCUXOWCgk/J1QrPY379iO8nAc1Dsth94q7npdwq7dD3zNmk
G4Qn0j4DNFkIgIIPAm2DFGFK3Fz3gJzTeUOOWbr60N1nP9clJ8otZ1+GoaK5
Z/C9uccAY4pYjNt1R77nKHa0i06Msy/5HXQMOR/Yf0+wO9Ik+1pr12vDSozd
SKA5+Bvy2Rdt8vmSbvkiCAtpZj5pZj7Vaz6wzCfNLKIlWgIsy6leq0gza0gz
66lcG0876eXfym6ma3sv+wwrB0gzh0gzRyhcR+HkOJychJPTcHIGTs6RZs7D
ykXSzKUUy8oVOLkGJ/Fwcp00kwArN2AlEU4SSTO34OQ2cQdW7mhLdK9Ih/4+
qNwHlQcGlQdl+r0kUEkClaQKBSfJy9w/SavXw0qdhSkI94DoLnGbn7xZ2inX
CtuclfMgFbOc7dzOk7kYpWKGYuCsBpo9NWY5CQz+VDHQF50fBSbnfT0Gp96b
MQbHzVbKcX2yPWGalxnvTOTDx36GU3nCh10fVr+a6w67mWd9oF9pgdGX8dfR
tj0ONspUp88Xdrrj/iXj/iXj/iXlZf4OO+4LGPMlJIilh3V5kURBglgXHPN/
J9sZ852XaF4Y873khwPkh4OM+yHywxHG/Ril5ThjfpLScoYxP8uYx5EfzpMf
LjDmF8kPlxjzK4z5Vcb8GmMez5hfJxIY9wTG/SZjfpMxTyQ/3CrUQb5dpM9J
7jDwdxn4u5SYu5SXe8R9hvMeA3+/wg6xGWrrfpR+QTfk1SeCd3Toy20k8t/c
4M+4UtARaTNB0I1I53xgwHS8dpuf4SDWPhwLHiuMtivZk/bEzas/Uw70Od/k
h9M5MIVkfhgH5qDC9Jm3Fo1Bw8HbMBgWotybGGKD273HptyHy1FuO6t/r1f6
+PiVeYb3Z/bv7+ivgIy/duaGysFc+Xx5t3xOm/EFheILisQXeP+lMrDHMrAI
75cyFVqO96tOOOP/f8kWJtXbYGAH3u9SBvB+H+N/gBpxiPE/jPdH8P4YDJyA
gZMwcBoGzuJ9HON/jjiP9xdh4BIMXGb8rzD2V4lr1Ih4GLgOA9dhIAEGbsDA
DWrETWpEogYMJMLALcbvNuN/q8z5X49Vm/HFmlvl/IUZZr68qYPND8TzH13K
74x+z4BHOo+RnD1zZsCjpw94lH2mO2lTv2kf/vgBf2upRZO+eRka1xSgw2ya
BmdLgUkBoU1+M9yhNyNv+s457oDrEfRX7g4rZ/lFO84/ccdf58WvZ9rx16Gf
Y/rQTxc9l89W++RzZsSfkwI+Z/i/oMP8kuGfz/AvYPgXH9E30PYDX50j9TPu
m3F/2xXGn7HfxdjvYez3kfMPMPYHnbE/ytgfJecfZ9xPEqcY+9OM+1ncj2Ps
zzHu54kLjP1Fxv0S436ZuMLYX2HsrzL21xj7eMY+3vh/3ST+64x9QokJvpdQ
6ouWhDKdzuj4JoTFdeIaP3wZYM7lv5STmU8jot3DOiblv9Y3RINGKzjwzluo
3aRtCHg135rlfjR9RJTTTJr7aSMMER+4RET9ASJOv0PEeBgRkV9LRHR4Q+BO
amOdTnLMnlUKQaEJ4NVb/UxU8NXyYRj5httTGkbMDFit0J/jm+58xawB0199
sqxNfs+s5LONBK3C5/SUX1AyvoCX+YecFPH/yEpayVVxzHvP016CzEZSxWaQ
2QoyOygXu0BmD8jsBZn9IHMQXA4RR0DmGLgcp1ycAJmTIHMKZE6DzBlwidOg
ZJwDmQvgcgFcLoLLRXC5pAEylws0rROkjCuM/lXiCiRcJa6BzlXiGqnjaqn9
+kqJ/f3LxMVCpQVM83wRwTRhFgfGX3/oMmIe0pgMYb4KnTQ3FfkD5cFsw/wL
tzUI8RDp8rDgD/AQbRoE55TF0ISG2Yg5ETmdDHMgaJZdpbUrHGNTbz1fmuVi
oWlCewZd+ng1Zg9b/Ol7EJipv4yYYSTRqcWn617K76kQv6c6fEZ6+Hx/cJrw
v8tiOsJljPdK0sMaxnst6WE9472Rsd5CbGW8tzPeO2kPdjPee2kP9jHWBygN
hxjvw4z3Ecb7GON9nPE+QZxkvE9THk4z3mcY7zjSRBxjHseYn2PMzzPm5xnv
84zVhXxNBRcKqPMXtEO8WKQTgQuM+nkNHVENiIjjp0/zX57M7p4xfVxnOHte
nHEN3Yph3rUPdUjnuEMa88cMaaSOqNkiYbt9J9xRHZyYPqrmIeKE+7w62h1f
MxOY6YzviD2YqL3/1GxnBStglrG09x97ewL5p87KgzHZDKXu9nljl+KDE4Vg
n8jP/W5th3xKI6gDG2le/7XMni3yOQ3A/JM0BMwSl6L1CoZ61UVnqBniDXSB
m6gEWxjmbWi9nWHehda7qQR7GOq9DPMBuoADDPVBhvkwneBRhvkYah9L0+E7
ka5N+gmG+iRDfYqhPsVQn2aoz+SaQeNnTucpdKcZxDM6kGbY9TVaf0dO8XMn
+PkjGb5ZtvDxT/wTd3Cj3cGNnXa1zysz7w4Nsy5QvvqX7qrAB9OH2XzK5EI7
zGfCzR2w5kaFZ/LBiVhnLcAZymj3WtAoHcrZTjM3RZmfGn2loZf9j5pnKXY8
o5w0/pq/ZzBlf/ieQY0JK/DBOZ+x10r6L+UT8vMntPSf0s59xmh+yUguPEub
z0guo59bwUiuJkGvYyS/YiQ3MJKb6Oe2IO1WRnM70u5gJHch7R5Gcy8juQ9p
9z/WUTiQ4oO1Q4zmIcQ9hLiHEfdIuhkNOcqIHiGOMqpHGNWjxDHnf4/wvcPO
7x/gv9uV0jnbHb1I518aXrDmuSMa445olHut5Ct3RGPdEZ3pijvLHdFotza/
M6JG3OjwHm1wIsYxdHw4ZGho23FooTk0rGZUQ4M5TwdTpxKvtKq8MjM0k21j
bLYNTthm2kZdx+w/GPOCXcrv9trx+4Tx+4Tx+4zx+5LxW8j4LcHEZYzfSkxc
zfit1Q2ajN0GTNzI2G0mtjB+Wxm/bcQOxm8HNu5kDHcxhrsxcg9G7sHIvRqM
4z7GcS+xL42Muj9NJeNL8609qTpMPu0IdH3TGSszaTb1ZJ79xwUX4ZxCOWWe
EzpDMsOVbPb0IQnl0nckG3NEGzdJ1Z0xDU44RXHcTpbskISefke6Q6KjwS+n
Rs2Db500j9npsyrzam5wkXY8ZFW0nT6/NkXRGaEwq6LMCAV7SPNzWPCbAz75
DZPm31EWP6MsfsEIfYlhixihJRi2jBFagWGrMGwNI7QWw9YxQl+RLzcySpsY
oc33eXu3PNC+disDtYWB2urEtkf2f/V7m4h197rN4wk7FObvH/2eoZjhDsUs
dxTMUdB/5T5AfmsUjBiL7CicDVW0KB2CYDWznYopZ+O2pA1O2OIWZXvYcbsT
Jmx7fpTz+Q+MivOwT0/cm8aF4XlrZFQM8xKcvL6xz2fsPyzUs5jxiDUDYLdp
2dbVjKB5JPUPJ3zyW5T5lMH4jMH4gsGYT4+yiMFYzGAsSdA0tuyGLhMsZ1BW
MCAriRUMDt+VJTe6I6eXzLfebrNMMNfNTTPchtt2YTqXiHY6C+fdj3Lf/Xn/
K9/9mOAYaHMxbCLCyGG3wNmlJeYTod2Yke8Zkdl2qWnKJLKxqVi7Ie7VmF1d
0H+7scYOS7S7uvDh9GGJfI8mUW6yMD1mqBuJct/a2e6fHGu1e+V8b6ZbyKNs
cTRPhW1Jd95VcwXKv5bgIQCzJhflJnuznh9w1/OdHBMXVsjH9O0N5pgZ+l5G
2gWZcQfi4EdDv//d0mfUU9Huu2XabWX1VWh1zsyu/tT+E0NLM/pGRYe/UW4t
n+FmnRnuWxLrvk1OxgpWx2h3kjJ7mvr2vTJNz6vpk9sY9637N+4m9bnTWXTe
tXH7zkUsCnvX3kel6YFip2dmUzsnXfjMRkzzMcJz3cysPbehTeeuzlundfKV
/gtfhXmt/84/+7rG9n3IzXDfxlj3bZzhJvT3vY0xrsizXLmjnWUWe4bINt7O
MtGUDvJkwH5w05T8f+1d+7MsVXXu9HO653Ee90J5EYhCBYgKejGvSuUfyD+D
AhJF8rJM0JiolZQxxpiAUYlGEVExaBIhMaigFXyQEEAJaiQq5545Mz1zes4F
PFnfWmuvvbun56i/5Qdu1erTdx691/rWc6+9u8c9yoQT3O5mQJ0ZKqDv22SG
uZWSwLLJDDwsRTZDaQEQgpgQrLQMOhKKmOGBYclyHmk5ecRyHu3IAlMXPIXC
1yZsg7mtK2hjcR28PLA8vvIRNyUVt8xwS6RP0aAmItgYrdP9aC03oZUe13uG
FigxEzxsJySH37Tp2GJscEZyI3gjJF7NwA4V2KN6ZcCyRCzbtgJ7tPDAAgN2
fAFW5sqMK1Hkq4ncasChhc6NmJYySZWKa3Hkge2Uvh5idXjXqiok6xPYXA5f
aGD7CHm9oPvXDt1zLXS1V71g11ZM0x5M++BkYy2tNkbDeoX+ycojCXtBgVxL
lRxb9CwsIxSb7LQy/Aqr2kb22m44ydeKbyAVBg8eANZwhLwOxCn7OqDGhrl6
ka0Tb7TO14T4Jcdzb53I1s6j2TyVUptgAE6xREYO7ZxmII/YIsDGklqOECSP
OL9waGRwajlLzRyTIIVqJUs4BTboocmtqAonlp3+4JF4tADHNUApTDjgCiCF
pTEOeKuLepC6QaD5m54wJ9AkITRRB5fQwmZwTgcTWqBNEU6laybeM7lC/FtZ
M5Sc5LxQ5FHjSnM3zDTPUoh0WSUWg3t20XXicU8K8pXQTg+WQ+05yYKd2Hiq
qzXWunFOXEljBzZZqD3eQPRbRG8kukXPbyQG6V2OoPzkt4sN+WSTjb62rYjQ
RhM7mn1GSVsRnINSm2SxDgB/k5+oA0i3ii1klYA/FvN1Ros4eAS8j4DbUQfv
ySa8O6HywmPZvIzQ4Vwkkap1HeWRHqUkegPRW4j+lOg9RO8l+is9x2u3Er0O
cHOe5w0Al7bh5sxOxTgRwFWTv82Z/N6ybfI4HHI8jdsgs7EX1v7D/luOnU3S
AzKHUnRDGF85yyXvnw9zVGqF1BHwZYxjPrIphmiPXbGwOO9mxAp2GvaiQBe4
j9Y+/VVt+GODX0O6NGjGo9cQvVkB/hDRx4k+DYO+N0JUuYfoLqI7iN5NdLMU
WPz0opfYRsKNdn59G31n57VDn828Uyt4FWSmgrQnm7EyeCvYROrWI6kQ5iut
ElYRUgsHbLJ4NvZWwYAoISEgCVVQmQrCek0CEmtLAlRQauz0lB/xJp1sBf1E
bhTXeMP1pjTmrKh2Hatmbif6JNF9RA8SPUz0daJv6PlDRPcT3U30l6IefoDP
ZW31dPziRtHM7VbDLcMqI+3qxfXIWS+F1cC6Ma+ZSfzhOwcb5xWgkUxgj5A8
VT9BBoglA7hc2lcfaxmyWT+tjKEuddpM3jVudcBxSwNBkV6aBgaygg8N5BqA
7iX6CtGjRE8RPQ3/+CH7x9NE3yH6L1XEp/g3PEUBl29QwCJUwPvdHI4jURt4
XZxIDPiBBX5ueFYAPhY3WM2pbuHuGmG9rVifD6plD7MLF6EJJ208+c1TFrdZ
T4zdRPc4KVhc55ZmrncSfZXov4meIVoSrYieJXpOz5f63reJviho8Xb3XzC0
4h5zfV2AFhnCXM1VTTbrQS021IZALep52i/jl0hMX2Ea5/A71a7xKo0WNbco
jxILz7FgtQ7nrhlgrOCHcWBoBciWIcnThCEjydMDQudzRE8QTYFelFkH68eK
6DmiRxhAfuTHVcfufgFnbsvA3BTAvz3B32NfaxiKDOAIABKe0s9FFlTY0DUg
FFfzbuAdCoAuKXJsXOm6GIc7uJjUG7W0GDvhkxsxVwRvODNmPMdtADMxSmCX
KnafIfofIrq4g61hN8XbjawJr15miPWZ3E1txNjkPGqMWGJ1g8cpA05xGyc0
pui/6zgh7EjHypUMWPRylSkXyIV5oQbA0gfAK7V4rrvwscVW7Wl/admfa5Qt
4MXWw10ogPW81bqC2HmHFogfoPCKNcRCG1PEPqAhbW/Jc4yllLLnDjnlH6ah
le03IE4tgl4B9AYALpNJxUoO0lTxwEEsblXLfAxuyvWtVLWF1fXrmFU9iTnr
scDt4HOtGJpY/9VPX7UPKgCzMnFP9Qp25gB+1pp+ubSs6I1rDM6IfVbRXEav
FyQ/GCK5+GmQTNpIRrKJtRGKMgN2AGDzHmC5jBpZQTVSYC2duEzKBVVuk7cE
EFs/IOjAJPY5Nr0dC6WZYVnZHESz8Iqb3Aoj2ymHxOIn4/aGADcu9tlNMzfJ
V3x4GoucUOE4MIdleHJpkqww+5fVKm2S+CoTJSSX9yugsEpEHDctZygKi26Z
2eLE8MgsapX2tUpec6HAm9CWmlAjD4oARVf/BAA+5A0Hsf7QGY6hwcmyMbOJ
e8ApDZxCflqwkRTJxQalyKAhx7GdnRLJ/AjzzfNA7TwcoIWLwuRsgnEZHbue
U2brGwP7Wq4pEhd1CvCGgabvirF5JSAZ9EBycwBJGMeZDmODBOkPsz4+TJs1
8Q/n4jq5YIByN+Fyt9FJ4HYPJJz4RgYJ0BDuY4nyBEkioaRlQ6XBlFkn3jtb
qh3lWjr2nZDjIXlVCMlyHZI71qxkr20lDAnbBuc3/AAlcJHfmRRIxjoLq2EW
dbOtDC2kBnX+gWcycyCRKAF0zoN4juYkLwLFO8nLYAbL1uTgrGRRzAk9lKR+
ktBvDIQmU+W5qLcDJzvLzc7BkbURl5g2xKfrvHgEsCuU108atgREroabhLui
Eid82RKeo6gIz0bRSUaJpZbMigDXY5YKKvA2NigGdGyoxJJ4WtBkG6EBGgrN
35k94MAxYi9sQnEUJWRGBsXAikKGAgshDc8BsVzZuIVLXcLcldm4SrzwTuLh
iSW8Ok/RN9h8zktHRVI9G4OWMU7sRAoaFxlKKYxJ7LPH7t7sjkXcImJ/uC12
bJVdqmawmHozKM0RUpN9IE9X5oK4EbE5eUjl0pF9aMIm4sFO2KEGDHUMbx+5
JWKHm+bqicmecfErjrUS4sbaijvnuG2muRYo5IbCoaHw2wEKVCHMn/E+oX4R
+SZZ1gPJwCZZaRuNWNBo5VP4iMyvUAU4DfNsgSBJLVImISRrLpNLQnZhhjE4
DXm5/TEyrYu8qcjrNa8if8SlhLbI4RwcSXLBCZKTw4Ln4CptYuv3A+uAVJYg
M+GJ5XEtQS+jD4yVuLGTuwiVvXJO0lL2aavcx6bYTGryJR/q5e+IgH/fElD0
WZ9TAXFsnICgDOLlJ4rH+b/T+2T73tESMSwlMyuTWO7cYmJscvsiis/GPXKP
xemdkcdi0FwTrrAH1CGQGgKd4KZYfNTNfNtYJGra5xpWcQ4MsmDS657kVgCD
QQsD3+kSwSc26eVb/S2+WVXkYUgNBnaAgUHj1R+rS4eIhpnPGXsswY6w2DYs
EukCKBaCwzoWidjFM4xFFBsaOJCoi2njZxPeGDpAcKAfiRpXfqYfzm+1ID6S
Srkb/DmNDe1dD4DGc24itkxAxW7QLmqZwEaxf1fE/lgo9l4gdmxia12M8EYU
sTnEsii43kSqtC6eycJApSEf2e8Igc/N7eOeeZZHZhDKvhArik+EotItLqL8
hpPcoG0B+usXG6G4swsFRzy1gIZBYAuYQOxRW85SuxkqJ1c9Eec73Ue7srRX
mZRl2JJU1WeWwK1XaZFDJU9F4e5StkOlYe9HjocFqhG8+tg/9FYiPrcB1zD4
PcHg44qBekAHg8xCIlnHgXiBB6KySXQp2f5I837REx08CpWV6meslkk1mNUS
BljNiu4KJt4gtv10Ih6aiL/fFjF09MQEbSQDnEMK50KfhE0hbKXGvpx1jB37
36XKG2jrr244PzciMO/ZWM0Fip6WTZNaEdy0te0+rKbBddxuT1LJj3U1WZxi
0NoXgms2HHyFNUaQq4GkjWAGyN4sGN1lGB0KRud6MNpH5edLH8IIhP8dSFd+
I1oj62OxUic4y8RS2GY0Asj0yeU+FXbXMoovfQuNg3AB+trQ5LykLV3HIN4k
wn4iFLYdAmuJfr4moFKLjqkkgsWBLPtwG3gky84k3dhmxMxSLMpvMCtywTAR
6cryOjpUfOBsIIEDHtGUkhOdnAOdIKvsQ/Owqi3steoMy0VjzsAx7w9E2LtP
FLa0IMcOnm6SrpI015JJbOx4UF4HuUAZZMtaipyrU9QNP86wmVhWyNttHlu6
rP03JgKn07Avdtj5G+4G4X/DIOQvVfV/2BH/R0ua7Zr4e6br2td+yHT7JC+S
XurbQLPGAInN9Rka0tZMlk3Kdi2QABVWdw5IEtW0GgiiPWKHKFRmrozaTjeU
1A3fNBVInshCv6vtE5P3VpH3k4G6fwZ5Wfs8m81tZW2L26UJZLTm6bid42PI
GUHaG4huIoFvjmDbt0Tw6dcT3QT5+bXruO3faIpU48jMJnKbMOrnOJItGl6/
JlN3KOC+Nq70JfGdlbJ3KYfDtwgKn7Ka31BQDPaIZ4KgMMnZqzOZx/O+2kY2
h4uGJ5brc7VImPugvJHoTUR/TPRnJPa7ScD3EP0F0buI3kl0K4Agei2ETw0z
VC8idx6kSRe3OSjsqh00gR0M2nZQyMzONTQyQ+CtgsCnXYenjQAAgCGwHWQG
QmrZfdvMvE/0m4neQfQ+ojuIPnY8qD5B4t1NhL93En2E6P0KBSC40Ys+tIg3
0CmiZoBdcZqmdpWEE3MoTu3EzCGmK24XQWRX679HuhhzUTUnL5HXG3/SI3Qn
b40Ngy3L8qywaJtkvp7oXUQfJrqH6PNEXyAcvkT0IMn7ZaIHiO4n+izRXUS3
E71NIsFqLq5fGhalYcHVwSlBoKkFM2/0vyEtnA0IqOV/xhBg4U3hksdjQ2B0
IgIT213ut5qMO1gUav4fVQweIvom0WOEw7fI4wfVk/SZsnqc6D+IHib6N6J7
1D5uiRIrCArLGSOrnDIzjMzA8Ibx6xIBlhLyu2C8NQCD2zniBN4RsAzk8OhM
d4YWFfyS71YPHhOrabxt3EZ0H9HXiJ4k+j7RHiFxQDTjv2V1juiHRN8lepTo
QcXk7YlVkyy6q581XA5tpMSAKcIuowIzCeoBt1JypSSNDWD9kYD1D52YqWAV
Qd6oQ4jYeIYnQrRl6+OJMjkXnGAzDxN9l2ifCFXEc4QP6HmiHxM9S5hg0XJO
9L9Ej6n9/Hms+xQUiU5aGfuI1U6k2+JrrkWd2FxxbJHlMrlXYwNObxOc7u3F
qSnMnobSPnFTiMTQ2bFdFppVHc+SCFIC4XGiqYCBO4kGFUbCwm1ZHRI9DT/i
K4y0NJpjtWHenJEy0jVevTmMZUcJicQ7Mrdxpr3PxYJli/5E5Ppsp3JACBlY
riilL7Y4kDUh7vu6KBFuSHNLIVwXzSResGRPqZqP1yV7nmhK9HXvAae9X7XT
4LYECbfUErcF3YJ4vHn/VEdQUmT0dhH0cz2CsvaynmjAlX9hM5yNcpe6/ReJ
YzWzGTDeFlPHswtI8oIlT1Tyua+EXHyzrznj2Aocv5HFJeQDQYYcfKVF8MS8
fxey8yOhLlUUFAEWXFH4xzUUGkEBT4lqUpsLd2TX3OjWAcdBjdgq7FJdGxyU
M6d0siYn+xP24diky2zatK2Nco38E6mZG9THTtG/0iPYO0Swf+r6J2X/OSsX
DT2X/zILYYVtWAlvF9AdA2Rv6wLGNhliAQ9FwArl1gC9TRfvdEpIn9uy1zhk
s/Nuqw7Dicz4RAHfKQL+8wkCVj0mnFtLO+tJ9bEuXOk+xh0nb9e2M1VeaJpp
W1Tujk+smuFYW5moqdzm4QT8ZROwMQeVn6OLPt81zXNgc86R6ByFVxFRk5EX
MbNtmZWJ49R3GGSlnXZWSiXouKltLIVqozO0HZxlNuli1n+ph3X58Z7ovpD1
cwHrsbGegvNczM9tZyxt0jWU3SnrAWZHlhUdh6kkgU4rXlbieUKshcGOs7La
lwOZLIGeJI78uEF0f0scNjP8z5WTUhTsY3LCc6p6KstDabB3wN8FzR3DdcF2
LSu6iD6XurvSM03YOxL0D2ve89Fkxv+rJWEv1vxFhfiXljk1HOk2CjGAELH1
/b0QF1rgO22bTcMuR6vmGQRx3OlkYklrR/L0Yc1bPZvEAve1mySRR2VH/6qe
P/OSgGKnl30vTIFjBWFSy9yd3fyZ5TJWyCkTyxlTqCAfnS8z7t0vToabcnjC
dlYmKetyyDNQoy+oRmZ7XiOx14sTRDRSmVmVlooKYz011p0ehPPotJmV5hTv
B04jalv00kUnci1PT4wewJ+0wyaQL6Tqa7FZ2M6AsbFZ6J1UuiEy9APi5sJQ
iPBmtS0DfNsYHlnzh03oVTL9X2ddHvwVfdFYTzVVhAxXYDhvM4wHYbsmZqNb
w1xqVIRfLOGeIw1bg0TKWibtXFDzj5BfI+WIMhcU1Mrcl8wazKIxZ2ubNMdR
x3VsXHuYR7YbZyStOWfX6q5BxYLQfqhBPjc3LKWVRmdXtxlujGF5CkT05R6G
c2Y4dTYhgQXO5wJjp2leGua8k2YY3G7nF5tbrpnazXgjSayHmmK9CCOJH3T2
ckF/XYT3iggP4k8MCQDyXmPRPe+JJblUTQ74oXXMKrC+a9G9NEvflmrYmRAj
PQabuUzlHcO/CjbLHjblXvjooRPZjMFlJVHbTbm4gz20zUn+9090atpam2Aj
n0iuOVwL2PilXUzctBszsNQztkBxhXig8F8Hpi23BUdfMf4H4ndztob+noNf
YvWPqegUa8PQyHGQ+7GQUg5r2WqCn/wVv2M2CzDH04AJzuRWl+irQQCGFc84
is1R/M/3ZQYwabPk28KZeVtht4NNFL4wunLtfgleKoybMXg4jbOdHqXfJsz9
e+BexBgzx/FgCOZiYy5qb9Uc2Q05iWw8d241sNszt3HGJQQzdwpnvEQkQe2Q
2+2HWu8xw9f26FYxfNglY88miAPsSDmdSqdxy3YPxGaeQ31emrrIjvq+avG0
mN1S9cmzhIkx9EHh4GsK1AG0qEDFOHJBMFZj4yncVJfpDC29rcx58shYuhiM
nBG1LdVXYxv+rOHh1fYB4eYbPWpjbsJsuQ/Pm7P9z6fSUEJsHOG4Zf47BjeV
6Q4q4l9GZ4o8VB3d7UhcWWoaik2LZ3u0qBh+s4frBMdRD5tDDeT1gQ/kY6us
JuC6DPbJEtO7gWMshbBUrQ47xlkSSCKLeBhoiaS+jrVs3IweMc13uMZx32M9
EDucYwMLh2/ifMsY3rKNvRy0B2B4RwqVpcbrUzjjtPJKxw2xqBzpdrnoP/En
E8ObIRjPkS7WB41lgSGIzUgNSw0fMc4GGG+IkXcYKwkQDjmG5ZoOI0S6xyt6
1MFyrmOCjEphfGnp4/iKknChL2JY0iD6wviIEGE05qbGa2m8pmCVO21X93Ao
226ixzRoBByCMvCX/Sz86ZzWvRZLQbycS0jJceY9YUc8eVG7aZ6zM142egWz
m4bsgmR3TPRED6YF2OXsm4JdnWY4dtkPaBxNFVvgpTADY644Bu8KfotacilX
sy+TsxplTM3szgPrVxC/JVn1wBk9m/xsX/lilkqwlIGlidujEKClN9gsZtLT
2gFfiezYpLNLwFcFvliRDAx7oewbiJ7sIsKONoPuZlPxtoENPxbDd0ONccZW
dWkAxgKlPTuaB6NGO3qBOtQN3wFDtmxET4XctHGYgYf5VDoOzM1IwUAAq2dM
FDUdS2w/ZMbqlWzfOVga4WwrsJ9aKGLmzuClchObsgAffSdg82CfSdjMwGYB
Nqn2OJBoEctEr0acqqGfxcztSmBbWqimctNUaRwyD9vgJgNfu5v4kiXi6Hs9
fLE35m2+RsbNLrjpRAb2tyH4KgXDJdqWi1o4ZL4y8HA5uEl7uLlHuPk+/qRg
QiPWjIfv54ETzDYGZcfSFLIQirZx5FTDZwUG/XmBZX14WfuJnlYwpvsejBhH
jeuzqXjXANxU4CYz/cAyBA38jXZxzJUvvOH4eqmoq0ZtWLN51430oqMf9Ayf
4Lhx5IlYRs2HeXMBRkrEmxfIZYta0B6JFdPZmU0QKA8/2sQD4TAVY/WMlGAk
x/AVGMmNkRdj+IlJWoiH17WYI+sixuj3yaB7m3AvMGjEnsyFiJIfvMCQKQav
cJZg8F1BoUYJssCEd4FkXnNkqZsLccZ+O5TXiA3pkEX7mpwCNgT9A4Q1jm2z
AxmcnTMVeeeI8cxGzaPBHmsNJJVJrnC7fHg5jilekmZQdNCDgR+5wsgFRi4w
3gTj5RilxCgjnCUyshsvx7UvFvTp7AEZZS6pY+q0igEY4wzHxIbKRcg5InaN
IsmhuY2zGGec73ck2swV4RHOpJ8RLW0ovnbavnaJa4/s2uoktVB02r0WILaF
4y9igAdlgMYGoAOYdxIMMUomnjJHWV8jWDDfcziJO+uohP3jKryEtBq4ho53
PjAPGs9RyvjR6JRTZkI0i5rBPOaY68yRap2hDDDujqA5n4v1sYtc2TOuzFKj
5wLL0DHxv6m45NCGugADlLgs20OFM7YwDgFX9AwgU7iI/5PZFXOIkuGyCS6b
yGVnM9EZX5Z1NsHZy3HZR4LrJHaxIa6T4jojfHsgGhfcoei5ECVgr4uZEFwe
1juHg9LZo8EAOZ9nx/vTlhqOpwcokA8OxEvHGLIwyEkc4M6Qz+ClM+A+R61N
Z48Hly/FqvYdyLguX7vquXaCKw5xRRasxNmLcMUYZ98OLjsSbPaB8RSGecCF
CBvMjClilNhKUpxt4xI5LjvB2TYum+LsqeCy28YtHeCxU/Ao+oOuDmZydhZf
pDfmzfeCb1+g39YvqhHTd0DRBEdmhSWs8O0L7Do/CK5zkVro/oGHK8dxB5dI
RC764kvxxf3giy8xBlLhfMqJFBxMhWh+OcUl6KUz+PYi+PZV9m06oCjw36ZP
gujbdDwffOfXHKvBEDmf4d8g+CT/+80XXnjhhRdeeOGFF1544YX/Vy9EP/d/
scJzBA==\
\>"]],

Cell["In 1967, Simon Kochen & Ernst Specker ", "Text",
 CellChangeTimes->{{3.478394785859787*^9, 3.478394791474957*^9}, {
  3.478394860246646*^9, 3.478394880462471*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Kocken-Specker 1\>\"", ",", 
   "\"\<http://en.wikipedia.org/wiki/Kochen-Specker_theorem\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.478395092399417*^9, 3.478395160891095*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"\<\"Kocken-Specker 1\"\>", True->
    StyleBox["\<\"Kocken-Specker 1\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    BaselinePosition->Baseline,
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://en.wikipedia.org/wiki/Kochen-Specker_theorem"], None},
   ButtonNote->"http://en.wikipedia.org/wiki/Kochen-Specker_theorem"],
  Annotation[#, "http://en.wikipedia.org/wiki/Kochen-Specker_theorem", 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.478395169202523*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Kochen-Specker 2\>\"", ",", 
   "\"\<http://plato.stanford.edu/entries/kochen-specker/\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.478274289434319*^9, 3.4782743233210163`*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"\<\"Kochen-Specker 2\"\>", True->
    StyleBox["\<\"Kochen-Specker 2\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    BaselinePosition->Baseline,
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://plato.stanford.edu/entries/kochen-specker/"], None},
   ButtonNote->"http://plato.stanford.edu/entries/kochen-specker/"],
  Annotation[#, "http://plato.stanford.edu/entries/kochen-specker/", 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.478274327136674*^9}]
}, Open  ]],

Cell["\<\
constructed a finite system of orthogonal tetrads for which compliance with \
the 110 principle could be shown to pose an insoluable combinatorial problem. \
Their system was constructed from a set of 117 lines (rays) derived (how God \
only knows) from the following famous diagram:\
\>", "Text",
 CellChangeTimes->{{3.4783952084510803`*^9, 3.47839538367002*^9}, {
  3.478395518391794*^9, 3.478395521676629*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
LSTJ9FSjs5Kuna5hNYmSixWTnRl8NYKr3yx3sILdSTCOY0/nFDS7YmxNyoDW
ZyuvxaRsM7IPeapDKtCZvTlEPcRGxemsdicrnBp3uHSPRZPGeMX6zIMs9ZAe
/h7G1oQ5VqZD8HplUCVqdu/wTuDbD8/UYzmQ2IxQ/F6sUD3EZEZw7pZljGGz
l8DXwJav/8gyaZkoMXDMqzNV48tcKoGqA9V24pnznR8DmAJvooHHYREbHsq7
09geBx5i0wsYyEV1RX6OkbxT2TowpCzlwVWfrURq88hF9SvP2cpyE8NCJqo2
7vJV2Xq9msRWhmKKYC02DwI7ejbUcKw6RHVkvlqfGW7VB8Y4UWLINFlHaaUA
DSMtrUeADLZvxmlOmQqGWzNvf5AZ0cKh1BJVK/1lDDSJyqQKWNqojoxL9Zkn
xruMar/vobMsVYtWMdUeUFdUGny7ktPR0wYXgZ4UY/tzYLSwXDDlGksvFrxy
ke7NFfAVhAVk5NawC2P2a+jsMfUErchqA6jZyf70drJ3p3gY1d0xGMKtyXxS
qJ493kUP8C5NetI3ELa0twLKRcug/Co/YBo4qcU5IdHfVLIlwEGXK7GeDI9D
0941bq7sMrIFPuYobgGqY7l1xh/YKthYPqpWLq3n5QecnSEzvGE+iXB9rINT
D6j6Ctr7Nnq18zRx0kDwgU1Vla6Jfm58loHbjHHrD3g7mwdYykfgK/hg5ZVx
QEZyOz+LWH3K8t5GtWVkNZd6dvJp5yFWrPrDjm2qZs+TkNGaxp3cvHBFY2iH
A/J51acWB/UgLkKLLntwVOZjz+WTcPX543KL86rKbh13uWKtlwaRLRmJhgS8
QxWbEU1uDSNML+YIOHe6VzsKBGxW5vrbydKmWqz4XNwvmiodLo6VLmHBW6Xr
r/JchcrJgLIx8KB1juFtz3s4oJpiQTRrI819VYvhODMwKteoLVgRrBqCRfVz
+UGNDOJLG4tewgJfqOrI5Kldfk0b3p+yAwMxcbpRcapiqphKD6cOn8goemTA
IUUrfdUgVnddmubIUFZkkrOMnGiCr9XlkbUqPmiVKhRJmGzm4W3gCqhSrXY9
luHwaE28SE8G7GTY9FKflisXIW6APyDmsk/8A1Mu0DPWnII2UNcDqRnOjCUP
ZpR4trPpTYoW3vXw/eKYsba5WxKnPnpW1A/lf6+/M0Lycdkn/oE5dKtJ1Jpb
5843fLgncdgYtKnt5TaW4aSA4bIzWE/SxeESfyuwAqpfLyhuVoQmmfYmE3/R
PGXZEvLDbZx1oIuGND8ZwZg8fcudlGIM3wo4iR5fcDJmjCfOKL9axKrFqlvK
r2ojMeS9NUk8wHVTZ7yqtvzcPItwM5OQ/dYEH3A4ww0Dzhglvs34M+rn6cql
Pq0W1VCqL0Oe7M+ECqtu+ID4llCjjT2vHmJk/FFU7yV/BuyPtg9D5nBHsWXC
qk/Llas1LI8LSWnAxn4SzRO8W90FfIGZ98gwB2/DePPuHPD+tLLhmCQCYWV8
kF36Ynq3587mIp94gE/ttg/IcmE6Sn0EOoGJCSL3YHh3zWjXIwLOGFLcY+Fe
YtpbPuJTY+ZqzEQAVQH5ZuBbhY/fc6AzOmF4zBkde0TATU6Hab8mW9WSjwxS
dI5AokRVSXwEzOnHznTIRvaPmSTHxhwbtlOOvFCDDNxO4hLvHWlgLQbaYMYW
JkUeHjNJnhs2rGB4OsCwJACaUnMXwhU4Fy+Zrs2sjfyzMY8gOTVsIHJM3FLT
enAVbwdgQx7BJd41m2BDSiciy7gS04f/07icygbWe04w7EtGnpECxwR1K1mB
FTWCtCHPdxSsgOU6trn+vgQrFyYOj+HbX4CqE6wWSmCUY8jYTCryvIM7hfBB
PMcGPDHsssjl3E1K91VIsWpeJ9T7ST+HziAg+IyYv6xsR/B8wp6lmcxVNsHA
krVyHbTHEIk78cL2s4pxCs8n7EEvTfVSMSnX5yGVrfmZiePlEHNkIp8yhqdQ
Pehl8USeEXZ4ZLUC/deGxD+oakYWNlb/qUd20LAk1bPC3qPVGIeqhjGFzgv1
HeFSNm/NU9nmxZwU9iCq9yE/SDHJ52n+OO2E/LFPKhtv7Iocw1m/mw6Si4Oo
LojcH5wPov6kSoThUrbbU/O8sJ0Y9rjL1c5t5r0JBLwSAC5l4+03f5lakX88
7InKtm2nBf56k7I2Ct47G+ky+016llYk2/vMH6Q9wVOjXkfgDoZPbfaZnjUj
Z2nFWWxnRw4HT1nbAbFfl+DsZp/pWb9rztKKs9g+kbcKnrK2A/hfo9LM8s2f
ogvCToo8tbxnlSIcPGVtE1x/0TQozXi5G8j2rMhJ+Al7XCme4Hz8vLBthec4
Ku0ita56NJvqpLBnCcW8yMcRvrd5n6asbYjqUMAVTjpaQYZjqv6kUEwNOzvy
Do2XsrYn1J+WLq9DL2x3Ktv8sFMjLwjejJ8Xtm2hXtsYL5d9D44buqk1OVHZ
Dg1+t8qSsrY5ygMKKNtEZseqxImcZ4S93xaf/uAgfsra/qjEjbG/z7+wpbKV
YY/jvCA4iJ+ydgp4ZXumYMHhprLJ4JPCHsf5Cb4+fv4OPQvXf8CY3flTdHnk
ecE//New4fFT1o4Dr2z3kvM9dBxOpJ3KhuOXKVLWTgQjbh/4KTo1eNJeH3zZ
SzZl7VxcBbDBAhqHBp8UeWrwQ2nfC5Utf4d+A5bErTnfQ5Xt3F9eh9JeE/+2
/ylhdt7EPFQSt0zZTgyeymYFPyL+BQGM+1MnXsSyczxaH85lPinyvbGyuXRs
bOrEblhwlHtOwevB72OVbdv45HmpNlf+8e1zOHd+75P/+WBq/HOZx+K7foA0
lS3F7UuYdJqny+a84FPjH13228n/Me5Rtjuvbd/FjAM9esRS2d6Kf3tk6rEk
f4qmcP0ghp/7Jv2/YfCp8X9E2SpZS2VLAIw9+qPna4fh3TP4mvg4RWXQ+VM0
8QsYpRin3xyOFoejyd+tw5VPU9kSDIaIxtHDtckPrj2DL4iPU1Q/QvnDSmVL
9I/20cOVytaM/0qKS6B8FAiY+EH0dMIHlOF0/vOC328rG3DxBkz8JsLNcPpk
pbLtmcKrXdYFL5EItMTpsrAg/uwUHziCO/QvBerP1VS2hApvY3xgrFLZmBRT
49/RfwP13vQSvwyXuJ0uCwviz06xRtkWV4nJWNnkVS3BgOyTD8zU6cq2Jv7i
axupbKpvIoHR7JYPyM7628iM4Kdv4UlRKhtjLx0TCQa4Zz4wUN+QhQ9socrC
K1vKWiIG0DkfGKhUNj7FykKRf2RLWUv0QO2fz2jCN3YxNf69/E9tvLLNppT4
NmQXfWOaFv/IOjT+4iwpa4mVqHoplW2fLN/YxZNFvkNVLCCT+BGUHfWBH3Fr
UizI8o3f1GWilLLEJICOkpe3Sa34mWlNZeNTpIglZgNcz5oi1q9vn5nWBVmW
1WpeltS0xDJgZWPcr47/xVEqmyv+0RtJWUusRClNcoUUt9LR1boLWv10QVic
YlKW1LTEYkg5Kr+S3SjdA46TkMr2bhZZ//4/YiQSTajdJe9vzSBW9wayj0Uq
WyDLkESgB8qfCalvieGweq+6g5GhrPg4O8c0jmWD85m99J9L870m34M96RIJ
EgFlu+H/MiSge6OQyrYyEX9XL83y8pZYg6rrYj9IpUFzZQb2V4OtUvQk4l9V
lWUqW+IVkK9gb5BUtg1TxBK5rt/yXpfKlngFgfsYEySVLZBiWdFct68eVswf
LhKJSQD95pqCgFcnUtkmJRouRKlpifWQL9bAe7a03GdCB+ZakGKT7cxgkhe2
xHoAEXN1Yyrb61nIl5FlkL8ZE5+E7GpXn6eyvZVF3rHxlVt9haWmJb6NqskD
P0g314Ftc3mzqGoGbMqn1fmmpiV+BM2RaXrNxs8qm6VUTXfratfDOZE4Ed4R
WDkpv6Zs4K0RKHtqWiKhXhKA8QJKKxMtywUqfAkwXoFEicSvQQ5XE7P5TI2/
Phd/Jeusc8paIhHGVJVbfOt4UdmaOw1c2NzMEomEwAyJ+6SyqYmaqV2lWFy3
ROIXMFDicITmz2Qvh7eUjcy74UYSid9Ep8oBr/IR+H3nErpXlI2vDGmZspZI
LMPASxTWsR4C65XNK/hN49gbJJFIdIK/Qd3arzZGvqx02FKmm4dS2QK+QJlT
1hKJ19GUuOpuQ/4W42VTyp2HfhxX9P897eGsviBS1hKJrWDJEalRajTSEnyd
h8CmgFcsWiKRWAn1NuKN4E0XcOxBWNbUxdS0ROIgrFG2u++vXs3IJJg4atix
hBOJxBrErjeBLDHHm5Mvl7tqcKegJRLfgneWewSqaRC+d/EcyoCpZonE0Shn
2XpKTnePsk2VL1ecFLRE4gNgBITXhHDqgLs3V/UhkUh8G+XUB8QtcLlafy9K
ZUskfg2qsknxASvAS+Z65bdepWxeKU4kEsdBFajqg2rsuuC9qyRW9lS2ROKr
CGsUg/ttTXs4u9YTicTRABewgBwBfXsRKo1NuCUSiUkYommH4nd2mkgkfmrY
f2qzicTPYrffkjNw/f3H3HfJJBKJxBB8W7cTiUQikUgkEolEIpFIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRGJz/B8E
4nUY
    "], {{0, 390}, {414, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{414, 390},
  PlotRange->{{0, 414}, {0, 390}}]], "Input"],

Cell["\<\
In 1991, Asher Peres produced a simplification of the Kochen-Specker argument \
that made use of only 33 rays:\
\>", "Text",
 CellChangeTimes->{{3.478395424335556*^9, 3.478395499032728*^9}, 
   3.478395549639124*^9}],

Cell[BoxData[
 Graphics3DBox[{
   SphereBox[{0, 0, 0}, 1], {
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, 1}, {1.4142135623730951`, 1, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 1}, {1.4142135623730951`, 0, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, 1}, {1.4142135623730951`, -1, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, 0}, {1.4142135623730951`, 1, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 0}, {1.4142135623730951`, 0, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, 0}, {1.4142135623730951`, -1, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, -1}, {1.4142135623730951`, 1, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, -1}, {1.4142135623730951`, 0, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, -1}, {1.4142135623730951`, -1, -1}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 2^Rational[1, 2], 0}, {
       1.4142135623730951`, 1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -2^Rational[1, 2], 0}, {
       1.4142135623730951`, -1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 2^Rational[1, 2]}, {
       1.4142135623730951`, 0, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, -2^Rational[1, 2]}, {
       1.4142135623730951`, 0, -1.4142135623730951`}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxd1WlQ00cYB+Aol6KIpbSCQQsogVGi6JQOmJT1IAIODAQwgCJYLCBqFYJ3
UUQ5wmG55BSC5RYaEW1obYGNisA0AkYQRSRcgSBJJAnJnxG01g/trtMP7+zM
82Fn593d3+t7IswqnEQiLf5YjI+lA4gb3Ih4Wte/a5ELhyW+8ohqgD3veq9w
RxNo8q7YKRM2YT/JfVHIY4F21/Y88i4edifqmtyqZ0BkQXbYHByPXDvGFFtq
m8HzxTsKS0Eucs2HfdUcqwtgZOiwZZt/B/LZnnzTbnYNmBiqzVjv4Y5c7cDW
P6PfBaZl6xKKXaqRK8MmOxzcP4AZR6+1bLUucrnnL5dFzbVAVetZ2+PRj1wa
FVmYnN4GZg/Qx7uF75GPxZFYc8wTQFNzaB9F9B3ygVoy+/10KtDe1cmxdk9G
3udI2+w4WgSIFeH7WXelyLuCKy6F8qoA4TfV359rhvzBEdtu7u0UQFzOjuu0
T0fOK7yUdfXUAiCud2wwNOr+z2H5XsOA+UYmILgPlxOuPsgF6QluNvsVgOCE
XjR71I5cWBkiHcqkACK4YaOx43Hkvcy193Qf7QME2VasKU1CPuDAnw42ywXa
PwX6PWUpyMWz4REDQVuAdlekyj5yAblkunVFszIXaFa2jEjoAPnr+s+rYpVM
oC7nVxnVMZC/CdtmEPHOBSjbFMlv0xTIVZS7h+KTlECR2GanuvklcvXb3x6T
OXIwVa1edqX8FHLN8amoLSYsMB79IFPPYAty7TnDwQhdM/AqbeZKCN8U+2Tj
rS9Ok0A/dGeWhXKQE7SgHe4eEvBkoK5+wk6LPTbujbR3NWi/+v2PY5vI2PM8
BtxOR4Gmcn37CtUi7DdKJNaDg+BgStCFundS7PmegT0WqyC/2HjJ7DUhdnaD
VVyZKWwXhFET8+axO3ZHyP5ogiKvlcqfN1l/cv5o5bS9DPY/pO4s0mvEnlAS
WWIeAl9Zz9seOxqK+xPq7fyZmw8cbxSt5jBccT+lFs4e/lvh1LB4+LYtHfef
nixOm7gDFcyWPtbFDHxfjHmRV1oBVIpu0WR2d/D9ik0CfGMToTp7eSJjygH5
hN3fMfLDl6GGFD7JS3+KfDhiqalVCwlqnSRWZYLHyF+uLjAQtJyA2rpztD1p
Nsj7+L+OGUR7QkJfdYCyqB55V4aLAVOtBwlfRVmAohz5/XS6k62uDySSgpKu
7t+N/KaRj8DcJhISpZTstiVc9L8qN/ptN39aBAluyHv6WT5yATlm+WunCkik
Vn5L2TiGXGhRwI/LWQqJUDeFzXNH5L1nPPM75RJImBvLTpU443zY4+tKBzNQ
e09iJB/C+4zKl3V2fdUNNR06a6hH0fsHUr+/WGfDz8PZQ/dpL7PCcF453zs2
bqoDVQ0jW+9wce4pqX47V37DgDOVex+bHFmP83Cdf+sPilYoWxHz7MV5F5yf
vGqiwi8LTrJed/k/qcB5KzlrOCdgwdGD2mHLp4U4nwdPw2r5Yfg8irt9wyqU
P4CgBnqzfxJB0dxJxtzXetijUjNfFVNgpzR6d7IkEHtO38LMcTX8nai5tg1u
//98af04XxIv1KT8A94liJM=
      "]]}}, {
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], 1}, {-1, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], 0}, {-1, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], -1}, {-1, -1.4142135623730951`, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 1}, {0, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 0}, {0, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], -1}, {0, -1.4142135623730951`, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], 1}, {1, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], 0}, {1, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], -1}, {1, -1.4142135623730951`, -1}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, -1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], -2^Rational[1, 2]}, {
       0, -1.4142135623730951`, -1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{-2^Rational[1, 2], -2^Rational[1, 2], 
        0}, {-1.4142135623730951`, -1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -2^Rational[1, 2], 0}, {
       1.4142135623730951`, -1.4142135623730951`, 0}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxd1WlQ00cUAHCUS5GrllYwaAElMEIUnNIBSVlFIuDgaADDKVgol1rkUEQL
osh9FBBRVAwt4RKLCDS2tsJG5ZoCwQiiiIQrECAJJCH5M6LUMtNxd6Yf3uzs
b/bDe2/e7nqeDjENU1FRWbsatNVQBcTPzPAUx5vwv7XXKYvBv9JO0QREye3+
7n0PPzl4eJjlLOp+CIgzzNel9QzkHS4dJaT99YCwp2wprnqJnGdMstkVmAKU
E3S+ifIx8ldr95XeAcVA8dG/Oss0GfnYSKRJm3cnWOy7bsCNq0E+NVKbt93d
Dcht4jTOafQinxNtu3zLqRpIQ6Y7bdw+Il+wO7Q1Tq4GxB6/pvIe1yKX1XrU
9rkPAmFURGlGbhvyxWPUSW73CphIUmEs0U8jV9SE+pN534GhWlLcylw2cmWz
6lUztwwwYOe4y24c9Q0QumEBjGYh6A1kXQqur8LuNTM4WGwInp6w4DIfZGJP
LUrqss4F9aWXCvPPvsd+u3OHlg4XVhzV8llupGNnPtMmXI5ATu5lV/MACfas
4IuG7R2wuzJIOFJAxh7YYKVnFw376VsfqbX7YydZ8BV30uGQDXsu0LAY1/UX
R6OvPBPyF8PCh/xsse+PkFlHvIeCuVbdx1J8XqHfMiagAjh77/OqeCnOU17B
rtKpo8H5kD2a4R+ckEvbJBnvciRQRm4OTUmXIpektVnK7n4J5e9+7yFliZHP
VMs3XKk4CxXRM1G2G/G8TcY8LVDXtIXK81rD4WqGyN/mLFwJYhtA5XTj/S8S
VJAPQjd6eXAWJBz99rm5C5A/H6q7N2WphER80rywfzOe5/zvf5zYSYJEifuQ
a0IUnv8KDWuWbM3qvkxgNjyM/HimX3LdByEkrnv49hlv+uSQfUtv3eK1bkjE
NZgmlRsg7+CEUNJKliFhxw0X/YnuF+Qd0pf+stNsNf8Y6Zy1CPngM4rzTfVG
qLxcFlFmFIT8rdmyxamTwVARfNjhM9cjyCcbeZuzaC5QLjR2cPfejXxmlD/6
wIIKZdQMfs5UE3IJvWWAcTEPztOWeYdybiCX8u47iiyb4Cx/o49nfBpyeZF2
Gm3GBk5Z/hMrjkxFrlAJm67PfQFHw9cbmLag/kOlvcC0nNMD32y+oclpOY29
7rzjwRxzOMD+bUIzxgM5oSE7Rl5zD/bmOWnS5erYPSXlPpIK+CSXam+hhusl
0v3S8wMOwLs6RzhG5hHY75CL2tYxQaWV116jFzexM4NWqIlswCHFas/as7Bn
V35LtpoA3cY32ElX12MPdpWYv7ID/ec8rneJBdiN9ERnyxzA0EFPFypYwHU9
EuiIRybAuHhDV+9XXNyfTtUtlJMSIPT6m5EYdgH5YugTxzeFIUDs8OjUpIEq
clnD2O4mphuQUryc9b+hIV+oPNqz8cR2IN/m3fqDpBW5SDf25esLTmCxvppg
eRUin2bM9no/ZwGFIFFriYPuERw/rhw1eVEKlMMJsFocifxVFHPvjk1cQFB8
D8f9xMPzuXSGtvS1OiCisgve3kLvDOwSxhzIEPgC4urA+4VoOfI/iJpre+De
//8vrav/S1pyTea/8cWrEw==
      "]]}}, {
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, 1, 2^Rational[1, 2]}, {-1, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, 0, 2^Rational[1, 2]}, {-1, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -1, 2^Rational[1, 2]}, {-1, -1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, 1, 2^Rational[1, 2]}, {0, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, 0, 2^Rational[1, 2]}, {0, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -1, 2^Rational[1, 2]}, {0, -1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, 1, 2^Rational[1, 2]}, {1, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, 0, 2^Rational[1, 2]}, {1, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -1, 2^Rational[1, 2]}, {1, -1, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, 2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, 1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, -1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{-2^Rational[1, 2], 0, 2^Rational[1, 2]}, {-1.4142135623730951`, 
        0, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 2^Rational[1, 2]}, {
       1.4142135623730951`, 0, 1.4142135623730951`}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxN1X00lFkcwPEpL1NK2dZuGLVRhhNT6qw9ZNbtxYQOh0FTXqLVItVGo6RW
Ke95WUVe02iNt1gJO3bbxZ1KOCujiZRkiGFkZjIzZh4nalvn7O69/XH/eD5/
POc5v3uf7/WODDELJZFISxcXY3FpAeIWJyzescgpjSVKfEQj//fcA4i8G33d
u5pBsyd3t7S7GftpzovCOhbocO7Io+ypw25PW5db8QwITSm2WwPjkWvGmKIN
mhbwfOmuwpsgF7n6o39lmtkFMDp8dEO7byfy2d58QwG7CkwMV2ducnNFrrJl
657V7QHT0o2Xi50qkStCJjttXT+CGTuP9WyVNnKZ+y8JwpZqoKx2r+51G0Au
iQgvTMloB7OH6OOC7g/Ix+JIrDlmJFBXHfGnCr9DPlhNYX+YvgI0TVo55q4p
yPvtHLfavS4CxKrQAFaTBHlPIPdScF0FIHymBgZyjZA/OGYp4NxNBUTCtbgu
mwzkdYWXrmadWQDEjc7NevqC/x2W7dc7MN/ABATn4UrC2Qs5P+Oyi0WAHBBp
wReNHnUg7y4PkgxnUwERWG+92u4k8j7m+nvaj/wBQbEUqW8mIx+05U0HGuUC
zZ983d7SVOSi2dCwQb9tQLMnXGkTvoBcPN22qkWRC9QGraNiOkD+pvbzimgF
E6jKeBX6NQzkb0N2kMPeOwFFuzzlXbocuZLadCQ+WQHkSe1WyttfIle9++0x
JU0GpipVKxLLziBXn5yK2LaGBcajHmTrkLch15zTGwrTNgKv0mcSg3iG2Ccb
7nwRQwID0JVZGpyGnHD02+XqJgZPBmtqJ6w02KPj3kr6TEBH1vc/jm2hYM9z
G3SJiQDNZbo2XOUS7LdKxOZDQ+Bwqt+FmvcS7PnuB3tN10Je8epls9e7sbPr
zeJKDWEHP4SWlDeP3U4QJv2jGQo9DBQ/bzH/5PujFNM2UjjwkLa7SKcB++WS
8BLjIPjKfN7yxPFgPJ9gT4fPXLzgeIPQJI3hjOcpMXVw890Op0ZEI3ct6Xj+
9BRR+kQjlDNb+1kXM/F+MeaFHukFUCG84yi1asT7K1pzwDs6CaqurUxiTNki
n7D6+5TsaAJUk0In6zKeIh8JW25o1kqCGnuxWSn/MfKXJgVkfmsk1NScc9yX
boG8n/frGDnKHRK6ykPUJbXIezKdyEyVDiS85aUH5GXI72fQ7S21vSCR7Jec
FbAX+W19L76xRTgkblKvtS/joP+r3Npnp/HTIkhwgj7QY3nI+ZRTK9/YcyFx
pfxbqvUY8m7TAl5cznJIBLvILZ7bIe87657fJRNDwni19EyJA+7DPm9nOpiB
mntifdkwfs9r2Yqunq8EUN2ptY52HJ1/IPH5ixUbeh7OHrnv+PJqCO6Vw70T
44ZaUFk/ur2Rg7unoPnsNviGAWfK9z9ec2wT7uFG37Yf5G1QuurUsxfnnXA/
6yoJrs9VOMl60+P7hIt7K47Vm+Oz4OvDmpENTwtxn4diYKXsKHwewdm5eS3q
DyBoBz3ZPwmhcO40Y+5rHewRV7JfFVNhlyRqb4r4IPac/oWZkyr4O1F1fQfc
if3f+6Vt8X5JulCFOvMPxLWIkw==
      "]]}}},
  Boxed->False]], "Output",
 CellChangeTimes->{3.457537356777915*^9, 3.4575384303176813`*^9, 
  3.4576393355784073`*^9, 3.45763936574249*^9, 3.457880015534665*^9, 
  3.467384595772006*^9}],

Cell["\<\
We are not told how Peres arrived at that set of rays. Roger Penrose observed \
that they can be obtained as symmetry axes of the following figure\
\>", "Text",
 CellChangeTimes->{{3.478395568985443*^9, 3.478395617357708*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {FaceForm[{RGBColor[1, 0, 0], Opacity[0.8]}], 
    Polygon3DBox[
     NCache[{{{1, 2^Rational[1, 2], 0}, {
        1, 0, 2^Rational[1, 2]}, {-1, 0, 2^Rational[1, 2]}, {-1, 2^
         Rational[1, 2], 0}}, {{1, 2^Rational[1, 2], 0}, {
        1, 0, 2^Rational[1, 2]}, {1, -2^Rational[1, 2], 0}, {
        1, 0, -2^Rational[1, 2]}}, {{
        1, 0, 2^Rational[1, 2]}, {-1, 0, 2^
         Rational[1, 2]}, {-1, -2^Rational[1, 2], 0}, {
        1, -2^Rational[1, 2], 0}}, {{-1, 0, 2^Rational[1, 2]}, {-1, 2^
         Rational[1, 2], 0}, {-1, 
         0, -2^Rational[1, 2]}, {-1, -2^Rational[1, 2], 0}}, {{-1, 2^
         Rational[1, 2], 0}, {1, 2^Rational[1, 2], 0}, {
        1, 0, -2^Rational[1, 2]}, {-1, 0, -2^Rational[1, 2]}}, {{
        1, 0, -2^Rational[1, 2]}, {
        1, -2^Rational[1, 2], 0}, {-1, -2^Rational[1, 2], 0}, {-1, 
         0, -2^Rational[1, 2]}}}, {{{1, 1.4142135623730951`, 0}, {
        1, 0, 1.4142135623730951`}, {-1, 0, 1.4142135623730951`}, {-1, 
         1.4142135623730951`, 0}}, {{1, 1.4142135623730951`, 0}, {
        1, 0, 1.4142135623730951`}, {1, -1.4142135623730951`, 0}, {
        1, 0, -1.4142135623730951`}}, {{
        1, 0, 1.4142135623730951`}, {-1, 0, 
         1.4142135623730951`}, {-1, -1.4142135623730951`, 0}, {
        1, -1.4142135623730951`, 0}}, {{-1, 0, 1.4142135623730951`}, {-1, 
         1.4142135623730951`, 0}, {-1, 
         0, -1.4142135623730951`}, {-1, -1.4142135623730951`, 0}}, {{-1, 
         1.4142135623730951`, 0}, {1, 1.4142135623730951`, 0}, {
        1, 0, -1.4142135623730951`}, {-1, 0, -1.4142135623730951`}}, {{
        1, 0, -1.4142135623730951`}, {
        1, -1.4142135623730951`, 0}, {-1, -1.4142135623730951`, 0}, {-1, 
         0, -1.4142135623730951`}}}]]}, 
   {FaceForm[{RGBColor[0, 1, 0], Opacity[0.8]}], 
    Polygon3DBox[
     NCache[{{{0, 1, 2^Rational[1, 2]}, {
        0, -1, 2^Rational[1, 2]}, {-2^Rational[1, 2], -1, 
         0}, {-2^Rational[1, 2], 1, 0}}, {{0, 1, 2^Rational[1, 2]}, {
        0, -1, 2^Rational[1, 2]}, {2^Rational[1, 2], -1, 0}, {
        2^Rational[1, 2], 1, 0}}, {{
        0, -1, 2^Rational[1, 2]}, {-2^Rational[1, 2], -1, 0}, {
        0, -1, -2^Rational[1, 2]}, {
        2^Rational[1, 2], -1, 0}}, {{-2^Rational[1, 2], -1, 
         0}, {-2^Rational[1, 2], 1, 0}, {0, 1, -2^Rational[1, 2]}, {
        0, -1, -2^Rational[1, 2]}}, {{-2^Rational[1, 2], 1, 0}, {
        0, 1, 2^Rational[1, 2]}, {2^Rational[1, 2], 1, 0}, {
        0, 1, -2^Rational[1, 2]}}, {{2^Rational[1, 2], 1, 0}, {
        2^Rational[1, 2], -1, 0}, {0, -1, -2^Rational[1, 2]}, {
        0, 1, -2^Rational[1, 2]}}}, {{{0, 1, 1.4142135623730951`}, {
        0, -1, 1.4142135623730951`}, {-1.4142135623730951`, -1, 
         0}, {-1.4142135623730951`, 1, 0}}, {{0, 1, 1.4142135623730951`}, {
        0, -1, 1.4142135623730951`}, {1.4142135623730951`, -1, 0}, {
        1.4142135623730951`, 1, 0}}, {{
        0, -1, 1.4142135623730951`}, {-1.4142135623730951`, -1, 0}, {
        0, -1, -1.4142135623730951`}, {
        1.4142135623730951`, -1, 0}}, {{-1.4142135623730951`, -1, 
         0}, {-1.4142135623730951`, 1, 0}, {0, 1, -1.4142135623730951`}, {
        0, -1, -1.4142135623730951`}}, {{-1.4142135623730951`, 1, 0}, {
        0, 1, 1.4142135623730951`}, {1.4142135623730951`, 1, 0}, {
        0, 1, -1.4142135623730951`}}, {{1.4142135623730951`, 1, 0}, {
        1.4142135623730951`, -1, 0}, {0, -1, -1.4142135623730951`}, {
        0, 1, -1.4142135623730951`}}}]]}, 
   {FaceForm[{RGBColor[0, 0, 1], Opacity[0.8]}], 
    Polygon3DBox[
     NCache[{{{2^Rational[1, 2], 0, 1}, {
        0, -2^Rational[1, 2], 1}, {-2^Rational[1, 2], 0, 1}, {
        0, 2^Rational[1, 2], 1}}, {{2^Rational[1, 2], 0, 1}, {
        0, -2^Rational[1, 2], 1}, {0, -2^Rational[1, 2], -1}, {
        2^Rational[1, 2], 0, -1}}, {{
        0, -2^Rational[1, 2], 1}, {-2^Rational[1, 2], 0, 
         1}, {-2^Rational[1, 2], 0, -1}, {
        0, -2^Rational[1, 2], -1}}, {{-2^Rational[1, 2], 0, 1}, {
        0, 2^Rational[1, 2], 1}, {
        0, 2^Rational[1, 2], -1}, {-2^Rational[1, 2], 0, -1}}, {{
        0, 2^Rational[1, 2], 1}, {2^Rational[1, 2], 0, 1}, {
        2^Rational[1, 2], 0, -1}, {0, 2^Rational[1, 2], -1}}, {{
        2^Rational[1, 2], 0, -1}, {
        0, -2^Rational[1, 2], -1}, {-2^Rational[1, 2], 0, -1}, {
        0, 2^Rational[1, 2], -1}}}, {{{1.4142135623730951`, 0, 1}, {
        0, -1.4142135623730951`, 1}, {-1.4142135623730951`, 0, 1}, {
        0, 1.4142135623730951`, 1}}, {{1.4142135623730951`, 0, 1}, {
        0, -1.4142135623730951`, 1}, {0, -1.4142135623730951`, -1}, {
        1.4142135623730951`, 0, -1}}, {{
        0, -1.4142135623730951`, 1}, {-1.4142135623730951`, 0, 
         1}, {-1.4142135623730951`, 0, -1}, {
        0, -1.4142135623730951`, -1}}, {{-1.4142135623730951`, 0, 1}, {
        0, 1.4142135623730951`, 1}, {
        0, 1.4142135623730951`, -1}, {-1.4142135623730951`, 0, -1}}, {{
        0, 1.4142135623730951`, 1}, {1.4142135623730951`, 0, 1}, {
        1.4142135623730951`, 0, -1}, {0, 1.4142135623730951`, -1}}, {{
        1.4142135623730951`, 0, -1}, {
        0, -1.4142135623730951`, -1}, {-1.4142135623730951`, 0, -1}, {
        0, 1.4142135623730951`, -1}}}]]}, 
   {FaceForm[{RGBColor[0.6, 0.4, 0.2], Opacity[1]}], 
    Polygon3DBox[{{{1, 1, 1}, {1, -1, 1}, {-1, -1, 1}, {-1, 1, 1}}, {{1, 1, 
     1}, {1, -1, 1}, {1, -1, -1}, {1, 1, -1}}, {{1, -1, 1}, {-1, -1, 
     1}, {-1, -1, -1}, {1, -1, -1}}, {{-1, -1, 1}, {-1, 1, 1}, {-1, 
     1, -1}, {-1, -1, -1}}, {{-1, 1, 1}, {1, 1, 1}, {1, 1, -1}, {-1, 
     1, -1}}, {{1, 1, -1}, {1, -1, -1}, {-1, -1, -1}, {-1, 1, -1}}}]}},
  Boxed->False]], "Output",
 CellChangeTimes->{3.457535678955484*^9, 3.457535730451933*^9, 
  3.457639447613082*^9, 3.467384683542082*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Jgt8ztslqGFjZseN2f1Rs8COXV2ylbWy7rKWaHbNZiGvopoabhFsWaiwtsFX
eUAbOkxvGg/raABb8yyLL5t3JyOvb5rUIaVyTCYXlgGer8Pa7WNG5yEec2x8
hsnIgkx5GRd7lp/0Wnok5vYlCg4GA0XQsQk6Ksj6BEeN4MM89GojCsrazX6i
YJcI7rcJNrQG/WHcpBrMqyDruR0xguElNr6gedcXGyhkNxPIks+JRMUOUTxg
U2xCcSI0j5CkWFRFdtXmK5p5UjesqI0+G+dllrImdDrR0nrYtWA0HjVy1vUr
fKOyGrGhgsPG6LEEIzYkz4xmkM4lGl3GXyX2F+DRhsfYiB5V9WCDN4eMx+Pr
jy5s5i1gxIPdGSUPqVhM9LiAv8rvnTtvfeRErI5mU7vVTQMZnJStw/C+5RPs
EJM0eoWaH9F4DOmmRGN2B8VuLYUiKQUZ7u6gFPqhiUivFFyUQo6UQkNrmI0K
HzTub9DzXU5r1kzpOWFP+InWlkStBtHaoUFaJVoyFdGFVm9ErZZqsSo9YLR+
YsQqdbiqvOdve6LqMa2tVqJWd0StjmqxuUtf640jauW4lryQcaetbyJah1Wr
O1xLpvnr0Mqvu3jxtXqqxeaV9xutN9m0/HdJRg47uUlU3i2ymmhyQE3GiYnM
4/Vg0iEmrIL6asLWL+wzJm8mJnJgZQrhCgpW06iPvMN0X6JPlRxbS+o4TRxl
drkPx3ZoUUZSEI6rI1t8stc4vsXqmA87hv3kZbMHE/UqRG9em455oierAsZU
r6R61mCcVD22fs7Xe9Kmp1cFxk3qTRr8IyomuzwAne1aM5sIuqzKGAd6K7Ra
Kwl9WtHZ+sU9Bv0ntTF3B8BO+NyE7dj6du1lbKb6rulsuPxxK6EfS00/q/Rs
zeiqoX9bYsGftFIjFfQLOgUpe+wk6LIKawLozSh6wYxPDNbre9QLSm2wA+ig
uJ9Kbo0ljFEDJ2zoVUWXV7gVySEwpjqrNp1J6DRCyxUtOkshnUj57zY6b0/o
tJ4CRo0odFThCBQKRKGrR/F+oiCrF6egUI8qFMMjRn4cLQ86dloZPv071ndV
TYdyPRB5GLaRmVAZWXWQJ58dPCPrCJGRNaTTkKmNLMOq4uloZEkVxG+6x0/y
gooqMcG7UV6Wqtyl412yxwlC3dkg6me0+Tll49qkJbxFBw9kjzOESxZ4z4BL
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
iQ==\
\>"]],

Cell["\<\
which appears in Escher's \"The Waterfall\" (which was based upon an idea \
supplied to Escher by Penrose's father):\
\>", "Text",
 CellChangeTimes->{{3.478395638776524*^9, 3.478395699483221*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJwsvGdsI22eJzbe8xcD/mAY8Bff2QfDhgF757Br393u3XludndmdmbeyW9O
nVvdauWcSQXmnHPOmZSoHKicc6aoQEqkJEpUzlJL3U3/2L3AowcPi1XFqqf+
v1Qs6ou8F//bi5/85Cf/6ic/+W9q8PfT1FgkquTxSo1GJp9fJhIRGhpUUknt
xvro1uaszSq1WxVHB+GLs52xkc7Vlclk8mp2dqCry9cV8ERjc9dXsbnZroEB
z97e/H58fmzEP9jtfnsZnRhqbXBpYqtzH64P+9rtB9tzyeRR8n7vOD5/ur94
sD01P9G0NNPc12lwmul8Zg619oVCXKJTVtBJL/TSyrqyRwpekZxbaNeSqou/
R0+ueOK3c/jUTCk736KqkXEK8K5RThAxs3XScjkvj0NO08vK7Loai5rgMVMU
/HyDvNyqIX5awqW8knFzhYwMi7pSxH0lE6VbDCVifpqY99qiL5PwM/msV0J2
Bp+ZzqWnkwiP8jP/wGNkEkq+f/X0n/1OxUhfQ21lJoNU2NFk7u9yJ7YXTxOr
68vDby+341sLk8NtzT5DS71xd3P+/X0iGpnEbFxehtG6u+2JxOJ2bGZivGU1
NLS2Onx6svb2bmczMjE44BsbbcI8X59unuyH3t/unR2srS8Prsz3To+27EVn
Tw+CkdXhw/jc0d78UK+zsuQpoewpueZFTeV3rY0cPhtnka2U5ttMRIkgSybK
8TjIdnO1Rl7SXM+V8HME7AyPneq0UFTiikaX2GNlW3UkpajUqCaKuTl6ZYVB
Ve4w1SrFRWYt0WGiSPkF7X6pUVXtsTN9TrZeSVSKy3x2QbNXdrA9Yzew787X
ErHJuYmGpZlGr4PFpKRRa5+opCUVRd9btDQRu1jMKUkm95Pv41YdvbbiRWx9
6PJoGcs7mzS44ioxwaAkeRxcnYpYVfWjSlUpFBY0+sUN9cJ6n6C3x9DbY1Iq
CB43XyQskUkrfF6hzyPWaynYZGWxfXbS19okodW9RJFI+Tk2QzUulk5R6jTU
acTFNlWtz8Tw6FluHbPdIWyx8hpN7C63pMnMcaspLRZBo5E73GzwGzi9Pk2P
V12v43Q4ZBi3OcRtbjFKy6EjN7v4nX5Js5vX6Re1+fh+BxOF1OkX1NuoLNIT
Pv2lWV0m52Hqqpq9Qr2CoJFiDqu99tRcua1Mi45iM9CcVpbXybObGQZNnUlH
9tq5dgPFbaQNd1okzJIGq/hyb0XGrbVpBQ696Gh7yaxmucwCp1N4fx/b3p70
+WSrq4Pv3++hWlAkyQ9HB4nVjjbXw9ujZPKytdkRXBq7PN+9uUmcnG5OTXdP
zwRQTvf3O+vrwysrvckPie3o1OpSXzJ5nHw4PD8MJ+/Pro+3QnO9a4s9a4t9
I70ut4WvV9QphJUsSiaPkUsmPieU/lBT+YjLyNSrKo0agpSfZ1RUiZm5PgsT
06ISlHBI6QCd18zAiXDJb4BBm6ZOLSzVSSqceopWUoarUG+jf4Kez0ozKSuB
O7OqCmNcHYBRJy3Fwk8Xy6Qs16uKOfSnQKJBXQQAqqR5Iu4bg7qUTX1p1lZV
lXydk/6bRg8v0KrYjQzMjPkuDgGQ3dnxjqN4sMGlmp/smh5ti65P4iVa8v4g
mTy9OtkaG2gcCPgAz3f3u5jGi7P1aHRycry5q8u6GR47O1tbXRnA8q3I+Pb2
9MH+4tVV5OhgeX6ma3WxH4jbDk/fnEXOD1fXgwOxjYmNlcGJYf/B7mzyw/67
283j/YWJYe/SbNvKYutgjyYn41dqeaFRW84gP2/18xXiAoueKOZlex00l5Wq
lBT7PZxGL1erKKeT0iqLvpdyS2vKnhmUNVpZJbgFrbzwCx7jjYiTrRSXiDi5
HGpGXeUThbBMwi2i1rwUcws0MoJRXSdkFZEJ6Tvhsfc30bPEUgpiyf2edt3O
Zv/yXMOjb/8+583vygu/k/LKWORsuaCiqvjxxeES0AqOnRtvDAd7+zvNt2er
yzNtQCiHmluc961cVjk/13h6svD+3dbkhO/+bXhmqikU7F5f7RsedCX2Zg72
Z6ObY4m9uePDpbe3W8H5jo4WVU+n3m6maRWVFn0Nmfi4pZ6rlpYYVJUuI8lj
pnXUS5odghaHuNEqGGjWNJhYOkG5W0ttsfM73bLRdvNgsx5w6/ap5wfqA16V
TU7pqdeMtltbnTKzglRv5TS7hD3NauwHVYcC08sqxnpN7fWi3lZld7NUKSgg
VXzHqHnCoqQBelZditn4jFyDqlavrFFLq8BCRhVZp6zTq0hSQblJS8XY75H0
ByxGVW1bg6zdK+dQ8pbG2pMfTudGO9Fmhts/XMcDzWa1pG5ysmlzczSZPAgG
e2ZnO5LJQ3A1YBiLzl5ebC0uDKDdXO2dn8aAwcH+FgySybNYdH5qsuPidAMC
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
nkTQwwC/vT3A3hJ7a8kP58l3F8kPV8l35ymLeHN4eRR9d33w4fbo4SqBhRif
H2zenu0m747vzuOn++H3N0c3H5F4fbJzuBeB9gGDd1eHifjm5sbyCaAYDu1s
R/b3Yg/3N9ux9cPjra3Y0srqZCg0NTMzsLY2A6fd1eHZ2pjDsb272h3u9mjV
FJuFy+eWclhFhMqXClmN1y3DGTlswo42k8cpa20yjA75fW6FXsN0W8VqSU2L
V4boalZT4DmRO6S8QqOqGgAEFlwWmstCkfByjeoKIAUIMiqQ3fIBQJ20WCsp
Qi3pZIUi1mvATSnMtmrL7fpKHu05lfiNjJduVBY7TLUaWTGaWVsFMDZ52WJu
lkyQq5WXYJ82QzWaQVWOl3gXn+W20oG79kYJxAsHgJcwb5AMIA4HU5+6zV6F
AIUlfGYW0KFTVNeUPycT4PTSygu/y8/8S0ne10AlAJiT/nutvIpJTufQMnUK
AsAIDLb55QAscofbykZjUd7gXaO6Bu+yqOkGVTWflZ2f9cfCnD++efnPT3/4
WWnOX8pyP2fWvmSTXtGIqTtFH+8alaJB4vXyIpuuUi3OlXDSzeriJjdNxHyD
dVq9PCi7XlYGZQcAEYoxbvPxgVC81MtKMHVYE8B06GsbnSy4bqMCY9L6Qkto
pmlhzLs82dDqERZl/KnJKWBUvwIeIZTzEw1Hu5MVRd/KBMVOC82irzNpa7SK
ShCOx8YBiy5OtQ0GnNPDzYDhyuxAeGX86ji2FpxIPpzCMt1cxDEe6mtGEgGO
BnobnDZpb8Dd3ekEHm8utzY3JrEcKDs+WI+sTyEfIbYAhjBd21vzgOTBXujh
LoG3sALeikUWjg837+5Obm6Orq4O4vGNnZ2146Pd87MEXCg08eryJBbdODqM
7+5sYowl0c3l2Fbw7CSGDY8T4ZmJHuAdO19ZGkYND/bVgxCG+n2FeY8mx5tR
tKSa7Mj6GPzwTnRme2v2+GD16nzrKBG6PIuiXZxu4diwn+vz3b3tlXgsCIgd
bIei69PIdA/Xe+iP4qGttSnkOzRkvYOd4NnBxs1ZDC8T28uJ2MpOeAFQPY6v
nx1FD+Lrb68Pbi72tiJLcKEnhzvJ5N3WZgheGjAcH+vfia+urE8tLI0enUST
yav9fVDH5f3dISgOB3aeWGv1aVnUHKmgXCasUEoIRg1NpyTrVRT4TJ9T7PfI
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
0iACir1WnlpQ7TYL+PRCHr3QYeYiBZCrMxmk/NL8Zyvzg/eX+/HYClTv8jS+
ubZ0vB8DAFcWpjaWZsPLc7vh0DXQuLawvbGQvDtJRJdCc4Mo4NTDimvjR+jX
xyLBwavDNeD6eGd5brR1uNsVnOlA9GNTMuFFIf2gMoOqEjZbzM3RKSpBRDB4
0BEW5TX8Gyw63CmPVnC8u3B3Ft4NT7w9jwx22cb6nCnuYucg9wGnEmYOoKcT
lfMpb4TULJ+J0WjjKDiFQJxFUY0eLzEQ0bKhg20eQYuL57cxgE0+OcOmqnXq
aVxSbvI9UtXxxuJQT6tzfqxnZrgLXjYeXur029VSMljL65BUlT6Ti6qlAoJE
RJSKq1dXBibHm+G+JEjNOqbdLuztdhwmFtoaNShylZRoMzLRhvscqMl6l8io
oahl1XYTC8UpYBfJRGU+p7CO+MJooNhtrCa/wqCjWkxsi56NC6FX0Qa6HOHg
4OJke6NLOhpwDLabVPyKrgZVp1fh0bO6G9QjHZYun7LFIe7wyKcHPENtpoBf
3eQQeYxsh5Wkkhe77DSQhs1EpZHSm+vl+DiXlW8zsg1qqklLBR4Lcr549fzX
eJfHLHj9/DM2Ld9qYIm4FYgnbqsYYQTBH/ni8iS0MN2ikdeo5YTpcc9asAMl
txMeRLGF5tu2VnthsBFjubTs9eWu5P3Wdnhwd3N4I9Qdj42iD7RrW+qlIBlm
XWZN2bP0p7+rKnpSU5aW8fxPxdnf4vrmvv6cSnyd+umWkgjuQhmohMVooGuw
MUyFy0iC1fn4W4l0Af21SpRrUpXWln9Fr/nRaSQqBEDxdxTC1wpBBr3mBwkn
XcrNoFc/phEf5af/ttHJ+XAdgrkKNCpB5u8v187i0zNDbr+dQ6161teqxuDd
ZbA874vyvL90NYqbXGwu5VVV4edSTpZFU64S5iv4+Q1Wvl5CGmy3rEy1LozV
P/nqP//4+d89+vLvfvz677/9/N+jf/TNf/ryD3/7p9/89V8++5u/fPbvnnz5
H3/3D/87qeTFN7/72b/9n/77uvKC1YWxf/wvP3307T8V5Pzl5ZOfP/n+7988
/cV3f/r3ha++SPv+nzmkjJLcLx5/+19fPPpF5ss/ZLz44x/++f8d6HRCGZHp
Fib778737q4Ol+ZGR/q7Lo73tjeWIH9YeH+ZiK7NhYOTFwfhg9ji6V7oaGfx
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
TCH3jYibIxMWOcxUhETkIKuBxGVkQhCxOS4oh5mpUlUq5BVcTi6fl89iZtVU
vzAZqY0N8uFB18pyYGjA3dFm8Hmkvd22h7vd5NtDUNb0aAdYa3G6Fxbi3U0c
hq3Jq4V12YvOI0Ek3+4hYlcUPcelOU2sdzY5IitTdoPUZhCtLg4PBHyR0MTF
UQTbpv41wdvUk/M3Z7HL403s6tMzyTdXYSY9t8knC7SrH3/3X0oLPmdTX6VM
spYgZKSTy3+AFPJJaZUFX7GZ+S/S/oStDo5TzzgtLQ/+9U//53/zv/x3P/vZ
//HTf/c//Jt//RMa6dVpYjon/fcleV+C0GDk6HVPFeIiNu01re45SKm9UQZL
TyyHYajWqyhQ4b5uV3CxDy6ro80kE6WesJXwU0+pWfR1NiPARQETAs4IemZl
rUFGRDMpauxais+S+jGaRlrR7BXK+EWIyVp5RYOL47XTEQY5tDfYSicnQj0h
lzDeanFK/jTS6ganCI6i2atSier49HK/U4U8GF2d8FolVh27tiKtugzYyTWq
6xSSMrGo+FPPpL6hUdNFvAIJjs1ANhnJqBmhoFAlq8ASvGs1pp4E0MnqYO1g
lc1qCsI4veaNWlKpk9f2tOt6O/TtjYpIqKfNL4fUttYreB/vG+MTO5t0F4fB
7Y1Rh/n/5+k7wJuq/vfjAFFBQFRQEFRkiYoC+sU9wYEgiuwNLVA66N57pWnT
Js1q2uwm6Ur33nvvvXeTJk33Zuf/3ub3/J/n89zn5PY2yb057+d933vP+ZzA
8iJFXWVySjw3KYEbKQ/Kz5XnZIWjSyTEcbMzpblZEcUFsRmp0sw0GdRIW3PJ
YG9jVVl2aWHayED7wox6aXZ8eW5ifHRwYmyYeOJDTDlcHhns0j1Z7O9pHexp
e7AwDq4c6GkEnbU3FuZlyEVhvtCKyOc5KbLibEVanBjXpL48C20Zn1aYGZ2R
EJ4QyY2PCM1IEI8ONj97oH28qF6cHgLoVAMNmuFmRGN1doyMgRySlynz97kf
RLFydbjl437P08XQzOgf+L6u1nzQIn7x1vpcfCiEaHFeNHxiY02Kn5cxxeee
VOSZFEd3tj2fnsgYGykrzOazaRb6akLJsUEu9hehTLSqCjOj4/Jwryi5b0yk
n5f7NQ7DVCa2p/hck4mdwthWzCAz2EC5yCs1nhUSbBccYMGh22LrZHMJPiiA
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
k44cfuf6cQ9nAw7NEVQIPzjYX1VflZaZLlEP1z99PDo6VNfeWgDvmZ8bOaas
b2nKhNwVCjyK8sIbauIzkkKIJ78MW3/vu9Zm/7raX2bTiBpQ7k5X9Mv02Fud
ZgaZcYItAnwN5CIX9CVkdQHLJlrqFSl0g7wMCbovE7rGSGCCbKLFHsEBxgIW
0W/BFzRfw+Rofzfbc6wAM2+nq9iKQxypnnd8nK6zA9BRbRl+98N5Hkw/y5Ic
2eP53p++3n7lwqFrlz+/ee2wyd0fj/287d7tn4b6cyi+hv6+RvbWF4Kp1rqn
yuhIOmCyd/fGr794/4Otq7//coet6anr5768c+1rL9fzJnd+Nrp11Mn62v5d
b776Mumddza8sva5zVvXvfXuq1u3v3zk0Nbtm0n7dr609U3S+1tJQq4rl2F/
+ey3VmZnX1lF2v72Cwj817FfDyzO9yfHhRClzoMt6OS7qQpqlMhdv/wNsXYA
zQJOkBNgKgt1So6kKMSeEpatgGG9UhXZBymLTbdEyuKH2IWyLBUR3hK+o4/7
dZhiZpC5kcExSNz0RFZpXgQsZ01ZBuxAUY6iqiQFBlDfSeYne7paivAS3ebZ
A82jBSUa8IwDHZVtDQXt9QXDvdW1pSlwDZ2NBcSjsWxFWUFCZWFKWUFScXYc
/GNmoiQ5lq+IComSM6TiQEEYOZTpwaG7cplu6AzcYNcwpnuUhConnlQ6uNvf
EoV4omstTvQUZUYyKPagRQHLC+JTtzxalBUl4wfEyVlVRYkpijBJqF9hZmRL
TW5ve3l/R+3ocAchg8cGNEPEw4KHc2qijNt43+L0ENTX9PgACBrJAYc9eTQ1
NNg4pmkfVbV1dVZ2tFWqRjrgZBfnQHDj01PqiXGiWDHU6dwsEoh65RHGGNzi
3PT4xJhqdkq7MDuJ9vzMBBqPlucfLM5OakcDvO+52F4OIpuGMh3QqRJj6GZ3
T0LkmNz5u6E6FRm7rjIVsnB0ZQ3B4oJ4Hw8bEY9GFKkjisZo0aOePRqA+Az0
Mwc5tjdkV5fER4j88G5CrjMx64HnrZAGJUQyUmND0ICRz0oCJ3LYQdb3756s
Ko7QPRsOIhtbmJyMi/BPiQtuqk7p6yzsaMyqLosDu6mGyrtaskoL5UM9BUV5
4oQYqkTogp5Ao0JimdP876KNtBxINsIWqhI2jc+xZwaartQZdoKjgaqEnoSt
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
z9hIO201tFqZn6c2gDEzxae7LSM9ycvW4ie44DCcNYhevL91AtEDLbeNs85O
xRRkBmYkebhYK9gYf7Q3/ehi9dXF6rOX43es558A978gXwFxcWE2IEdXSHD5
SqkBbAGZunLPAhgWtsSH2zpbyYPvC/TVXn6FUAkob/kZNm2Mp/ryI2q6wH0A
PVd7RdgCY2vTLxa6H2Lw1rF426gg9PmN1GgPJqV8cZw00FM2OtQ4M9LRUJHY
TyodHmyoLoktzMaROrPo/UXVFcSiPHx1WVxuRkh6UlBeBlrpBhoh0DkC71pW
EDfYV9fbVXbn2p4PL44qfDr16Ka0/MeLz+8fsjVTmB7p8nQ25FmF7NsrvFtW
EESj9K7NF67t23t4m4wc33YJ5Mn9w7++3vr67jL0Pz5e01J5Kf/tjr7W56dP
L2zhR0TEN/DxIxsF1qzn55GRE5XbzX/jouyzByevXpC9cknu7t3jt28de/H8
2pXLh8VF+cRFN4qJ8K1bjYTh/cBb9bQ2LE5y5seG2P2dQ5RmGqkWvZY+R2+q
Thsgl5PbCyidRTBYrg6cXpoXjeYfwzlAbIeFtJLAMCzQJtjP3MNR3d7it7XJ
T183HSdrRWi+blr6Gq+NtD9oKr368fG2jup7YogzGriWOBMs0jizu7Y0rTg7
anq4p74itbUuc2a0u6Y0jtlXjXExyEvGleSE+bjqdTZlJ8b4gPEcH+3ncqcH
aT0UcgtwIvhEiADfPlx//ez4x7cnfstf+PLhJGBQS/WR8u97f+Xvf3x96fnD
E9Ghzo1VyRDeweDraby9eXm3pfG3N49OKX2/q6/6UunHHT2N53YWX39+vhSK
MzA3fiMiiBw9uPbSuW375ZBzJwUO7V93/PDWPTv5m2oAgN0NFdnTHFJjZdqv
T7cOy66/dFLwzhWJ44fWXz4reuaoGI1UzR7opnTWcxc4k5yuMWZ7Z1MurBBY
2E42sPAco0IdHKz+pCdgMpMCPBx1zA3kfd2M4yP8ubNTY0OMpalpBpUc6ONS
U5oVT8R4uxpnJuEigh0j8Q4Aw7hIhwBvWKvKfh5aWB89Hzc1WKtgpkC/hQeb
LD9pqQhEg/XVcLX/BfwS6KenqfJ0JVmEo81vL1d1GAT46EGP8zeqrYiChvHS
MdH/4LX8olBYkC1++cUZ+CwcxjQtwSsvPSAlzsXK8KOT5XdvZ0U3ux92Jm/d
bL4CDwZ5qQG1AYeGYE0IgaY+bhroy2XeuoG++tFhttCD9E2Nd89O9Q3DmcMW
tOofznz5fSWj5UdojD2dlaH3dlW1NP7i5vDH2VYRxvDVwCFam37T03gZHmAa
gTULCzADNowItIgl2JVk4ShtuX3dhf2kIlJrNmhUoGygbw8nDfQGKMHCy13F
UO+VscE7Q933GiovjPW+Wpv9Ufr1QvXP69/fn1qbKRXmRHLnaZMjnVfOST68
Ja2scOnZ/V1/vl959fCwodZbLndI4dt/PKuRM2d23rh15MqN/ReuyJ27JHPw
mOCFy1Ki25APr85rKD1VUnhgbfJdWeHBj083AYOaKm//++/0Rj5EVIJ3s8Bq
fqF1fALrZfeJ/3f/xNOHxx/eO3z50s4H946+eHHx9OkdO6R5hYRXbeZH5GSF
9u+VWLsK8fGw5S5NjwyRW2uKSM1lXY1FZbkx0QQ3It4B6D45xmOlDFZIgGk4
zjIcZw1aztVWzcpI3s9dF7S6k/Vfdwc1GHg6qcFR4fyMYE9H618wKZ7OqnYW
P2EuvFzQp15tzX/5uul7u+gnRfssZ6RkMqgNJTnRUSHubna6gd5WaoqvMR7G
LFp9bhoO0F2WHcFdYjZVJTtYKgEq6yqTK8uSwXsO0bsmx4cYA6TJ0YHJYfLs
RK+x7qdH9w4o/b4JclRD5f63jxcUvt000nn/69vdq+dkspKxi9PUmDC35afd
XNMSfMwMvr54dNLK4MuPd1ce3TkAh6el8lhX/YmG0gMd9YcGOs92iCOnjm28
fU3q+pXtcrtWXb4gLiaE/JV/AUq7pjgzPT6kuii1oz6vuSLl1gWZiye23bwg
fuOSxOWz4sCDve1l3Hn2ctKbEQg1oBCGB5va6jMSozwdrf/6uusG+ZkADEMC
rABWcREewJW6qp9dbQ24sxP/psd7Wpv6SS1AoxOcXoyneWwk+iLVyvs7GUl+
lsYfAFzQgLI9nP4E+en4eaiBfgNplxhtD7SClqDy0/T3VgMYAtf4emi52CmF
B1uFBVt4u2oC1oIwhvpar23MfwD3xUc5VZaEw6/MjT67OSpHh9nDUQVjrGLQ
d1XciQT7hCiXzCSfrBQfU503aNZ3P12cr6abzfcVDOIxWst5LFWggWTFeGrb
W8qD9QasgXzFYQxhOwSN2Ah7+JWN2feV0hUAsQAvPVgVZvqf0KyDjqoAPXAK
sA+EayuTr1bG38wNP9mY/gA456b4AgyxHrogR0P9TbMTfcKx5jhvA28XDVuz
nxDhTXQ/aCo/szL9Zqr/SVvtuZO9grnpOwPdlxgfzYhQaxcHZRODL3qaH9wc
teOjfID7luYGxjntc5PkYUbztQtS714e+frx+KdXR2Dw4JasjvoL9lDtrat7
t4sj0ISEkL0HNl+4vPPCVekTZ4QPH+XfLb362X9Hf327DeEdDkBJ/v7X99c0
lV/oany8d+c4zxrgwXXCorxCEpvWbULABl6+LHfmtOiVy9LXru+6em33kWMi
QiKIgDAiKr5GSnqj5I6NoiI8a3kQD1ezSU4fGMDkqIAAD3OsF5razt/D0NHq
D6ApMdqZSLAmBBqDfV4WDGgtnmCMMd7fxN9TFxqMISwDAEODzNwc0Kvfy2Wv
tVYuL4PSiAq1WH49U8nfy8AVrZet6udu1NVcUFOa1FSVWVeWWpgZaW+h6mYP
fgR0mnFVcUxFYRSjr7ogFc+i1IQH2QLebc0UG2vS6irSCvPiG2uLhuik6XFG
V1s1eq2G3qTw9c6H1+f+yN9WUbz/7uWpz+8umht+efXk9IObh8ryo7iLQ6CH
HSxVwoJgjdkAJwIBgR98cu+Que5Hha83tFWfKSncAUsODkVb7T9F+WsH9/CA
vztxePOdm7v271kvtR05eVQo2N+usTq3qjCd3FrdUVdSkZ/UWZvr66T34901
GTHk2IFN50+I7N+1sZ8Mohq9q9LVVJyRgEuNxcZFeMHCxnqb+LkboAWtQhyj
CE7BGAuQqSDRQcA3VmbkZ0aD4FuYGVucHp6fYACKq0tTA/2sWuozgUCBvr1d
tTOTMfZWX0IC9YCsPV0UXR3kPZx/w8DXQxnjpQq/iiSYEENNzQze+ntp2Jh9
htMOdO9ip6Kh9Dw90Ru0paO1oq25vL7mG4AhtOhwm9qKSGKolZPtL18PjeAA
Y5DKK4/mQoNAARgszAoqzccbar9C/6GXJiFA19Pxl4vNN6yXamSwEfAXrARY
je4OKhB+YT3ERTjCkgCUJUa5wK/QglwY4/QErz8/7tqZrxTB1PNy0YIDC/Q1
Ls0nLN9n14Jvh8MYZ6X4Q7jIz8RlJvu2gvVbpNaXRiVGOIHPxfnog+EFSAJ4
YY3pqr+A8L78pOgXZ7s/oLQhhoDndXL4GRyk6+ejFuCn7eWuoan63MzoWxzR
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
bIBSRCOXtNSm1VXE1VfGF+WEkLvyO5oy4qJcs9OxuAAzU4PvWqpvVJRefXh3
48G9kw8fnLx+dc/BA/ynToqePi7y/PHJS+d2XLuwE8bXLskAFW7diGzlR1au
ju7Zu23Pnq3HjojK7ea7eWPP02en7t0/9Or12Z/ydwCAuvpv7e0VLc2+Geq8
Vld6/PrpsUtnRGQkEWFAuiSPoCCSkxMOygHizOzMYFlpKmgewCCcSQhlcDZA
/EPIBQ+ekxaamYwP9rcDVQDWmDtPH2W1F+ZEAuVBI3eWktqLwY8MUGpAvU+O
dJPbSjX/vi/JiWX1twAJjjOBOkeABAd6GnC+DkCFoC2nOGQ4t5SO8pqSZIjM
pJb8vPTAaLyNm+1vP2fVxHCHSKxVaqR3W2VGR01OSrT/OKuDuzjw48utW9fk
Xj0+e3y/oKwUj4QQAm3TOmTbFmQLyAZxZAPgaCv6JtfmDWhkA7gJbUGkxTce
2iO2Z+dWafH1oEAe3j2pp/nJ2U4N5Oge2Y2HDwoeOyYG4Uhaev3OnXyyspsg
DMIY2BA0iZTkWvDjOySQ/XvWnjjGJyWJnDq+9cXzMwcPiKC5PhZmAIPjIyxo
k2gNQWhoEd4V9IEiHWb3UcntgLuhAer0xMj4MKeX1M5kkv9XI4bSTOtr7aM0
s5lkYMMxDnWYSab01DEH25aWQHPVwHINCrJxd9VzddZxtNdwc9EOx9v7eRri
/C1SE/wyEv0xnmgpJWD/xGjHhCg7J5uffh7oY11hwRYReGsdtZdWZvJRYc7E
UKfenjKsr2V+biR3CcRzR39fHaAALei5nIlLR+tDe1tWRjqmvDi8oiQiO90/
NdELBtERTrBKO5qzW5py0QxUtEZydwX8+SinC2BYWhQfFeE10Fc/NU6lktHc
JpNjlO6OcthzhNMBRw6CtrE+o6khE3xlajJ2bKQDzGZ1GbiVofkJ0uxYF4tW
W1+RiNbxGayjk4pbqxPSYz3CsKbeTqoG6i/1VJ+7WP8OCzDLiPOuKYzurMti
9tbOcXroPXXc2cGl6YFpDmkELbnIhCWUHu8PkltF4cm5E2IPbu69dnHHg1uy
H16fevfiOBCQk5VyWhymujiup7WgpiS2rjyBQa2qLIpurEquLokFO5OXHpyf
gY8OdQbvDOHL31Pf2eaP+p+n5gZfjbQ/gIk20vr0+9uDQ3Jbjx8Q3i3Je/HM
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
ICZuDXg3RelNyvs2gZH89vayvemrz68umv56qP/pprrspsP7BcF9i+1BJstL
i62FHgPlAKJ0r/SWQ9rSF06r655Q0z2hcuWc5uM7Op/eXLb6+8Lb8Sv4Slfr
jyY/njy4eejJg2Ogcwz0Hy3MIVoIhhNAicUYmplkQ1temmDQCJQR/Ow0Y2KM
DJd+ikMZp43Qh/uZJMIEkzJGH+EyRiCqT4zSOcwR8sgAcRhP6Ovsx7ctzLHx
vY0NdYUMOg5oYnGWTSHihvq6IG4PD3SOMQbpJOzc5NDSLBGuWmyYvYXRGw/H
30HeZtEh9sBcK6/pWmWl+BdiwgBB6FgPIDL4WJAZnBRtX1EUlhLnAMozO80T
mKswJyArzTMj2R0ACO4DtFB4oHltWWJTNSI+GytT2uoyqIMNCxOE3vaS5BjP
8oJ4Qk9VW31OX2cp+MS2RkxHUyZpsArfmTeEL+PS2qe5vTNc/PIsaWa0jzLc
PM7GzU4Pg7yESEsdaScRW1jMnvk58r8l5uwMmc3CT00OwceZaSKNip2cGGSz
kInDkxPDE+NDLCaOONy6uECn07pXJreOwehikQcmR6nQdYBEaAN97TQKfnlp
lEbv+cdjcMd65BQ3ySltePj8yL0nBy9cVjqqIyUggARYIcENw8CYvGmIjbx/
47ieBvJwF0R7CIMgSv29nYwNPoKRRLYURj18cPTJYx3wkju2ooAQnew++Pka
mRi/3Cu9CeAsI71VWmbHX+P3y7PkqqLE+vLUPz+euzvo//394vuHu5gUXxqp
UU6aT+cIwsJgBu/fO6ogv1lbW0RDXTwxIYC3zCX0NQGg6KSu+vKsod563jyT
SergzdHwHeXJsd6ARw6tG8Q5izWYk5M0Pz/67994fX1pTU0Rh0Uc45IhtoM7
bmkoHexrm59msmgDM6MU2kgfvqO5valmZKCLtzzNphAI+NYpzkh3Rw2L0rs0
z1ycptDIHUwydny0b5yFZ5Db0XGevm5G+ZmhhVmRhZgoBqnN1+1vZrJfc00a
nVQ/zmqbYLfPTeB480MwGNISvMFLensam/598+o/vff/u/X06YWHD89euqR1
8YKWznEFneNKOkcVlRUET59QP3NS49wZ9dM6MlcvKr1+fvraJWVVhU1P7h8B
w+Lp8lX/+20pUeSt3b2SKGlxlPBuZC4wuMJ94uulRdadOrLv2f0zj26fgOWP
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
On1qxZ2bfz55eOjZ4yMWr0/9fWjJt7OR9Sw3r+1e9jtSWmLX1gV7dvx+8eyf
vy/4YsNqRLL+OhcF6Ht8//jlC7u+/h8KqBAoct/u32BcAH2XLu78fdEXQQE2
wwNyeXt1YW4SmMHSvJSinPjSfFltaUpDRXpVUXJZXmJDea66s75H0QS9AXob
tuCJJod00D/mCdOMOVKOD2jhkywZXcjwjWL5Q9ADGLKprsgqP4q3mBdeXZwE
fnAmvxmbz/EVRvpgQt85Oz0E0SiJxQsiQzLSuDlZgqqKRJmUUleTKu8sKS6U
GHT1bGZQeipvalzdo6wyjytUnflVxTFZKYwobiAALVYQnJFEqSoWR7K8ODQ3
HtMd+JdJcSKG24QFvAzyfRTNc2cQPlJwH5kEe/hQzAsC/cal+ok46DQZC9RO
eYEUjjzW3wEObtTUOj0iR26PQBsHW9esaC2qLUsuy5dkJnG51KCirBg+KwwX
5hIjwIt4mPryJKA8Qpg9ArpwJ9gSMXYUrD0B85HHcKMT7ZlkR0AfjfBJwHan
4m0+50sEcmQQXUGmAgbz06MkQmJyHKswMzph5s5MegLd2uLKzct7Th5fvWPH
z5s2//DVVyhQj0hx6uGeuqr8jpaKtuaSzrbiwd5WCBEgxlrqCgb0XeZJncnU
dOLUxtt3Du/ctWD216idO+Y/uHP42qXdF85s+3PHgrWrf/jxe9T6dfO3blmU
nMI3T+thlAszxLF8PIRcITvMw/F5mP/HeDFO0ZELGAz2f2trfR2Dtn78+Njt
2wd+/QUljaNoFVWt9blwqpgA2wDXN952z2hoJ0LQR1yApYDmgQt+5+N8n0t3
/ZwHEhv0hhphzacjYAwPsEAStOIdwevN9JjHzN1dr2getiArGtwNsJ5W3gCm
G6z3+LBuwKjq71V2dzbI2+sMGrlJrxofMo706/t0StiZHDFpuluMuo6xIaRA
Q4+yS6dUjphMw6ZejQL8oInFCNyw/vszZ9Zfvrwd/OyyZajbt/f8ufNndIjF
7Rv7/j2x7uTRDaeObX77/OqR/ev271rx4PZJZ7und28cmfsdoGadjdVVELEA
tLu3d/++EFC2EwjRyf762X/X2Hz4z9Xpjv2nawC9LRu/2b/nt31/LvjlZxTI
zj27/9i+Zcn6NfNsPjwoyIvpaCs8/Nea775Bbd08/9jRNW9eX1i3ds6K5f/b
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
AaNSQu5iktpbC4RddT0ySm05ztnmbXiA5XAvTdxVa/fnRRLaFdDn5fTJ3/17
erIfUFJpXjybXt4rpQF1KkWtfTK6kF0/1M1UDQm6OqqqS3EEXICj1Wtft28J
Ua7oUAc8xhcX7x0ZZJ+S4Aee3dvlR4DHb25HVSOJUJIbl5MRXleT5uL0wcbq
ZRLGMyLMNiMthNdVK+DVFxXEt9PKYM4kJ/qho1zhdUUpHvpQ2NmUnhQ63s+H
iNSvYDGolS31edDPPl4/t21Ru3Vz38lTejZ2T99/uHD67OaDR3SWqKE0NWcs
WojUEzx8aDufSw0JcrW1/BIb7ZOZHg16QCmhUMnZZ07o3bhutHPXss1bF86d
h9q4ac7VK7tPnth48tiGC2e23r+9/+nDo8YGK5ap/b3LumCV1swnTy+CAhTz
GYy2Zg6TkpuFayXDBcsvX9p97tyW69f1jx1fZWCw6MGD/WfPbDHcvQpJTLpN
fcuWZffunoR5xe0id3GaO9pqu1hkYGdg0iJiMghIalMxRHiwZiBUQCyBpwDQ
gbwZ6hMBAP9mZf+bmH2kXwEj3qsU9SiEYKYGuiVCNg0pO9stQOrKjSiBELs6
msBskhuLgQqBeaFJJdTxMeHoKE8pp3W0lv1dYkQqSQMjCZxoY24aEeTi7vgz
0Ns6Jx0NP6exJsvX41dZIcbV8d2rp0fOn9q4RWeJamJQNT42JJcKO8lseiVE
XYjD/dKubgFvrKd7QCpWCpigEAuJofduGv36dvPEYR0A4LIFKE+nd4XZoeGB
P5/cO3zx7I59xmuRFYyqwY526kB/NxCZGPgLSUfMAT8oE3UCD4JEpDbnWf5+
FBb867fZzVdPTmzWmbVqGQrGfWwYyRlaWwVzIw/CIJ9FGermK4W0hsrMDkoJ
cEQhMa66PBU0PBBcKi4kHRuSnxUL0CsrSAYwNlRlQYQB3LU05JYWJJYXJVeW
4CIjbAgZgUABafiA5EQfZ8ePGanhLU1FYNsh5MJggciEGPg3ezn0+dhgL6+z
QyroghdAiHI+u1vMkXDpg0oe9D9SJ3qKhadQHxMeZBcRaFVTngTHXELISG9H
fJQDOE2ZqD4l0ZtOyWe0FQHzggyWi5oguIH9dLJ+5+X8NT05ID8zCmQncB+T
WtYvb4fulfHJncguOdnfkuhpiQHoEPtYZJWaFZKsBuMGqhJswlS6DCt0mA0x
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
YbBYzThcFMgAsJnlhamkkjSIaVJBE4te0lCD57EraklJuZmBsUi2pXcWZrec
bJ4ADwZ6fPJyfOPj9B66yNvNtLYqkdKUAQDslbfChJHwm9sppe1tlZ2M2rFh
IURmDquex21UyOlKZdtAD2W4r7WqLC7Ezwyf6FmaFxseYA3CNQsfUpoXD7oL
+qQkN6a5JqOuIiUrLdjR9lWQ389cQkhTdbpS2DTay5R01pq9v71tw5Lr5/c2
VmX2ytvyiGg8PvDGrYNHTLbsP7xJfRVCgmvXLwQ5qrZs2r//oGbOQM2ZiVqr
NU9LY6bmsn+ABwGA82egwAZeu2JsY/vMw/3Drl1Ldmydb7hr6Z3rRof3rTI2
XP7p/aWzZ7ZpaCArwA2M1gCiDxza5OLwFmR5XmZwdKglBLf4KLu4SFuzzze+
f77u6vjmy4cr92/v32OksXIFCtzowgUo+Pad+kv0Ns/TXInaZ6T56/vdAJ8f
EHwKsiJbG7KBx4/sXbd+9cw501HbNizQWIzSVJumozX30F6d65f2Otm+hZ/v
7f4ZnJFKJVCNIpXjxgbZMOgt9cgWpOS4wG8fHr55du39y5u/vj4L9rVvqsnv
ljCAqqZKQfWpRhQTg1LVaPegkq8UsUBZsRhkRnvT8KBMImK0tVSBBALypVMr
YOghcqomxKeObX397EJjTbqP61cvl4/mP++4Ob9ysHm+Ye3Mtatmfnl/V8xt
kQvbcgnx8O3Otl9grKe2HGLOnUQqSvz6dtH297U3Tw7+/nz53YtT+pvnN9Wk
xEbY2Ns8vXnNADC4f+8a+HwXu6UwjxAbFRgX6Rnia4XUIE4NnRjsZLYV6Ost
uHhmy+Vz23bo/Xfq2PoHt/edPLJ+1jTUulX/M9JfbnJw0wateSJOw3APC0gT
0AetNA8DCqGhMrM0NzErJVzOpzBby5urcyBcILv2uC2p+Ei5jDHUz+9VsiFY
uTr9wKB9wPZS6vIqCrC4lBBibnx+QWJWdkxRYRJ4Q3CI1VVZ5MZCflczCE5m
ey2IeVEXhdlWXV5MqKoklpVlgWQtLUpJx4aAbCjOiYkKtvz74ACP8YgJswrx
+xUbYRcaaI7UVwq3TU5wi4tyAgGPxQaIRZThEaFC2SmVsgYHxf39Qldnc3Oz
d5npMTXlWaX5WBCEjLaSHhmFQStoqktLTnCJj7bFxNi7O760+nUnMvino/Vj
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
eZokx3mC/MjL8E+Kc4mJdijMD4+Lc01O9SspSxgea5yd75+Y6sJgen7uLe5s
INNTcZiRo731vZVZ3ET3AVJdfDHEz9jLVc/PS8/DRcvT/a27q/b3Lwq5mb6t
zTmlRfFx0b4RYa5paYEZGYEZaUGhQfY1lRlg2QDCm0vYneUZONqJgWaQNytz
/egA2wAPs+Ro92DPb5nx7vkp/nlpQamx3jEhzpGBTjkpYdXFaYSZga2Vqa6W
MsxwM9ILYGlscKBuDNOGwXbiCIMdnaW9PRXT0+0TY/WH+1hQRzlp3nFom5Ro
+8TwH552b8O9DPLTPPw8PoOaHeotbaxJqS6JH+mtmJ1ohXOZGq4BVXn/Jmp5
vuWVCqe8NI3eWyFtdZ43L3hy0ty1XvNBxJp9l//2+UlfZ3ptRZSWuuhAd6mD
lb6UKAsH6/2HdNdkpFlevuATE6OQl2ckuYtiZr2ioSly9Rrq6lUUCQnqwiWE
EIlvngRdeo/s/DUi1LmLKCpaopMnUHQ0937tr+7vrO5vI4usQeytrYw42Ohc
vwJ26QY7y2WJR5SAd6MPqu5On6PjnJra07f3Rian6vJyg7Kz/IN8jDVeCspL
Mz7iv8PFellGkpyL4zw/3yV1DRZGpn8VFJmfKbLLPGVUVeVSUmLWfisACBXk
vybMTyTEd42X4xIdJWDtpvijO+LC93jYbph/fZWa4A2i9Ik4o46m+FMpRgGe
e1KPaR4/oqCh/A/wLiVO+USSWkWR+fVLriD/L8H+puDNkVZZRwu/92Y3lkfA
bILKBSS+eSlmpK8E9k1NldfD9QO4vBcqXDqaYmDrSEn+ecRPdQqF8nQ2mcV0
dzVXpMaFZCaH1Vdm9neV1VelFOWFlBaGBvp9BZXu4/7JzfGd2Telj7riOhrC
2uqCkG2c7d6C2OBkvk5x7yTV/dNPxVkUpLleKYkqSgsMd9Uiz9V/Isp5cQbp
X5mXHoyU26pOKM4PfqnCQ07+Dw3Nf5yc1+npzyEXR5b9z9HSxubM3NzI1NQg
+D7Qn0MDzb09VRur4wvz/biZ3kX8CCglcH+YiY652f6Z6d5jhPYszA8PdtdO
jbYDlQx2VrXX5dcVpRibaNfVZ8/NdoMPmpnuDAq07ekpOzjAxcd6rq+OHvxE
1r2ClivOiwDfnRTrEehjmhLvERvtnJURBKaptj6zp69iCtsxgWnHE0Z2t/Gg
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
wmRgbbycuCBASlIEwPLmNRHQIDgjgDcn2xlGOnTNEZCwnBStnBQ9Nzsu9XGH
cHDPayqcrs4v4+J/JmGsPDzfXlVhJSdB5CQZ6ypT0FB8uLIyNzw33nu4s4ru
sre/3dFYJsxDDpFQVYnD5udzGTEaET4S4w93P76//c340RNtRSiGyiqciooc
7JxEXeg82NWpmcGFxamZ6ZG2tio4vW2tJcyMuLnZwZWlMZFhFoN9eb0dmY01
celJzp/e35IRpbt39/LJvr1//65MTXbW1+REhbvUVaZVoL0I/HLTfIGIqorC
CjO8ijN8sxJdU2LdAB1rK5K7Okp6esra24va2kt6+6r6eivHRxp72kvyM8K2
N8a21kcXpjvbm/Jz00KcrAyjgmyTI13DfX7FBjnkJgXGBjqC+rKTQnxcfob7
O8RFe9XW5HZ1Vm5vTcN4ANHNz/Ud/F2EEzI22trXU7++Onl4sAqPSwujuztz
K9iuvq6CQO+vFmZPoeQ62L4ID/m+OF83OlQyM1G7PN+ZlxFeVpA61t8+PTyw
uQJ/Z394oBM0uLk6uzQziH4vNtvp5fYZE21v/UsnK909LvqXhAQZhB0RMdJL
SqwSEgzMzHiOjp9tbQ3OnEHo6U9BmgPIpKJAJMUZwBnpaU+Do4F1kpEhtLSn
QAh0DGdJyREuHjL5i9yiovTc3KScnMQCAlS0tGdoqE5RUyKAnUy05zhZCPl4
yCFysrMTcLITwhguK4yAtAXAmRzn8En/5nu9qwlh1k6/XtqZ6U32l9WVYapL
4pqqk443jrED9eloXxLmIwP0BXiWkKC7cAEhIEIUFLkkpJiIiBGVKwLCotR3
74q/f38dyntIiKmt7XNxceJr19iqqiLi463v3BFUVeXk5DgPENXUkBUX4+7n
/Ss9PnRpanButLu+PNvGzJCFBoee4hQOgjBQIlurfSMDpWXFkQU5QUGBP+Lj
HEKCfzLQoCMfRBcf7RAWaPnJ4J61+ausVL9gn58AmaX5kRD6KopiUuM9grx+
mn5+Fhlku77Qs7M2AsXz35+pjsb8urK0vrbS1bl+4/dPZUXZaMnPEZxBmGkJ
KkvSOhqKdlZHu5oLvxo+EeOnoiJG6MjRd3L5IjvaT1uQjJP1vPJFFhoK9BsH
GUkqRTlmIA2ocnCNeLiIqKkQaSka1ctcIL2LMixXlfj4OYjhjwjzEn8yuO3t
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
l6d+Hm6sHG2u/9nZPjk4PDk8dnJ+5OtvFhb2FuxnZMibzBQnYO2E6LfFGI/k
aOvIYMvwQPOI4NfZaW4t9Umd3wqLC+KC/D/097T8gyHaFOZkY3tjtLer7lNz
XllJQmlxbFMD5mtbUXNjdmlxdF62H8CwsTZ5dLAhJvxjZkrA1Eg76M/B7paR
vnaQ8adYG/1g99TyhZ6rk7m7i9UHB0s35zelRUnmprclReiYqC9Gh77DpHmV
5AeVFoXo3RTg5LykoEBz566w3h3hqwTI+fMIJ+dVkKN0dFgwz2FgYSHCwtSS
koxMTDgARnZ2QvCDHBxEgCxAHAXNhauEMA3wuHjI4EcwiarqgmAJeXjIeHnJ
4T2iovQAWErycwBeoE7Qq9KSDPbvH3R8yXX78Mjm1Y1gX/Nbmjy+LiZZCa5v
X2j7u5i1VKbkpgWO9tVVl8a0NWed/JlprE5SlmchvorQUZ6Fi36abkcEsQLQ
B5BX0xCob85u/1aWkxN+31BFXpYNLCe6a+MsAgKytibew93UxEQZLeTFTwhc
BpgCPUaMjwAH4WIhzDSXFCSZHt9XhONxdTTmZsN+ZCR3/67ksyeqhvoS17V4
BQWI0HVgpssAQMKriKgwTUKc+wMDxfqqVLB4S7Nd+1tjmPTg8vz4zMSA759L
h3uaDG8qiPHT4GGj9xTwLyP8XESUJGgGKQ05Cj34Ilxsl0FYEuCiiZpopThx
KnpqdEsvES7CTHseH7wnJ56qPLOECLmSHCMp4WmqLQlyz0BCTo5OSIhIQYGB
geE/KhoETj45JQIh1D/AFIPxKC8P++BoBIjmYsV7aKioqyWAblaiQxhpEUVZ
coAzHAYhLsLBfPXvr/nf+/Mnf7c6v9RW5KdhUsJLc+JSY7wzEnwLMkPqyhKO
d4eXZ9tAOqopsFESI24OJgGe5q4OD71dTQCGEsKEgjy4ECIuYiERoS6gtWan
f+5tr/R1f+363ra8MD000N3b1X7yZys4wB6Uf1VVtO3bm+9tb9lY3UpPdvNy
fXnhPNL+pez4aLG2Jnt9baSqPL28JGV48MvSfH/3t5rd9fGDramh3pa5sR+r
s/0bCz+zk4NsXxlCWC7Nixrta1mb+7mzPLm7MgsA3Fla3F1aOVjdPFzfTkv3
Cgp+4+X5PCnJKTfTOy3xo6/749J8v4Qom8Ro24wkp/TEjzHhtulJLvXV8c11
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
vbq0+PMv2oIZLWvQ3dXo5mr1zFTf08Pmrr4KDfl5JtpLVGCxryB8PKSPHqp7
ebwODXZwd7cEtaamKghfSkGRt7gkcWd3+u/JRm9vezYm5eRkb3V1em9vBfA4
Pze5sb68v721sbI80PsDzcYc/QaCvLIyws7ujoGB4pn/kKpqtO/t4M+2rs6G
/Lz4z59KG+oKF+eH1pfRPewgIPe25k/QzkcbsZEOoCHBibMxXJQQoKwojABL
6GBtYPFMQ0ackoEKTYq7oS2zvT7za29zdQltITQy9An4KzM5ODrUHYTu5Ejr
yd/5pJgP2WluXd+y4yJt31roSApRPLmnevJ3bXtj8s/xendn8+xM78oi2PnN
zbXxnc2pb5/LFqd7/q02by8P7awOrc72To+0TQ59qSyKy0j0A9A1VWXlpIaE
+r6PDvkI2rKqOL4sH81k29pcWlgY20G36e3ARzXW5aKYygyrKU2Gvy3ICofH
qdG22YlvzY1oW7pvnwq6v5YMdtUU50SE+r0DDAL6yvPjQZwXZcdUF6eW5CQA
824vTcwMd+2vzfxbe/nSWPzqxR09XUnQliICxNQUiJQ4GVosThOst4i8DKWq
EuMNbR7gQWpqREqGko8Pn5ICMdSXevZEnRAHefX8RkFWcHlBVFdHkZvTY+3r
qNYCHtQ3EDO4Kw0kCBhkYLhITX0WqBAUFww+PjJ+fnJVVV5JSUZ+fsp/lpCR
8YqyKj8HFwlA79+NCQAjFd2ly3gIMzsBUOElPASHACGju8jOTw6DnPYCMTlK
miCuWr9ghvuqE6Md87N8QI5mJ7l6fjDOTnRrKItpLDttKFaW1Fyd6uH4MNzP
PDHCNivRiYMJS1KI7K3FLW11XiAIZjpsGqoLQGdMjHiEBGiCFmhRRXmO5CS3
AP/XFubaT01Uebjx2NmwQUYKC5HoaPMDMCEWSYjRX9MQlJfluHVdqiQnzvOD
ZX15emNVxsxoa2dbUUF2oLwkrbgIKZxSiGYgR7W0OK9f59LV5Te30I6IcBgc
apqaae/urerrq15d61rf6Dn4NXJ8NL668h2U/10DSbR2hCaXjhYPLw++siKX
paVBWlrAly+F01Pfj1F1ugYa7M/vxRxMBCY7sq+3Cd2s93f1GLUVa0mxnu5O
L54aa2oo896+KWNqomNnYwwO7pGxFg31JQF+2vg4HzQC/12dnetvaiqdmBpY
WpkEoG1vzx8fb62sTO3urE9OjEyNDx/ub/852oEZXlOV5uZqkp7x0cbu5r0H
KuexkOSUIPiE1bWx3r5P33/Ur62OgnWamuj91Fw+PtqzvjzV19m+u7H092jd
we6+y8cHWqqc9JTIlfPobfrOtvzur/mZya6gYfg5r4L/bf1UhtZe2F5fXpjc
254oyIuIDnMqyYsF5VacG9P7o/L4YDQ86E1U6OvqstDYCBsIuYJcBLe1xE5X
Qed7uloA/hNjXSiH/t0AVKLMNdcPGDzanW6ozuj5Vtn/owYA2FCZ2tqYDfqt
uiTu26e8js+FoD8BMkWYyOyUwOKcKKC5vIzgg8N19Gbl7ODYaAco28gwtE9u
bnrQlwZMbJgjJjUANM/XzwU/e+sG+uravhTUlSd2fM4HYoKPzUj0AbQCtLOS
AhMjvb7UFy1N9QH6wISe7K+tTA+hiz9/94swSRxMJPyc5FKi9Fj/ITBPpCWJ
DfT5je6LWL3WMDYSv6bOYnRP0vqNrp6ekIQEGQ4uIi1N7etjBhi8cgmhpzjL
QHlOVY7d9pVBcX5odroX0ISxsbySCqPeHVE1dS4TE019fWlQngA0gCGAjpHx
MihP4EE1NT7QqBcuoOlqoEvx8BAqKiygxdPbxOfJKM79y6Dm4CEVEKMTlmQU
kWJi5Sa+Sn4GjxQhoPgPlwjN6uThI5MQo/XyROns47v7/p7P4aJoKbGaPVYB
DHY0Z5ZhwoLcLdubcrvbiwGDNubXw3zNSjC+5qbq1hY3DG9Lmptq8XIQ0VKc
o6O5hJbRwEdt4DPT2+/fmSQneuTnBZaVRggLE+vri8KwsLj+9KnKjRsCTx4r
c3Lgqiizi4nQUpL/d+UyWg2mtjQzOcp3c3HoYGN8fLAZ5MHWSreOBg8H60Xt
a9xy0lSARFVVZgUFOmFhQhk5WnUNbnVNflV13vhE96Hhuo3N3rX17s0tiNiz
21u917V44UyamqpqarJrqrEqKzNravDIyDBpaPApK3Oqq/M/eXLN09Oyri69
uDhufh504/IvtMk1isrVlSEAJprX/XtxfXWwsT47OyPU28Pq5bPbctJcOJcR
S4t7MDkBqlvb04tLQ5OTvZ8/V+4drP492dvcnptfHD46Wh8Z6VxcgDl8dLC7
MTc99ud4C20Tdjjh5WNi907b4rWavqECHgGSnBZ8cLTQ0Vnf9q26f7D94GB5
d3fx+HhjaKhzcKBzaKBzdmoUXWA52fXztPzoYKinI8RKf56J6rypkVpEoLW3
y1Nfd1MZMSq0rxkT7u0bir92V/Z3Nk5+731rL81O90mKda8uS66tSAXJ96Up
++TvVLCfWWTIq/xsz9AAs2ePlACDOmrCaGWG7fn52Z8A/7mZATCSaIH39Ym9
7ZnWpqLOdrSSdndH5bdPRWMDTZ/rs+srkhqrE1qb0+oqYrNTvYd6akC9pMR6
AS3Gh7uBVkyJ8Q3yere8PD44+LWmKhc8ZmZaaGVJIoAULdyElhINA64syQ3/
3Jg10F3T31U9N/m1r7Pq25fChuq0rFR/iIFpCX6YlNDm6ryer3VH23PrcyMn
fzZH+4DNt+DHtLjA8EBnZVleKREmRpqLDDRnpcQp7uoLGd0XffhA7NFD8SeP
pIzuiTu807N6pf3CVM3ISPb+fUlpWSpgQ2kpGkFeAiU55hcmWqoKHDSkCDcb
flFeSE1FnN5tUQ11Tojz2jr8jx+rv3p1R06OjZb2PDPzZXhEU8KYL7Oz47Gy
XgF7yMKCC4OLiwS0KA3NRU5OYgkpJho6bGJS5CI2ApwoLM4AKpSADKGgu0jH
gktKfR6oELQoMychjPMX0G2GRASIl+vLsoJwD6cn4YGv1RUZGyuiFica7Sxv
BHuadTRn+7tblOdHjg80lOYFpyU4JcU4zI43RgZbuToapyW4tX3KRrdI54Q1
1GUN9DaWl6QkxPotzPYnxHoZG6k4Oz16/kyDnv6MjAyNggKDoiL9jRt8d+6I
vH6tC9EGtBwJEUJHh419ATF5pLs6299chZkY/PK5Pich0gWT6tdSl/riidpj
IwWz5xo2Vrfe296RlKTU1OQEcIHOFBQilZahZ2K+KK/AzMJ8SUyU3NJCx9/f
PDfbJybSTlmB0fCOKCfbhSfGMvcMxMRFiOEAJKQoAZti4hQiwqQKiiwQB3h4
CT44GgcGWr99Y5CS4lNfmz429vl0C+381urP430A0crKUt/f3wsAz6OD2ZrK
zA/2L8pKUypK05OTgupq8oG2YGKc7n/cBUt4eLiKJmpuz22sTe7vLq6eNvmF
KX10sFhRkezibBIZaRUTa/XcTElTSxA5i+QVxqNF2gc+HfyaHxhsnZzq3tiY
Bib6BY71ZH9rYw7M1NwkOKmdhGhnX6/n6oqsZAQIPeUZK/ObL55ogIl49khF
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
iRz4Xrsw3rmxMLwxP7a+AIQ4s7e2XFOcVVmQXpKTUJobX5YXl5MWnJ3iX1EY
Db6vMDsE2DAr2Sc9wbu9OQ9s5qf63Mmxr8NDrT8HP89DoFsYWV+eONiBwDAM
PAhf7UtjoZQoo7gApaYyO8xbXg5sBVmqW7o8cOGePlYAx+f43iAh1iEk8JXz
ByNvD9PTzsiWmqoccLrwcdBcfToqBKzEdQ3uV2bacCbhFYM7Uk8eq4qJUoIz
wsVBU5fJSNAFcG5OIvBWvDwUfLyUoDDZ2PC5uYl5gL+YLwIAgT6oac6AKBUU
JAdjyMSEA4aRiQWfgQkHCxsAiHMRBwEG5BOilFXkkJBhBtyxchJw8ZHTM+Oy
cBBS0V0ioQBCPIePh5w/hzjZmw72VMeG2wMPhvq8NH0graVMf1uLvbkqyvOD
UXSodVz4u6Rol6pi8PURjdVJTXVJdVVxQBYAQyZmLBFRChhycix2NkYFeVG/
tifR29OLI9vLI6sL3ZOjTYO9lRKiZKBFb9/mv39f/NFjqddW123f6RnelxIQ
JGFlx7t0GQFO5OQgiQxy7Gorqa9ISYl1a65J+9GWD4OB6j8VBVZ723t6uuJv
LfVVlLhv6IhnpAUW50WGB9jmpPsW5QTnZvjERTgE+1rGhr+zfnXjraWumakq
fJ2HhpIaysymj+RuXufRUGYUFsAjJkQ0VJkeGIpB5HxgKKGiyHBLlw948Lom
B3rrTZXtmjrH/buSt28Iqquw3tIVgCMHMMJz4/tyJsZKH96joaC5Lh34ESbz
qVJdBckK5Iii5njlX+/4rZWh4tyYh4aqZqY3dTSFq0oTttf6T44nj/aHPjel
RYfbgVp+ZXlTQowRDxcJCf54dDhXlB8fF+1lb2dq8fKutaVRcqzv8mzfztrY
8d4coGNj4ScfG6mX84tnj9TgSJTlmeSl6bQ1eXp+lDTUJL15pa9zXfTyJaS5
IX99baypobi7syU6wjMzyb+uLCk/IzQnJbStsWRlZmBnZfzkcBGwDManrjYB
6OCd7QMRIWoNVSFUwOyu7W6tLsxOHB6szU72z8/0ba2MQARoby7ISg74Vxa7
oykvLtgRqLAiNyo5wgmT4vu5Lqu1AVOeH9tcnT35s31t7ufx9hKQ4N7a4tHe
VnVRZk1JxunNi7iq4kRg5IKs4NK8CAjplUUx4ApBXxVhwjvbSn521w/1Nv3s
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
vdwuQ9nv3jrl5mzs423Oz79jM7EeHCUD0w7ooKenI+jr727ITI2ys7zu4Wg1
N9rz9yuifx9S4fRI51tiadcvQ/0NcRGP9klz7NhEEuDczkRDot5G2i/Dzsm0
kZ2BEL4zJ2SPHuBVOSx074Z2oNc9nMQgb4uYUIfBrudPi+JL82Mhf4+TAguz
onJSQ0pyYysKE4pyotITvOPCnZ8WxS5MtYK7sYEGbJE0Z8dbp0eb71ua0NEQ
0wigsLNvFRGhY2beSKzaw7aJi4uCYf3mKQCEqEH+wCAz7UZ2xq0cTBS7KQkR
hDIiJ+IA0GFyXnmot3ptbenX18mqipT5KfKKZkT58LYfZvhxaqDmKbm90uwA
DTDiJaAbPhYKCNiRMfE+CIYIfZIidMiVEFAB7h34AnulmW9f14Ruqh2XDPa7
b37lTHF+zJeV0eK82P7Oamw/LA6UFyWEBthFhTpWVSS1NOTeu6XFwkzS0ZXn
5t7a0fH018+F1zWlFSWPG2vKEN9ePctEVS/LDX1dmbT259O3TwvvF8d/fn33
7/fKuzcjSH84IxOjbT2dNZ1t1Z9Xp798nCovSX1ZldtQV1hcGJeR5r+yPNTR
VgHNRaCuKE5sayzq76gY6CofH3xuekExIvheeNBtXw9TX3ezgiz/CmJds5jW
1/lFOWFdzcUIfSG+VmQYg30syZdDycGQuEyaEwYLWpoX8TjJu7I4riw/kjxk
Pj3hEUgszA56nOz5ONk9P9OXmNc6xgkYwouWl4QnxDoc3MeocUoIdlRXWwxS
CBcKETQ4J62pLkIMB9CV1TglAnW7eVUFXhSqd+uaKiwoqjrZlII7PE7uq4aC
I7XVxbVOid+4dDzI52ZRbkBKnJONhU5kkJW91bnyJ2G3r6ohn0Kgfdyug8SY
UNu135OrCy0lOQE4TOkQFxLHbloSKxtJQobx4GEBFi6K7XBTHNt30ZK4Beh2
0ZDExFmvXTujdFSIYhMpMvQ+QnSw382wwFsRwXeSYm3x3STFdvJwb+Tm3IJ8
R8dAdIDhQwMuuJOZcQPRzv9aRNWKj3C5e13L1+Majre9r33fUsvJ0VhakoGa
miTAT8vOTsPIuFPtxKHQYHcjA42U2OClmeEfK/Nzo90TA83D3a9/fZr9831h
ZqzN3uYqN8cOWkoSCiM10e1TXoqVn2OrEDflzi2ky0YncLIc7xuH+lnj9Hm5
3MBZC/C8CxtT+zz9VWVGSV5Ue0PJSG9NbWV2UTYxcxFItLypf/2iBp79tjLy
brZtaa5z5e3gaH/9t9UJRJg7188i5W3eQHRf52DbysK0kbDc/FRgEDByc2/D
v8BI//9XgWA4hXlpIHwsdJuYdm/YL8srzEsrwrcbZmB9SjTapTddZPrcnK5B
+C6cPfKsNBG8eD+6XV4U19pQvL5OzTK5/P42A9lysrkiLkhPu5Po4Yb8CB5h
NUH0kYOCQA+OFOEXoZKbbRPou2yi6u58zerOWTtrQ8Nzh/Meh9Q8z6itzoYJ
xLasMN7T9SaoH+h+dt/iLA8HMcxTXpZB84w0IyOpsb7wz6+3jXUVZQVpryqf
tNSWtNYV1ldn1j5NaqhKGRtqW5wbelaWjS0U8Pf3pdmp7umJTqC3/G50sK9u
vXPg6uryWEtj+aeVsZGhuvLShC+fRoMDbRpr8/CPtzYUDvZUAa6l+dYPi21n
tWS9H11CRXpop3vV9JCrg0nTqxwI3IuK5OrypL72cpyyoe5KNKGIh37utxOj
XNCQJse4kW/Wg8GS3HBY0LQ49xflSYCRzB0y1/pCve6woFkpHiipcc4RQVY5
6d4JMY5PyyLjou3276XX0hAFcSdVuQHgBQPZs7oS2IE4QgcBoKa6GMQOuAFD
oAfnCdt511yN8Jzr9wovGiqARwBI7rEGlTxxjA9eFAqYleru4XwxxO+2n/v1
ezfUn5dGr885TNwicbA+j2Do5XK1JC84Ocp2ZriyMMf3aUmEprrEps1Er2lx
aQapPayUu0lUdFDATbsZN3Py0tHQb6Fl2KyiInVSVYJmJ8nf+2aI/x1fjysA
MCrsTnSYRYD3dUG+zZwcJAkxWmZmEhUNcbcRWUlcnBj86+ttNTfRtvZ7ISct
8MQxodCAu25ORp6PTG2sdRzsDffIMENKeLipODhoIIipyeHOThaK+yV+fV4c
621+Pzf4frZvov/1j9XJ5fm+yyan2Bg30u0mxhFA76RFaLHlYdsgxL2dmGWF
ZaOtpX6Y/32Lm1rOdib21ufdH15+TOTfoNfVmSuL3XVVGfmZISO9L9rqi1Pj
vEvz4trry61vGXk+vI0wiArf1/4UDUV8xEP41Z+fp39+nnV1uCkvzb2DgkRL
TRIXYWRm2CgsTLt7vfsQsVAyz3Y0OEi+DPgaXNtkJZiQ14hZB7eRYEH5OanY
GLYAwJNKshQbiJuDT0uS1i/vLAZ4W0KtTM4fAy8o8VGuSbHuWWkBiTEwGG5Z
aUGp8b6lBfEdTeWfl0eJTg6/3679WRrufRUT5nrmpDx+BOIqqyijqMBuaOV6
YYV91ddRjAl/CAEN8L4HvuKjnYL9LQpzw0qfRD1O9YfyWtw6m5rg9W6+PSXe
fb1XwFbyIGg0ofvlmJiZSH2dzxCBW16X1z57UldZ+ORxbO2zrLbXT4ihskke
EMfsjJiczNiSJ2m9nXXAEIbkx9c3S4vDlRVZo0ONK+9Hkf0fp4fV1xbB+cCF
vnqZhQYnwM+6ojgeb15SEP2yMh2n491cy+flbli7h3YGnm5GXm5GIX43TM8f
AmhoOZH1npcmlOZHwnbi4PaGJ231BRDHjsZC4rag+204UmgiGMxJ9QOAcWGO
EEE4UtTz5BhnVHLUdvjP+Ai7nDSvzKRHueneybEP0xPdEmOdKiuiUxKd/zf/
rdJRVijglUuKYPDUSd4L+nKGBnt1NCURCcn9RQEgUiF8KUC7c+Mk+U49+f4g
Hse/ABghgsS9ez15TTWx8sLQ3Ayv62bKcRE21eWxCZH2ZQWhDtb6aBYg0NDB
ruYnHg8vg8rYEEvrm2pONnq2Vjr4RAGBLTS7SUqqYgjmWylhRLdQ02+kZ97O
wkHNykmznZJ06JDQeQNFEYEdft43IkOIqzFg0M/LLDfTPS3REQzy8hB9Qfn4
trNzboMO7txJDLe5cklj62aS+WVt8kR2Ouqyfp7Xne3Pu7sau7uauj+6IipM
TUlJYmPdRkNDLP122eyspsbR7RtJ0aHu2SnhpXkJ35bHPr4dyM8MkxSihdDI
iNNTbiduZ++VYuBkJslJ0ooL7pASofZyvZae6O7rbh4VYhMRdD8v0z8jySMr
1bu9Mb+ntbSxJrs4NxxwwYgijCAAVhantNaVmpvpvKzI+r4ytfZ3+d1s1/v5
rrXfbz6+6214mWNx08BARwk0MVCT+Lh3Ue8k0ewiMdIRuDExbWBj20LMFcC6
cTcdiZEZPFIpHODlYt0MAIV4qaB667ORb5QUZkYM3Eoi3b6mR/Qx+DI1NlgH
vYNC+bjfOn5ECDlOT3Ofs/1l67sGD+0uQRm9H929fV3X/eEtPw+rQG/b6FC3
ED+H52UZ3a3P3kx1fP84+d+3ubX/Ft/Nd4f424rw01BtJ8SXjop0zey01R39
Rw+v21kbh/hbW93VzX3sCww9XK8W5YXHhDs+tLuYnuT188tYoO9dAZ6tspK7
lY/yqKsJS4rtWF9SWYiLjWAQsHc2VoLBxhelVaWPu5sqRnpePiuKRdSqfpbf
2foSoQ/Oc2q8o+pZDrZfP81+WpmYnmivepbV3vJsZrKtriY/Ncl/frbjv1+z
S2+7sI2JcsnPCu1qLWtvKoYgVpUlTg6/XJpvhqagQbZ/oGVjqR7gdSUy2Boe
xlDv0CF5LoAG7nDiwOPjZB+cPmgf0IM7tbqlh5YWDK4PovfKSPBMiXErzg2J
DbNbv/xC9M98kuWfnuAKBsnzmMEcFmT7pSW4Ig8W5gcmJzxcn0hWkrgEeoIH
SRCpEKZU47QAHjEx3E+evgmGDaGPfNWFfJMCjpR8dRRb8h188AgpPKbITs6D
6qrCsKNRIVaD3SUfFlsaa9Lb6rPX1uaxg4ga5H3nhtmJ6BCbqOAHceG2CeFW
qbEPEmOsjxxk5mIn1j6TkKSWP8hFy0gkQXaeXcwclExsuxhYdvEJsdHSb5WS
YgGDCvvYvT2uxkfZQf5g4308TNOTnPw8L4NBfr4tUpK0YJCbdyf1+gpuYBBh
kIaKlBjtOdhVrXpE1PCsgqujMX52BMmQwNvBQRZgELWam2sXdHDLFhLd7s2b
NiDi0S3ND04NNafH+1manzM+e5SFlkRMKMFKXBTi56NAbWFjJEH6fd2vOttd
eORo6mJnBNv/8ml8VVkMymBX+YuKBDjwZ8XR8REOthbnvF2vhfvfryxOqHue
mRDh5mp7LTHC89Pbkc/vRsf76gc7qmdGGhcmW1D62srQAnMybwU7CIBAj4dz
lyAfLfYFeKlpaUmQQqRdqCHoY+fciiIkRM3GQrhBdqZNMJx47anjsgfl+PEO
ovyMH5egZR+QK6PDnO2sTS+bnLx17YzpBSUJEarjRwVCAixzMgIcHhiDQfjG
lHjvR043I4Kc/Tzue7pYPrQ1v33NwOeRlafLnVB/+4Qoj8Kc6IGuFz8+TZHN
6lDvy4d2V9ydb1w0VEEqDPF/AKITY1ydHYzzsn2jw21CAy0e2puEBVkP9T2r
f5V589pphPqjijwnlAVlpWhEBLfAlSEcHZBjhFjXv8he+/dhrLeh/nlR88uy
llelLa+Ka55mrM/TElKUn9rdXos8Dhf659dSSmIQGCRk+s/7/36++fJx4u/v
xcfpIbPTbfh/EQPnZ1umJxtmphrzc8PDAm0h9AAQxriyJP79m7YfnwYMz+33
dL1oY6mpcpSNj4uksJ8F3xP5FL8h3LUA9zY0UEh/8KWZyZ5ONkb62vtqq1Jd
7E2TYpzRwFYURsLnQPKeZAc9LYqKDH4AEvFUYpQTGmRsY8LsYE3DAy1RNxAG
yaOWMlIfxcfYHjvMAS8KC4oMqKMlCkd6Rl2QuD2hLmJ8Yd9FY8WTKvyA7n+X
XEAceQghBBF/ap4SRgY8c1rY/IoS8uMJJW7AqHESD8rAi1rf0UQpzA7wcSNW
gJ0YrH5dnbb238ybyfqcNB98pYc2RpeNjkYH3YkMNL9/V11abDs/D+noUW5p
GXoOri07qIjLoXSMG+gYN21CHdoIb7kRTpWCgnRIkXuvDKODrUFUqDU8PBgM
CzLH9s4NVRlJ6vWpcbfy8+8QENoNdaCiIsYf8fHseDvX5e9h+cjxhuoR4aum
KvfvaeNn93Ax9vW66uF+lZd3GxikpduwezeUBQgzgcHTJw/gzDbXldy7cRZZ
b8cmYgZdJjoSNzuJh2cDwhcXF+mkMl9itG2o/x247rQEZ7R7+J2ryuJqn6fg
jNy9rhEf6RgVbAdH+vJZEs5IdUUCvCjyPuTYwvzcj48TC5NtkwP1c6Mt3z+M
L052TA6+xiMFmSGqh0WQK5UPiQE9Pm5qDtbtKIx0G3k4KXdTkRgZNkAH8Wvg
a4hLMvPwUe6iJnFwbKGnRQMCR7pDXJQBconwiIOPHhQlFvNdW81ICrhion79
0hndMwfhFZUPCx85JIiU1Nfz/OvnMfIS89gSXfL+Lq33sF399x92Pn38MInM
9eJ5TnZmhK+XNdTZxsLE1eGG44PLseFugz0v/v7E+y//+/UGLx/pfxkZ4gAd
DA24f05nH3TQ/sGFIwrc7U2F5UUxbk5XxASp5GVYLpw/pKoisleOEQ2voiL7
3r100tJUairC3Owbetor/vsy21Jb1lBV3Fn/vO7Zk6aXxcXZsVUlqW8m2mcn
hqbHBj4uz/33Y3l+un9+pnduuuvff2+XlwYW5ruGB2vHRurLS5PW/hGDRn98
m/z0eWBisrajo3R5uR92NDrS9VlFak/X8+G+mj8/ZtbWFkwuHHr00NjX45Ku
pigfD4mXn2R+55TeWXnKnSRe7u2XzU6h/iDhnj97UFWZX1Rgi9UdDZx0JxsD
BK6CLN/sdPfsTI/wIIuSwpDivNDCvBCccZjtmFDowj0/97vw9kRszI8oeBwc
FmAV4nc3M+VRWWFoZoqrjobYlYsKp9X41E/xHVdiUz3Oceo0n66e+Dl9ab2z
ktraEnra0pC283ry5GG8KKDMzEThkqki/CqA1deT0dYRO6cneVKNV+uMMLG4
rY4MLC6cXsOrNA/nS3pn5CxvaaurSCZFuVSVJjTVZD8tjHleGtvbVozWozQ/
pLI0PDfj0b2bpyRFKOmoSYy0pOPKQgh0qqqSp0/vuXTp1LlziqonpZWOi8rs
YZHfxyopTicmSgUBcnY08nAx83E3c7bXDw28AUG0vqtOTyzqTUx4IiS0i4uH
ctsOYv3uQ4qc8FpxkS7PS5NWFnutb5+1uHnm9nW1mHDrWzdO3Lx+8pHbVXFx
enrAxbObimYLJzcDTO+GDaRDCpLurvdQjWkoSSeUxCk2khBeeHmJi5DHlLmP
HGM/e1YmOc7B29k0yOfmk2y/8idhdVWpsCtoYLNS/PH711U9rixLQDiqr8mq
rc6ICLb19bhtcUsXcoMzsvZvobOlGMejIP4X5UQgALraX5MSZmCkItFuJ4nw
0O6V5REUoKPaReLkoJQQZ2Vm2kK7m9jfSUkS4Kfh56Pm49vFx0sFTZSV4eDm
3gEHDgMgIcEER41W5cYNnRfV2VCH6YnWS6bqDnaXL5qoKR8W3b+HC1azraUM
lP36vfT338rqx+m370YW3w4Pj7TMzPb29dcPDDaSy9h468LiwMrqxKfP0z++
z3/7Ovv+7VBb89PiJ4kVpSlP8mIC/Wz9PdEe2hflRbc1lnz7OA4el+a6xwde
wXXnZQQjeDa/LsAWEsnCRPR0OqwocPKk9OHDgsrKIkKiu7j5tp4+I6VwmEvh
EB8n5+aursrPq+MNNYVNL8s6G6oKMuJflOUtzQy/nRoc7Gr49nH5w9vZbx+X
5vBnb9PbN4PIfa1NZXk5Efa2F3OzQzPS/GtePJ6Zam6sL/jyabR/4NnYeE19
fW55eWJKku/UeMvvH/Mr74fXfi3++zX379fM9cuqj1PdHR7oGugRE4sJiW92
8zY7e34/EytJQoLB0/Oe5T2DvXtY5WUZiOWepamK8r0j4L4eXQz2Mo+PfFD6
JCAp3i4/xyc/xy8q7EFfV1llWVJt9eOa54/Tk/wiQ5xgCWAMIkPsUAFyMv0y
k92L8gL9va7FRVqrHec9osBocE7KzHS/jpaQxmletVO8ZzSF9A1kLhjK6ehI
qqkJ6OvtgVIj6EEQybPHQPJQtDVFUAyN9p7RFAa5J05ynz0nqaUtCmEFho9c
Lnq5X0EgQvsPa33vhrbVzbNKBwXC/Kyvm540PqcIyW6uzfr3Y2ykv2yg+0mI
/53BnlInO0M9rb06GnsNzx0OCnhw45qGxT1dO1vDexbaFpY69yy1bOz0PT1u
mBgfExemtLFGhNSzv68DCwEdXL+oZSDEv0VUhJKPZ5uAwC6IIAcXheweRj3d
vchHZ7UOrv2a/7I85OZw+ZLR0Ts3TsGL2j3Qs7fRf3DfgJd3B2q1oCDLLurN
nLyMIJGHh4GedsumjSQm+k1MDCTFfTwAf+c20sGDrIGBtyytzySlOGZmuuFD
3ewMp0er58ZfFeUEt9TmgqOUWI+kWM/MlAAf93tQhMKCqI62sufPUm/f1HZ5
eM3f1wqV5FlFotvDS2dOSbm7XMKJe14WV/YkIjnGzUBbkYeVgo6SRENBotyE
6LeRmCCOgxLCR0dLzKfKxLgZW0kJNh5uqgP7+WmoSfiSOIaFmXhcTIKJR4Bq
wyaShZUR2SV+/z4dFeWqdeaAxd3zgvzUosJ0TraX17u5Lv/8Njs7OzA43DY+
2TMw1Nrb3zgw1NLWUdM/2NzSXtU32DA22TE60T440jg81jwx3TE91/1moX9u
tvvNfO+H5dE/v96uC+XbhbnuptrClDgfyCJE1tP1dm5maF5GaElezLeVsR+f
J4lOSn/fka+IOjtdt7e9JC7OiNZDRIzuoCL//oPcahqyCod5kEFk9rLzCezq
6an69nW6uaGssjSzobq0u+nlv28r35ffLs9PzYz0v6oq//fry6+vK19W5398
WYRMjw41JsR6dbRVTI43dXdWFj2JJd8NTIz3Sk70am4uQsnMDCwqivvzawGW
FccDww+LA39+zK2tvbW6qx3ka37R8IDlnZMKB2glZbb7BFy/cuMEMZSVgeTr
a31Gfe/OHcTszVkZ7trqoreuK102VkiMfvDqeUKg93XUwNQkRzCIfJeS4NLe
XDA58hpet/pp6nDfi9aGwrbGIih7eJANPICzg6mv+/XC3ICnJWFJsfCibBAv
5WOshxToNbWEQR9oAoY6uuJg8Ky+rLq6sKmRAnnoLgIgEqKuFnENByKIY9RO
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
tlY6vJwbEAYfuZqDQSgCOwclwpGcPLefv/3sTFdkmNvh/cLap/Z5u95CC+Du
fPGyyWFne8PI4AcH93Ix0xK2U0iYmZGJYvs2Emr41k2k/bLc/u5WiZGPrG+d
S4tzz03zD/GzaKrNqn6WiB8zI8UzwOt2LjEuLNTN4Sro62+vgsNZeTv87+fb
sYGGnraqhelORBub+6Y8XDtQMwECWoPV5ZFfP2Zjwh3VT0roae25aHTEzIjo
gKR6jIc8M4/WabHjhznRxqYne/R2P/3zm7h0MDz4IjPd75a5DjcnBd1uomXe
Be1m2czCtBH7/DxUpcSNv9XhoYaIcDdrq4t6usf2yHKLizBb3TP5/YMY6jsx
2jIy2NDWUD4BLeuqGRtuGhvrhPYNDreOjHWgECTimPE2oDc40jw12wX/OT7V
DhEEidBBPA5gO7vrOntewaaOjLb29NZBGaemu/ELD/TX9fW+Apgz050wq79+
Lnz+NPP717vVD9MZ6eF2ttc9Pay8PSwdbK8UFsQgmsXFuNXWZE+ON3z7MgpP
+Oplpo3NRSVlqaBAx9GRpuV3o19W59b+fUX5vrr4aWl2YXbk++fFwry01MSw
6HDv5Pjggtz4Vy/yEUsHemtAfW9XNRqB7o7n+E/nZ7rnpnv6e+qIa0qrU9+/
vVn79+nTh5m1Px8nRjoM9U9b3TZBW/Tnx8zpE+KQJKu7aob6Mg52mmcNpM3v
nFQ6zrdXngV5MCsrtLe78u1Cx7Oy6NCgO442eqaG8ky0JCnRbTJiu/Q0ZS6Z
Hi0vCU+Mc8xK90qIedjfXZ6d7i8vw8LPRXFCSdTLzRyGp7QwYnK0Jj870Nfz
Rl6mb1V5bGyUrZO9gajQVuWjHCrKHPvlqWFEUWBElZTZwBSaAvUzIqdOCaoq
8xroEitK6GkTc2mSx/xqqoscOcpy9BjrOX1pFE0dUYXDjHjVsePs53RlDQ32
uTgZpyW77pNhUlMWsbcyzE71620t/74y8naauOSeEutS8yxppPdZcW7Qs9LI
6DArHQ0JWYld++QY1tdroNi6kZjlDOl4Nw0xf6yA4HZgCK+idkrM8IKilCSx
iDyiHHTQ1krL7r5mZMjd2Ij71y8dp6MmcXNuoaUhpnXaRUXi46enY9wgvYez
vqnijOYRGqoNmzeQZMRY3J2uW5hr+ntev2t+2svtcrDvPWGenUzUqMY0CFnU
NMTNeo1T+2LD3dLj/WorHwd5WWckeONfaK8vLC+IyUsPykrxz0j0srW60Po6
PzPJ10RfKSPR7/vKxNqPhU/vx97N9S1Md4PEuYmO2HD3Y4cl8LlQoi8fJ5YW
Bz9+GIcYIbOsd8jcqqspd1JFEKcSnt9If+8lkwPndCSMz8upHGVTPyFwVmeP
ro6ckeERX5/bL6pT5maav38dW5hvc7S/hFx50UQN+Y5qJ+naFU2EO7xtYoJf
clLAJTPNo0ckkCLPG6gO9b8GfZ9WJkBfS2N5Z9vz928GGl8VdTQ9hUZMTvZM
TvcCQ2xRCBGc6gRcQAwMgj64UIRBMoA9/bUIidOz/RNTPe2drxqanza3PYcp
nZ7pgTuFPgJ/sIPS0f68s6Oqq/Plm7nBkaHWgb7Gtb8f//39gKfKS1KD/O1g
DIID7VKTfTKSfe/fO5+TEVT3Igsxamys4fd/iy3NFelpIWHBrv7ejs21T0d6
m399XlqfZ3uhram6tDAD22dl2UN9TdMTne8WBn59n1ta7P/4gbj5AoO99nf5
w9JYfW1Je3P12t9PbxdG1ta+/Puz+m5x7HVN2c1rhgkxgf3d9evzC334tDwI
65WZ4nrvlqoWMYCIX/EQo4WVRmDwXUkpWlbmDcWFcZfNTj10vPQ4zTMk8Lbt
fW2jC3JyUrskhLeqnxA5ryevflKsMC/I2/1aTqafj4c5WuZnZbFa6jJUO4jx
I/v2MB/Yy4zE4Wh7obI8pqUhu7ggJC3J7XG6B95NTobmiCKLlPR2yNkFwz0w
otp64hpawhqaome0xLR0pIi1d0/wAz09bUloHwpE8MIFeX39PcBTRYUHcgla
8ZKTp/nwWmyhm6dOCDrZXyCmjXK+0tFUYHT2sIH2QQMthdtXNAsyg56XxH9a
6u5uKWysyWyrz56bfDXQXZQc51CY62diqIhAR0tFEuangL9iYyUh+kmI00hL
Mx47JnT3rp7Tw4snVIWhg3Q0pFs3TgSsx2GHB7phgbceWGg5PNCHPkI9WZk3
waRt2UqSkOY6eERCTJpTR091wwYS9a4NO7eR5KW5bS2MvV2v2VrqXjU95vPo
SqjfXTkJRubdJC4Wiv17eSkpSUbnVWOjH5UXJQR53w/zs22qzp3qr6t7mhnl
b9/RUBIRYJ8W7/PyaUZ1eZqHy61z2ofCgxyGe191tz4bH2wc7K57M9UzP9md
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
Ng8Gb61MraxfXXu0cP/R4tqD6/CoxNeIqzNoEME7y+PLK1NYf/X63o2FsZnp
bgDY11vZ3JgDACfGamsrEgpzwmFEbc2Ue1uKX2/cev9seXa0TUOZH5p+4TxZ
dITbn6HwgoOc9+8lSUlcAkH//fvh5/fX3z6+fv96Y2vowucf3z7a/PXu6cYN
eRmetbszSIJYFuXHBfja+3hZZ6VFIzPiTd6+WaurzR0f7WhvLu9oqbg63Q+0
3zxbQQn9/G7F0lSqrTHRz1uNk3X3+XMkXp5Drq6KTk5KO7YTw70mxl9GYd+5
ncTNTtbWnIRoxsWxj+XCLiF+cgdbOVNDEZyF0YEqVJWq0tiKkqiOlsz+7jwE
K3aW/RqqzCWFgVbmIiGB+knxdm7OCrZWkkODxfV1SWAwKsr60qVjysoX5RQY
RMVP/sl0yurMSmoXldRY5JSYpOQYDYz4tbU5xMSp5OTpIILyCmeVVRj1jbgR
AyWlaYnYqMkK+rCxhMxZqS3vysS0C3kwPsa+pjJaXpIpN91PU4nH0Up5vL9q
8++nzx/MdDRkgr6+9tzinOCFmYYXjyfnZ2qK8/zzMr3BIDkZMSUuN8dRVRV2
SQl6f1/Ty16GCgqc584dZmIiO3CAGDuUg40YaSHAxygvwzcxxiEs0MjHQyMu
ytbbVXPPDhLt6R1MjEfPM5LtP0AMen+G/tDOPSTas0epqPcdO7oDIishdMFI
WyzAy8DSWNTFXvGyu2aAt+HJ46QzlLuPb30Bt2sPKTLSBfEqMyUwPtJ9qLNi
fqI9IcJLSZLby9FofWny15fnb54s37o6tHxjFC7ox/fHXZ3ldrbaPNz027eR
dpBIYPAU1b5zZ4+hnabeSwzmufXcekayX0tT7sP7s69e3KqrSaWhIu7qPLSX
pKnK3daQVpDlj2qsq8EuJnRCWpxaS5VJW53ZxU7JwkTSzkpeQ4VLUZY5MtSa
APDXRkKMs7uzho2FrL62gK2lnJYaz75dpNuLPf98efTswTUIytJ83/rtCUj5
1cn21duj91emxgZr4Zwf3pt+9nhxdrptcb4Pueze6swDyB+kcH3+wf1rjx7C
neLHaw+BG/wnGFydQlu7N33/PvLd1fWHC2jg7uFjot1/dB2oArdnz29DK5fv
jN1fn3308Nra2tTq3Ums312ZQgSeGm8ZGqiGcwZ6yE0NNYkZKd4+HgbpCT7I
gEZakq82bj1ZW3iyNt9Yk6arITA6XPPjG+rMO0cHvePkO5mZadLSon/9+vji
2erD+zeJIX/fv/z+6c33z6/gS//5/vr7l6d62lKohLDcvt5W/j42U+MdePHJ
o5twJmB5dKQhPs53fKwNPMKsQkC/fNx48+zOvdvjD1YncAxbGxIueygjjCvJ
0bFc3OHrq6WtzUNFSRLkpyspijU2lEIdQAKClkmKncIGnGz7EfPZWQ462MjH
Rbl2thQ01mQgWuIfrKm4giwGUwdOIZo5mR6WZsKBfjoRocb6Olz6Ojy1NXF5
uUGVFdGhIebMzPtlZOglpGiAobjUSVkFOnVtdmAFBRQUPSkqSefoqiQlc0ZU
jBJCqaPLrqrGBEcKAKGYYhKnRMSo4T81dTnVtDh4+MnZuY/IK56XkzsnIkgF
+9TSmFSQFfj1/e2rE42eTtoFGSHm+lLu9hpZST5Tw5WvHs++fjJ361pLQbbf
2GDhvTtdQ725lmaiF8/vOnf2LyX589g3n8t62FW+S6fY2ano6Q/CGFBT7aQ/
c5Cflw5d2tlODYBHhVgG+xkiUEeFWoT4G11k3Hv6FOEfjh8n8VyiM7dQ4eA6
deAQafce4mYSHDQayj3SIheRQVLj3AAg9NfBWjYqxBos0FLtpj1F3Ol9jJxk
bq44PFx768ZAaUFMXLg7nBLk7+HyzObfr+E/Xz++s748u7o09Wc8z+Qk/1Mn
9+7aSdraw73QQcjfBUaKc2ePnji27cQx0pmTu6nJSbISzNVlCffXxosLI5UV
OSHWUEYnW/Wywiuwo8M9pVMjVTeuNk8MFyPnhvjrOdqIa6mwqsqzqSnyCPGe
UVfi3lif/P33xtryMOgL9jc10BEMC7KQlTzPxXaM7vQ2WCCI49WJ5pHeqq7m
gqnhhmuTbVhenWqbHmtamOsCiesrE2AQ5WX93tSbV7cfPZhDQINLhCPdWs5u
0Te/vjb39MnixqN5QAQAQROW6+vToBLErT+cf/TkxuNnt7AElRC75ZWJRxvX
792bBIPY7PHj+Y2Na2AWWr8w34M81ddZXF+VlJniCwARhdKS3JPjXfKzAyOD
bKSEL/Bz0D5Ynltfmmury/f1NPzjsYcHq4SFGfn56Hku0UtKcb9+/QA6+OzJ
yu1b029fPP3n26fvnyBhLz69e/zjy4tff78OC3aVkeREy0gNRWEkNPT3u/aW
4tamwvn57rt3xyfGm4lb1l+uVJWnDfTWPXt88+a1gcmRhuWbfTYW0tVl4baW
IgY67BYmfH+GFlRWuEhPSwyb4+tpOjFci+Tu7aVTXx/r76/DL0DGxraPjo4k
J3fe1ETC39scrqOhOh2nsr0pC1aztSnZwlSEmWmnlYVQfW2EnY2Yv69GarI9
8cW6HGNRYUhmhm91VUx0lC0L20FpWXppWTo1DRbOS0egaNr63NLy9IqqzJq6
3OKyDGJSZxAP9WFQleglJKmVVBkhlzLyZ0CrvjEfFFNa/pyqJruyOiuvIAWP
4AmswN9ysB5AAn3zcm58sPzZw6kbc+1TwzUPV8aLs8NfPJy1MZH1cFRPjnFx
s1e9Nln7+P7I53fXPV2UBC8d09ZgY6AjMdKT1JSZzc3FU5LdnRxVL5w/xMl5
cuvBol0nyLejY1/iojuwi+RgrZqZ5BPiZxzoow8AfT21PZxVudiOnqXbiRx9
4gSJjYNaROyCt4+xrCzL6dO7lRV4E+N8UuJ8IYI+bvrBvkamBkKONjKhQSZO
dsosFyFYu2lp9tHRH4SSBQU7fPn8ICM12NFaU0zgvJwYW2Nl1uJMLzFB880x
YpafX28+vL3/4/tTezsdCsod27aT6BnIKE7s2E88T3HsDO1hmpMHaE/t33rY
YT8YRNG4wHAIdpGSgnTwADGHKSszWVqiT2tDVm1FUk974Whf5Vh/xcJs89XJ
2t727OG+gtnx8sGuPFc7TUsj+dG+amK2+u9Pqorjgn0sLI2kDTSFlGXYuFjI
aKlI9payKXEum5tPr07WD3WV/hlivbs5r7Mpt6e1YLinvKEyBeFrY3365nz3
+FDN3eWRtdXxlTvDYBDcoRFqtTS2fGfi/vrVJ48XACC0DMRB/ggA700CqEeP
rj55cp2QQoJEGM5JtAcPZp89vfHmzR10crznvbsTeFu8/+rK6O1bAwtzbYtX
24d6S8sKwkvygjOTibnwUhNcCnP8467YxUTaaijzyEmy9XVULF0fyUm9kpMW
iTLy+cMNfz9DujM7eHlpJCSYVdVE+PiZPn169v7949cvH3z++PzDq1c/v3z8
8PrFxzfPPr9/9s/3N3Ck8TF+16/2wZR2tpW6ORuVFScND9SXlyQTbvPzvc3N
15WVid3dpbdvDldXpGemhT1Ym21ryKspT+5uywv0Nawpj+jrTM/P9nB1lE5K
sNHT5jTQ5ZOTYooOc0yOu6ytJnDZXd/RQcnERMjOTkpElIKZeTcj4zYtLW4l
RbbUBN/e9tK8jPC8zJDWhoz25rTBvnwbS7FLXIfNTPhqqkJ9vFVDg/XSUhzM
TYh5q6GARYVhNdWxCfHO3JeOS0oTc4jLytMLilKJS9Mi2WEJHQSDElA0CRow
qKvHLipGwcd/REefw8ScHyKI8Kihw4GGLWFBZRXPyygwSsoz4EcxsdNa6uwe
rmpR4ZbwooPdhWnxXmDw3bMbfW2FqG8jPaVN1Ylz47VaylwhvkYAR1uN3cyQ
X0H6LFSei/2AqBCltYVoQUGgmioHN9eJs2f2UlJuI66FXqSEljGdO4F2ZB/J
w1kf77z1kKze1oNIppYmYscOk+jP7oAU8vKeIqcgnuGVkDzn5a2Xmx0KV29n
qZoS7+Nso6okw+xko+DjoYVdVZK/EBxkXlQUTQjlIdJJmr1gUEKSLSraQ0Nd
uLujlLjX8d9Xb57cRvr79Gatq72srjqro73UyFCRhvbgjp2kAwdJh4+QTlDs
pKLcRXN6/zmG40DsJOVuqhPb9+4inaImxkE6f3afkiwb49ndZ2j/4uI85u6m
AYm/f3d0ZrxxpL/65nzv5FB9b1vhQGdJT2teS13KaH/xaF9RQWbAjbluYsrO
v18XZkZqKQm62Gq52mlrKvGK8dOpyXOa6ot2tWRlp3pXFkeA3CAfw5oSYso8
RO/e1oLGqlQw29FIXPoAg811GVWl8UO95dfm2gf7K8ZH6+4sDS8u9N+5PQ5H
CvrgQh9v/E/+wCDsKLwoMASD8JaErj2YfQA2H14jvqq4P0Mo44NZqN6zZ9cB
3aMHEL6ppZv9eP+5GQh6dU9bTnNtckNVHPH8eIpHepJLbKRFTIRlaoLTZU8N
cWHa3o4C6HJ3a2lyTNDt61O/f75GLuBmO8R/6YS6Gqe09EUtLRE1dVFlFRHi
SaV/3v/z8/3vX5+/vv/46c2bz+9eQw3fv3qy+fvLiycrkWEeWxNtfwBcUeGu
xQWxtVXpwQF2aSkB4+O189dbY2Ndr15t//DubnlJ4vxcd193xcRQw4fXt2Hg
XR1VosMss1JdYyJNB3vTszNd4SFzs3zurw7/9/Px90/3gfC3j3cfb0xkZnqG
hhohnYmIUDEx7ZCXZ9LXEwr0sawpS+luLUZ9gw5WlERMjpW7OsmDQWnJU4nx
Vl4eit6eysGBOjparEb6fGCwqjK2supKcoo7F88xPoETYBCGE6J2SeC4sPhJ
6KC47FkxGTpJeUY9I345xbPiElQCwsek5WiQBE0tBEAlMMSWsornQB8YlFO5
IKN0XljyjIDIKeggHQ0pOsKqqjwSHi/Y1wS9JSbMgRiqPTXw2f3px/cmJgbL
b8y1VBRGDHTmpiW6NtfFWZkKSwhT6yJOntsmI0mbEGujqcklwE/Nzka2awdx
qyREcPcuEs3pgzwcDFQndpMdIHm7Gm/d7mIBBiGFMRHWFsbCFMe3xnSiIHFw
nKA/d9DFTScxyVVPl9/NUTMzxd/Pw9jHzVBPXUBHjdvJVt7bTc3ZQd7OWgal
zNRUFu/PyXXm6HHSiZM76RmPNjTmfv2y8e0rMUTzH8+5dmcKy96uSkZ6MgBL
3MOznwDwNN0+Kmg0xfajWwMUg8RzDGQMdEeQLvftJtHTHZASZcIOJFxxRazz
8tJKSnK5Otcwf60FGgGTMzfZigala2/I7WzKb67JBDht9Rl5aQG6qgKb/70F
gJv/vFteGCnKumJrqnKR/ggzw2E3e42Z0TqUuLfP5+cmaqxMJFLinWvLieG8
qguis5N9S3LCKgqiirNDq0tia8viYQXLi6KbalPR7WuqEnu7i+4s9YNEBKW5
2e6lW6Ord6eBIbwohG/p1jBEkMiD69OgDwyurk5A6VZWxgDdH0F8+nThycY8
oIPw3brRdx86uDwMX3d9tnVqtHawt6i9Mb2+Mj4n1bs4N6A0B6nBOD3RMSxQ
199b09VBTkXxwvhI6dPHc0EBNknxgUDs3x/vXZ2Mz9PvUlNkkpGkt7aSMTeX
dXTUtLBU1dCW+vnP2w8fnrx7s/Hx3fPvHz++ef7k3++fN3//fPEEGvf19fN7
4SFu+TlX6msyG+uyhwdrUDkfrs+lJgU42Kk7Oau5uqmHR9j095e+enGjrSU3
JclvbqYdBTAyxD42ysHLTTMv0ycxxiYqzCgrzTkmwtzLXa25PgnpOzHGDV7l
2jR87PN//4VJ3vjyZdHcXFhXl4uL64igILWNtbyPh8nseGtfJzFcf2dr1kBP
/vWrDSgy/JfIVJUZszJc3FzknOxl4mOsHe2k4VEL8kNqaxJqauMys3w4uI6y
cRxUVD6vqs6spcNBYCVPL6NAWFA5JSY5pYtQN01NNiivrNwZLV3iASVJmdPI
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
lGLhPLZjD0EQPm7PPhIP76mQMHt3T0M2Dkpa2r3bt5N27CAJCTKamihIS3Fe
YCSnOL4du7FnN2nPXmJ6GkgnwuAFZnJhUUYzMxmY2/Awy6hIm6K8IBz2vAz/
0vyw7pbcsf6q3o6S/s7yzpaC4b6q6bEmtJ7Woq7mvKVr3cPdZaO9ZWN95WCw
sy5joC0XlcpEVxj+OTPZOynGJT7KEWoeG2FvZyEX5GMcEWSJJTLXys2e7x+X
N/9++Os7wtHTpw9GJ4dLe9szm2vjwV16omtmsntUiLm/lw6Wof5GLnYKiVfs
YQnaG4ghl5EcwWBfW/5ARyHaUFcxdmO0r3ywq7ivvaAfr/SWjg9VIeVNj9XN
jTfgVyO9ZdenW+7e7L99vXt6tBryV1cRh1aUE4iGXp0U4xTiRwx0gPPrYq+o
r8nr4ag1NdzQ1VRYnp/w6+sLANjfXiHEQyfCS2tuKOpgLa0sdw5OxlCb19xA
BF4Uf2VhIm5vrSAsSO9opw0d/PTu8fLizPhABxjs76idGGy7vTA6O97+8fXd
pYV+Hw+j96+WXjyeX745UFEcOz3WsLTQ++zRfEKcZ1iYfVKSF5bu7vrNjTlP
H1//9Q8x5gb0fWGOKGUKUufNDIX/jF/dUB0Lx2KkLZKd6gPnkBrvikoCp5pw
xRYMlhUGFOf5N9TGoM7UVl1JjnVurE0oKQgryY9A0MjL8svP9m9pTFq4Vg+/
ynRuG8QrI9XN11vLxlLKylzC0lTC2V6prDSqpDiivS0jOtrm/Pnd0tJnIYLK
ykwmJgISEqexhBSKi9MAQxGR00pKzEb6fOiookLUWuqsEDtF+bM6Wiwaakwi
Qsc93RVCg3UBID6IG7lSjlFU6JSaMqsgL1V4sHlslB18dUtdUnyUPeTe0UrO
00kN9MmK0cMgtdYlZad4VRSF5mV6TwwXd7eloTnZy+GD9PQucXIehqODFz19
ZjvZcdJRYlaynbCj3DxnWVmo9xITAO1zc9R0sJIzNRBCmQXCl91VXezljx8l
rsmwXDzKw3Nq737kQcvK8gQbc0UwiJ0Bg4XZPjlpbroaLBrKF7HbUHkzC3FV
NS4WDvLDx0hHTpAusJ4A+Dy8Z+jPHcZH7ztATHAPf8vAcEhQkEFVld/b27St
JX90uK60OC4tOdDP1+YSz9mT1Lvo6Q+amsoiv6DeJiW6pyQTrbI0MiXBtaok
upgY6S6xJDeysSYDARDLrlb07cob13pgBXvbCm/Mdgx0FHc1ZaMNtOaPdpWA
wYrCCHdHdSCMVpIX+ud94Dz//IgqDZ8Pww+VDPY1gVDmZ/pBB1dudvz7bWXz
96O/v9x5sTGxONcw0JXT3pgMccQBz071zErxAInwhzFh1ggI5fmRuan+ILGh
IhFq2N2c09ua11KbBtUGg71t+S316fVVSVj2dhQQk7O3ZLU3ZLYT0yjk9XUQ
V3ERM3PT/ZCeUCLAYEaSV+IVRzcHNTcHFUtjcT0NPrhNkNvRmPP84Twi7f07
k+b6ciqy3PycpyyNpJVlL+pp8vwZJNPVTgk6CGFydVCytZRxc1KXlWYN8LX+
c/Pn1HB3Z1PV3FTf5GjntZmBmwsjg321zx4v3roxEBps++zJPASuv7ekIC9s
aKCyqCCqtjotIsyptjb9w4fVe/cmAwNtmupzBnqryooT2lsLivOiQeKvHw/V
lDia6hIzUj2cHeS93TQQBqWEGBCoUaPQUeEcctM90XOyU1EMXatLwzqak4n5
jErC6yqi6ypi6qsTCnNC87ICqsqiSgtDqyuiJsdKzU2EzzP8parEFB5i4ndZ
OyvdK+6KHcKgtbkU8mB1VVxzUwoYZGE5gDyIJAj5U1NjFhVF/+cmgqEELRiU
kqKHLdTW4LK2EAeGinIMAFBJgV5bkxk6SDxyKHmS+cJ2PR12aQkaLXV2DVV2
Rzt5Pe1L8jKM+Di46NhIm8wUDxS096+u9XVkVZWEN9XEebmo5aR5VZdGoA+g
RCPHzU1W9nWmlxb4AwoJ0ZP29tIiIif3HySeFqSh3Xby9PaTp3ceIcb+3a2g
yHvu3OE9u4jRZa3NZaCwOHdbo0td1FZjd3VQYGM+ACNKe3oHLe1u4GNnp1Fa
HJOW6BMb7gg1yUh0V5I5R3aAdJFhm4ezsqYam4HuJRk5RkUlttN0uyCCx6m3
7dpLzLnGzEZ1nGLbwUOkA4dIYBnKCCmkhM+k2cHKekxHm9/fz7iuNvHB+gTx
FOp/L5du9pcURWmo8Wpp8iKkX4mwSU10S453KcgKTI51BX3EbK0N2eUFV4py
I7pa8/u7SqZG6/vai9CaqtN6WguwDTHyYV16RUEUfPtIb3FjVcJgV4GXiwbi
FVpVCTFfDySmoij8f5krLxgtJtwmPdEd9EUEmROzMSZ5pCe4oaHczYxWfnx1
ffPn+t+fl+/e7GquSUBabKyKqy2Lriu/UlkUnhjtEHTZKCrYKiLQItjHODnG
pa48Fp+LwA5qaspiwBdYa6hJrCyNri6PaapLxisDXXm97bnYnz91AA2VAdxB
rFETEq84B102xdGG8BlqCWckXl67PZKZ5Aeot57YfVmcE8ZEt4+XnVJfQ9BY
R9TeUh593sJIDBXVUJvf2kTCTF8YRhTdBt0VOigqfM7L3QQMPn6wNNLb2lZf
PtzfPD3ReWtxdHV5anaq/dmTheXbQ14ehlMT9QvzHWurozVViQV5EYX5kWBz
aqJ566n8D1+/bESEu22NOPrh66dH+MPC7Ki+ztKh3vJAH1NwBPNWVx1TXBCE
YuJqq4YUsHVYDDOS3MBaRVFwZXEI0mJVSShWSvICYezRn+srYlAVC7JDGmuT
OlszEDoqSsPHhosgKIz0JPjDrHQPCBno8PfRs7eWc3VUWbrVXV+XVFcbHx5u
AS8qJnZaSIhCWJgSaqivz6OgcA6m1NCQX0WF2cBAAAzqaHKrKrGAwa3L+BJi
IhTiopTmpnwg0cpC6LKXiowkLayvrhaXtMRZHy9tXS24VrawYNOczMv+3rqh
Acb2VjKlBcHIICjCPW0ZfybI7u/MJobgTnHT0+SC0AteOsbJso+X+wgb8x5x
8VPu7sqSkmeI0UEPksiIYWF2HgaPZ/ZpaAgdJyPt20M6R7fL210L/gEMQgTN
jQg1tDGXpDtNPHuLbaBcjOePxcZ6pqUExEa6FGQGo0RLCZ/RVefCblgaCwvw
HD9NTeJiPyIodMrQSJScinSC+i+684fJyIlZCHfuIWGFipqYzPcE5TbsycGD
JH6BU5JSjMIiNLy8J9jYDvHzU4qL0TnYKDZWJW+sjf34tPLr+/qPL8tjAyVR
YVaQAH8vPXRIdEtssDU3QXpFITxMSnNdRltj9nBfBeSvtiwRYHYT41wVTg5V
/xkyvbslq7MpA6l5rL/UxU6pqSYBDdB1tWR0NKU1VsdnJnv2tGVVl0bBYGck
eZQVhHY2p2OJmgzDX5IblHTFERoX6meMLgQem6rjYf43/76/+e/DF48m7y31
TA0TNwAsL3bMjddODVd2NKbnpfvFRdgnRDlmJXsXZsFP+qUleKD9uaCKdA/H
hSIPe4ZP6W7NxC5tXfaMB4PYBjwCQ39PowAv45gwBwNNIQTAkd6KhZlOZxvN
p8Qcba8RHkX5aS4y7AFxagqsKKHOtopmBmKw1loq3ADW2lTayljcxVYxyNcA
BdzPW8/HU09BjiM4wO7vb6/u3Jxub6ioLMpauT11b2X2zq2JmwtD83Pdjx9d
e7A+ZW2p5O9rWlocXV+blpEWsLY6vvnf84/vV5eXRu+tzrx4vry5+amrvaKv
u+b9m/UfX59hOTLYsL46PdhfpaUh6OKsHh/nVFV5Bb6lKCcYJw5HA9XJzlza
0ljU1V7R21UdCfrqZHVuimdJtn9NcXhhhk9Rpi9qGmwJImFzfUpLQ3JbU2pT
fcLUeBmgYL24W0n+HMIjIqGc9DkzYxE9LV4zI9HWloyMdJ+a6tioKOuzZ7fJ
yNCrql5UUjovJ0dvZyeF/o9UaGMjBQYNDQU1iRGcOCCFiGlqysx/hnLSVL/o
6iyLJiJErqZ8wdiAH4HR1EgYOuvmrAIRlBSjiQwzqyoPR86F1cxKdR8bLHR3
VIwONYOUO9vKxoRb9LSlFeX4zk9XpyY4tTXGe7ooCfAQXwVeZNpmqM9lairo
4qIgKEh57vyuI1tjhFJR/cXOTiEtzcJ4bi96vsAlSnsbWVUFZiggKDbR51eR
vygleoaKnMR88RA/72kaml3kJ7aZmMgND9YgoUuLMJ6j2Y1s9fzhxKN7g8O9
+RbGoukp7iUFIe4e2khw1DTbweCuA6QDR/46z3way937kUP/oj69j/bMAYgy
FFBY5IyoOK2QCDWqFnw7caFYiUmA54SyzAULQ1FTPSHoy+2F9s1fjxDK3jy9
OjVShT5MXE4JsYMQV5fEN1Sm1JUn/JmnoLoklrhEszWoWkdj1kBnEZJdQ1XC
SF8JlKirObO/I6+3LQfBqrEmDranvSmlqzU9Jd45O80LK70dWbUV0a0NSflZ
vtVlkW2NyQgyBVn+VcURLbXJ9RVxYCon1acoOwhYudgqX3bVhsy1N6QtL3Z9
e397878nPz+tbNwbvTZZO9CJCpAzP1V3fboe7gsZAQjnZfjGRdqFBZgi0SfF
OUPW05M9stK8r4RZZyS7F+cFomEbVAOk1FB/s5hwOwcrhdQ4TxdbNXEBhmAf
C1SY1rrs8vw44v72v58jC+/+iyQjRq+uxPrHt+ioc+AsmOgJwW+72qk7WKq4
2WvYW8jBiyIPonQb6ws52SmrKPFciXT/fy/a3VIzN91z4/rwtdkeMLjx4NrX
z/c/f1yzNFfIyghKT/UtL43LywlbmO8ihuj/+WRmsm3t3tX3bx9+/fg0Pzt+
sLfxv7/fvXq2+uDewuxUNzTx2+eHM1OtaSk+6mrcdraKBfkhLQ2pHk4aqEI4
hqiHRdkBHo6qCFPaKpxBPvr2ZpKVBSFpsU5JUXbVRWE46YXZQflZwXVV8Yge
3e1ZA715s1OVyIPwogqy9GHBxlg3MRRycVQSFTytpsRWWhKZnxc8OVGVnx/w
57sJA4NLf57JRRj8o4mmpsK6ujwqKqx6enxa6pySYmfkpOlVlS6aGPLpaLID
PfhPDrY92hrEQNyRYRbgDknTxoL47gMKyMtN5u6inJ/j4+2mBqupqcLaVBsL
KW9rSMAyJ80jKsQUgm5rLl5WEFhTHjE9VoK06+Yoj2iJdzbQ4yTGHDa4ZGzM
b2sre5H5wFEyEi3tThGRc4KCZ5SV2IODTS5xHUNhAXpOtrI4odBBK1NxGBjG
s7tPUpP27yWG16ag2m5oKO3hZsjKRObrbqSrxo/UU10SjSMJGxx42eDect+3
T8uLNzoSEjxO0u5AHjxxcueBI9v2H95OdmLfSdqjVCcPUp7c89c24tIQjCgr
22EeXnJxScI5CAodV9e4oKzIoKHEbKEvoC53UUnyHD/XcUGeE7pq3IVZ/j8+
ovA+J65b/nq8NN+VlewbEWj7RyMA2lB3SVlBOOwZ8tRwT2ldRRzOY0dTRlNN
Erxfc00SEdMKwlvrUgBCR3NqfVUMKBvqza8oDkPnB3Qgrq7yCvAsyg2AzQCk
I/2FDUgZNcSUW3+mfC3IDMhI9MxOuUwMNlsYgR4V4GXgbKMU5m+Wm+YLu/v1
3RLKBfTx9ZOZG3NNUMbulgzwONJbCMcLvkBceKBZSIAJGgJ+dvrlrTk+nKNC
LaLDLGMjbLF7MNtwobCUTjaIcoqqchwFmaFbE7clttXnbP58tfnf+zA/u9Mn
/tJV5zXQJmZOV1e6gOZgLeloI6OlwmljJgMANRT5XO00LQzFjXUE9LUuweRY
mIhDB9VUeIk8+Pvzy6er81NDsKN3l+fmrw3MX+u7c3v893+vbt4caG3NDwiw
XF0dg9o+fbpw9+748HBtTXX64kJ/S3Phg7X5zX8/fH7/ZKCncXq8ByuvX64/
fXzn6uzAf7/evnxx58vnB9++PVxaGigqijQ3lZGTvOhgrWxmKImThVZdegUn
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
JWoLMPRwUoM5h/Y52yojGNqYyjnbqCIAQighmib6gnKSZ8FgsK9OfJQtIiEi
Bj/XiTOnSKxMR86c3JmfE0VYzX8/fn335NmD22/evX77/s2v3/89ffp0E2f3
3bsP796/e/vy29cPf//8tPH4HuTv7buX//7369v3/2PqLKCi+P6wvwYpJQZi
gdLd3blLd3d3t3R3d3d3p3SZgAHYgYAgggjyAxX3/Q783/e8nnvmzM6uMMzc
z/d5ntmZe3+/f/92+zuYn7X/fr0vLY6pKIvn5b7Bz3vL0V5LSYFXT1e6taUo
OydqerJ3DRmOe//37+3jP9vOjiaw5b9fGzNT/e2tlVUVeUf/ff/+DfrMwe7O
yte119tbH2enB37++NLbXdfXX//r4MvO9tvTEYx3tl//2v+49HL07+/VibGG
/NyQp0/aP7wZbW9OM9ITDgowzMz0evfufmlpqLOzooICAz//ZXVNDuBOVPwG
WolRVJIKo8wiKHqDV5BCz0RERIqKk/eSPIZBSOS6kgqrgAAFKyuRmhoHtOgI
K5DIsCCzztaMrpaMjqY0Nwe1xCiX/KywiGCHscH6508Hjv9b3d1aXv3w5MuH
R++Xp8eG6p5OIyML1ZWl1pQndzUVQigrSA+bm+mKD3d9+2LszfPRT68moThD
ThkbqGytS4ewE+xrBvHH100/O83/0UyTpgZPWVmYvBwDIyO+ggITMv6tibiw
yE1FJXZWVnJO7uvEpCgdfZlv23A8d14uT2H/bR/92pgd70qJ8x/tq0eehMVu
Yf+BkVjTVRO8RYmipyPAKLAam0nLodmuXj9HcgmJgTgXUIRkZ0mv4JFdxiG+
eJaI7MzV6xdYOW5zcN+5cZv4MgUuPdNVPkE6fiH6G1T4IJR4hChcQmRGeGZm
fAV5Ouh1NWVRYKRfPO1aeNT6YKJ27mFDQ22Un7dW4D1TCTFaJXl2dWUuIz1R
6IF66ryWxuK66twgB/o6/MjkAvr8IOUYRQY44JlJPsAReM7HUy33vExFeG+Z
6ErZmmH0NEV11AUDvI0TY1yrSmPrapLBITTWpLQ2ZAGhwCMwW1MSD6w1lqV0
1ecOtpX0NoFHzYdQPDHYMNxbNQvlaLBhfKB+oKP88WTn5FAjSN5gZ0V/exms
j/bVjvXXwfr97ir4QGcjGNpK0OKG6tTBnpL6qiRYIr+xNglOiqjgDXDRZsZi
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
BfJ8x+8vk5NN/f2VeXlhi8vjP36+npxuGRiqqm/MTEjw/PRhFtrJNMdfE+K8
IF2mJvsnxHmAqFkYy3e3FdmYK1oZKzhaqbLQXnz7cvTD68m6yuSnDzpD71nX
ViR9XXmyt70MFIA+djTnAoxgVr+tzQ/3V8ZFugC/cWEOxdkhgB78/Pb6jKfT
rZ1N2T6ueuBs1z/NAIOQ3y1NpZzsFKFZWyqYmym5uRoH+tvxct2ODHdefAEJ
enPz69y3jfk3i8NervpQBN6+HP/vxzvsEeT3DSggTo6qDDS4spI0WqqcEsLX
tVTZxQSvmRkK83KRgRVXVGQWEb0lLceIUeEgvojwBQDiEZ67QIJHcpGQiBQX
GslFfIARAARrCpDCEtFKkrMXSM+cOYNiZKIwNJTVNxCF/mZjKeFgLQ3NykRC
QZre2VbZ1V5ZQZbeylzCxVEBTCb8OrA9ABcBPjK9lKQolaO1oo+bTl1F3Eh/
8cxEzevF/vGxyrra+Ng4Bwi/Hk4a08O11SWxACAIwemjeSryHAAgOTFKTJCa
i/XyRVLkURGqW+fJyVD0dwj0NIUtjWRV0ZzJ0e49Lfm1RXETfVWddTmj3ZXA
4GBnGaDU2ZTf3pgPefD0a47BrvJHk+0PJ9qAQdgCy8qieOB0qLsC6IPtgCcw
ONxbBScOoBu/Xw309XcVdbflLTzuMtGXvHv7XHN9CpzEf0efPF300hJ9bC2U
An1NPV01jPSFdDX5wPCra/CycpDbOajx8N0gJkVdv3mWk+sy+AfI43B2HGzR
UeHIqOn+XjrhQaZhgSYQIWMjrAFGdyeluEirYH99UNXIENODX7u7P7a2N7/9
t7d/8OPnFgTDw4Pl+UfYfwfd7dXGBoqHBxvlpdlY7OHr5aW1L6uH+//t7fzc
/7G7u72J/fvrz9H3/w7Wtr4tfV2b+/P7/eHhMhcXsaeXspOzrK4em5o6o5jI
FRH+y0y05zmYCW9cRbk4KkEVhcLCwULGynyRnfWKqbFcYrx3SVHs+EjT19Vn
PZ1lx7/Xwa9ubbze+vp29dPi87nploby8fu9L+Znll88gpqAPQIedzc+LxVk
xTybG/658xZiKbSYSPdiCGLLyOiRR4dfdnZezUx3fPv2Eog7HUDy7dvp5cUx
SHbdrcWvX45FBDlufJlH8P+3if2z0ddZmpkcKCZIq6YgAKEv0MvS28WwMCfs
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
++HD893dL//9+vpr/8v62uLq54X93ff7O68grmaneSbGWGenORbleIMLrS6I
ayxL6WnM72zMa6hIbavLbq5Oa6lJh1aSE1qUHZKd4t1an5oQaZeX4R0XYZmX
4V5WcC890SknzT3E3xDMJNTMoABDtCxyWO7cRimiadnZCTnZ8VlZ8Xl5L0OA
srdT4OO9ysRICC8lxW4DgLJSd60tJL1cVaHaJMXaleT7pcTZVhYHQzgFHRzt
KawqCI0PtYagWlEYmpvulZrgXJx3D4oVyHdTbXxKojM4h8xUz5zUexHBDj2t
RZDZ97+/Xv/89PfeR+yf9ZdPByGiYv99724tzksL7W0vTYz07O8s/3e0ur/z
BnmoZPddR1PB3vc3B3sfP71/MjzYUJQf9+7tw3/H31Y+z588hrnd11upqsxD
S4MnK0MnKXFHWvquti6PghKjrj4PJD5ZNJWCCiOQKKdEp6DGBEtlTXZ9YxGM
MgtagVHPgP90PilOTiJNTXYMhlZdnR3AVNXk4hem5BOkFBKnvn2XAAcPRUpO
AAIHtpOUDJ/y5iUKShJEHC/iAHqQFi9eISC7jE9Edv48PoqEDIfy2qVzKBQN
9UVzI7ShtjDyNK4mu4kOp5URv4kOl62JqK2JuIsd2tJY1MUemXXU0kTC3FDc
3FgKBIsQHwXu8cplRAcdHbWNjGR0dYTU1bhAB5UV6A10OMSFr4QGGHS2pMGh
zknzLisIKSsIS4p2DfA2voCLTHwDBpiR/iLueQgUZ8G9CwvewT2L8nTVgH6b
n+lXVxHT3pCSFO1Qlh/cXJPUXp9RmBXs6aRroC3p5qCHXFU+eXwAQhwkEagJ
ECTlpOjVFTllxGj4Oa+CPwzxN+1tzx3tr5geqXs02XxyXbRtahhEsLumLKW5
LmtiuKa1McXRDmNmLKKtwSkheis0yARMkYuDqoO18nB/+f7WUmair4TAXRtT
BQDQ3UkHmqeLHvCbnuDDwXixty0/Pd4zPda1tjgqK8EDJKYkL6S+IhEZXK44
pgsZ67iovDA8NswhJsw2xM8c6s/U1Az8Gxoa+Hd8iMXu19RmZ+WEqajx5RUG
sXOR37iNsrBSOHMOlZEdkV+YXFCQgkwSurJ8/Pvb2HDz5w+P554OLMyffKeG
3T46XDs6WLE0V2prSi8pDAK7W1kSBKa0sjiyNA8ZqKeyKDY3LbihMu30Zob2
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
gtwgU5L9/lpSFMnHT8EvSGFoLCIrS8vGdkFdnZODg1ROmsbXSzs63Do9+X8z
cUNfqitP6mkp7G0taq3NOumNGd0tWU9nGl3tFc0NRR2t5e0sZPQ0eHRUufU1
+Pw99BYedIz0Vg12ln1Ymvy28jQuzCEhwkla9C5I56c3Y/qaghqKPBCiwYHn
Z4UM91c/me0CyzrWX/d4shME9PmjgfeLU18/zr1aGJ2b6YGND8bagMq/v4/a
WhvHRvv//fv57v3jyupkXoHrHNyXlNU5pOXpLl5GsbJfBh309LJISQ2dnuw9
/m8Di4x1v7W4MIj9t7q3uzw319vYmH2HmqioMP7v0VdfL/Os1ICEGKfiPP+y
woDywsDW+vjWehA45A8E29zdnFNfntBQkVxXlniykgiSBABCg/5fXQJZDBiM
y0sPKc5BKhXIIvh2WIE0B2CCm22uARxigVMoZaeTg3Q2p8NKS11SbXl0aIBZ
RpInaCioZ/2JsILHgPQNDIIOttSk1yNHPh9CHPx2YLAkJ7SmJBYYBAUEXTv9
Eqq9AXYJ4I2AAlJTFgENMETmCy4Ja6qJA2XvbE5NinYY6s4HYCODzEE6S/OC
gE0AEKpBdqoXhA5/b72r5Ch+7isQhQT4r8nJ0QkJUaLRdMAR2Ei0Aq2mNsep
AgJuwBr4UlhXUmKSkbkDPMKWEzfFfjJoKjd8BuTP1FxMU5dHVPwGCKKOHjdE
QtBBNg5CYeFrvLzkUpJ3RUVuUd84JyVKqyTPeY3iHBHZGYKLZy9RXkBGNbyI
g/B4GR9WcC+cvXqDnOL6JYS7k9tHT26nwTlzkhDJL52TkmQV5KeSErmjqfx/
eDoL4LiRxOsr6MR27JiZmZkxZmZmZmamMY89xjEzM0MSO4mTOMycDeMy3N7t
7d7u3cbfk+erf1WXSiPLtkbqX7/3pFa3qpuDvJ+HeligLgD09VCJizwVG3Uq
wFc3IsLc21tjf1Bls6qqyI2N9m++ufbHH88qKiI8PDTj4uy8vLTxBWGhsSQf
nehzU0qCpsZKkR2Q6NOTXGzMpXU0uFUV2e2tlAtzQhqpWee2xvYfMZBz7X36
cOvDh5urq91lZTGNtPTqqtja2rjMNPei/IDdC8Pjg6Q1OrcxiLqRmxo00lOD
DL639/XfX96mpLoJixD6egJ+fvoWp6SsrWRxCfKz/UoKQpFDYY06yWnjkEHI
+sAYyhs54vxm/9p8y+65YQAIBQwLMIwJswCDvm7abvYq0SEWNy5NLY231JUk
fPnX29sX51Nj3eoq4vw9DTaWOt6+3ImLInvWWVsqx8d6DPTV0FtLd87N3Li8
DPl7fHsLOnjtwsKTO9uvHl8Gfdhy9+o6Np5bH9vb+29vD3139+xvv32ztj68
vjmorsUrJcsEL2rjoMDFS+gZiMXEeVhYqg2PtD57enW4l9pQmbky3z01Sh0e
qkyId5aQYNLWFhUTZf72myfQQW8Ps+ryxJEBSntTakdL6tRIxdxENRg8t9Gz
udSBSIXWZnuNfOUEXx8iyJgsAG4QnnBhsnGwi4KoONpX195YQN7UHWqELA51
Q2UgWNTmuiysA8blGTrO/NI0OY04HOn6In1rvRvoTQ7XUKsS+zuL94NnM9Ll
+c2hi2fHr16YgaoCQ0Yv39XZjsHOir72YthRMEhOFzJQCVeJw0AZ6S0HiQiD
yIZAbHKYAiM60lcCQcRyYaoey8Huwo2lVuREFNCKnREb6ypiejvyinL9ocuj
A2WUsnA1ZRYLM/HQIFIIUKBoNjaSoA8eMjbeytVdGaABMWwHbthh/2GEAXBD
jQWP2I4KjCXjpV3yeYS3pk+AnqW1JHgEgwDQ01vd2lYSv25sLCgnewxSqKnC
AymUEj0mLHyUGZGQjeAWPsHGy3QA/pPtIPPJw1ghDhEcvCe4eE8cOkocOEwq
I+OV3pOcR1hYCH6+I2amitqaQqaGYu5Oqh5OitZmIm6Osii2lqLREWa+XuQB
gyw4vfBwExw5GgFraynAmJzsCC+NRiMuzgY6ju34qbm5qIuLooEBD8L7zEQ5
GOyhZwLDgmxyPmUPFw3rU7KKMieQ/gz0xOtr0zfWBj+8u7X3Nzl113/+8+bx
47MJiS79fSWlJWGxUdaIdVd2RtDk9rTnwfkjUIz311IKYyoKY3YujP7v7zd7
e58+f33NyFCYh5uQlWEyNBCCFclO94kKs85I8WRYI7TSk0N1qIeoEmiNoQ5o
h+fG625dmcxIckmIsvJ2VYsMNoMXjQwyP2UoCjt67/rC7FD9eE/13t/f3bw0
CwaplQmwoNDBJw82cjJ84d7NTGRrqtJuXFuhVKQ0NeS/fnYFzhPy9+nVrd3t
WYYXffHwIuInjChjyKm9vb/iYsN2d09/+vxk+9x0a3uBibmUrAIzABQWJxSU
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
09lVGQpotq90qLfQDigI6jBgBJIg0W7/1QkACGaNTPihg7C10B1Ub319XidH
FeRBiKC2Gp+2mgA7O3H4OHGSl0lA7KS4LJ+gKDuv0HFRKQ5OnsMc3AeYmAlu
nkOsJwhhkeOiYiziYiwiwsc01IWlpdiFBQ9BBCGpzs5kPiVnJ9Rks7WVgvDp
6nIj5bW3ZQcHmfv7GQcEGYWGm+NbaGpzgDtff20YbDcPFZhkxrseOELoINm7
1URYW5u7lhI9PUrpbEkf7i1sqounFAfXVUZ1t2fVUiLLi0IK8/zbmjK62nML
c4PSkz0KcgLhHuuq4sKDzSF/WCnI8nO0VkiNdz690gEMN5facS3QcsJJQhAR
Rjroud09hd09xZ5eet6ehsmJHuOjDXt738HTPr53prE2a6i3qpWa00cvQzWr
Lo3raSvpoZei9R7uqxzsLt1YoQNtJzslcp4XR1VPZ4325syxgUpaXTp23r9h
2DLQWbkw2X714myQr1l7U25dVcKta3Mf3+42UdOMDMTTUrxXlrpfv9x99GD7
zq2N1893oXfZKYEpsV6QkqRoj0e3zzy9t42Nr59ehj7evbaWkxMfG+f39NmV
uvqcK9cWrWwVJWWOQQfllVlkFY8Lix00NZcVl2TW0BLx9rH4+uv7b1/s3rm6
uDTX4myvbKAvaG4moaMrMDBQDTzfvyMxpNZmJ8W6I/nWV8XOT9UP9pZUlcdU
lkVPjzX0dZYD4bs31scHG29dWaVWZfbSERsL6c1FY4N1U6ON3e1FdFru6hy9
uS4DaQ5nCedqc6kXlOFcAUNoIrRvf4aCWizhS0Eogh4aJcbdGwgoY8oexmvU
WL9+ce7MSj8ABIzYYWkKNnhofrx1bqwFWWBurIl8AW28GakQUghPwphKCR/h
TBAM18mp8arH+qog4meWezYW6WvzbYwJmqeGq1AYBnWgqwCyiDI+VNHelN7X
mT85UlFa5G9uym9vK2GozwH6LK2EjU143NwV3DyVjM34UFeBIZwnuEOBowNx
YA06CNb2u8GQI/bvv6YkBkKBJCA1tRA7ZS3J8KuQG1Ry1Hx9Qx51dTYtLQ4r
SxlFBRYddX5gaGogxcZK8PAzCYpzcPIfZ+U8dOwEwcpB9oHhFTjMfIJgOUGI
SbCoqPBYWSkb6IlqqPGqKHHKyXEwM5NjmunqCOjo8Kiqsurrczs4yMJLm5iQ
3eEiIy1fvTz35PFpKYlj0pLHnZxVHZyUPLy0GEeLZOrgJKelcxIWFPSBRIh7
WISZ2SlxPQO01QJFOQErczScrsHu/MaaWGBYXxVJrY4qLfBrrI0rLvCvqoik
UZNqK2OhiVDG/Gy/suKQsoKQ3HTvzGT3qtJILOFdL5zpX5qhISnAqOzfyqsk
e1n0VfT2FDXSUhsa04pLwoFDeKhdSpJ3QpznrasrZI/6v7/raiuF8KEuXb0w
tbXWT28uGOim9HaUNdamVRRH93UVjwxQQgNNVRVPUEojRgcrkKrqKpOgFCP9
NXOTbVvro3eurY8NNFSVJeWkBzLGGnr6cPO/f7zKzfTzcNM7vdH/6y/Pnzza
vrQzvb05enZ16PObW63UvLR4H1TXlvrcHz49ePNsF+jdv7FxbWf+0taUhqZk
ZlbE86+uxCV4vXx9RVHlJJ8gISF9REzqoITMYU4eQlNbUESMSVaeU1aOq6Oj
bGO59/GdjenxenNjMVsbeaRdCckj795dffv2xtxs519/fN1Yn5ubEYTv0tqY
WpTrDxhXljrPb4+iLfrP72//+s/HF892nz/Z/f1fH/a+/IT9pyfa2pqL21qK
ULraimEpO5pzELSnRmo7W3LXF5Aia0Flb3vpzCiNcV8Fmg4RhBfFEjAOdlVB
HKGMyzOwna3rC72MKa6g/uc2RqH1WG6tDV85P7s03TExQF2b654dbd5nsHtm
pGlyf0JbkIhsSHbCH6oDgP30ElIKB2sXJpqwMtJThZX9sdZ7EWABJq47LCvM
T2973sQgBZWhpy2XUhQ2NlCBLw4MB7rz83M8DfQ4LMwFDfRO2tiKOTnLnLIQ
dHCUsnOUsrASYzg0RmGEPoYvBY+oz4yfYgtDECE0KDp63GDQyk4G4qhnwKup
DRMoYGjMd8pS1NJSQk3thJmpuLoah7GemLwUi5oiN+dJEMcmJsVzkpsc5f4k
10F2ToKDk4x+PHyEjo6QtbWSibG4l6eer6euh4uGqaGIuamMqPAhCfHDJsai
0DsrK0k1DVZdfS4xCQJmsqev8B+/PszPD5WUZD5+nBASOmRpJadvIGhmLnHK
UhKHhNzqF6CDlsHcQgQmGQ0LiqW1tL2Dkn+AEZJLcU7Q6YU2nDRY99aGpF56
dlNdbDM1przYr78rh1YXW1UWVlsVVVcd21ifmJPpBR+Vn+VVURQCt1+U45eV
4hbia1SSG7hzdmh1vm16tI4x1zYqDNRqdrIBmbGemlRdkwAMKeVxrc35lPKk
0CB7FTme6rIUcqSgv77+4dO9jqYCpJ4bl2Yvn596eP/M44dbZzYHOulFtMb0
osJQWxtFP18jan0KvT2vu7MESnpmc2RjbfDG1dUnDy/eu7317PHFhbnO5cUu
nC40XK9fXnpwZ8XPywBmb3SwEmAO9VL6u8ogKzcvL5wjZxsZRyZytdMqyg77
5dtHV85PP7u/deMSAJzAT9lPEgh67z7crqpJLSyOPHCYBFBFncPARFhAhBAR
PyQmeYSLh5BT4BAUPkqhJM9ONDfWJFNrkpLiHB0cFBUVmcMjrB8+PD04WDcy
3AgdTIzzbqzNQB6MCj315uU2cvFPPzy8dmXh8cNznfSyhrqc+pqcseHm3q6a
h/fOv3t9+++/vvv159c0al5qkn9eTujqQgfQA4Y4t30dRStzZNyDR50CI8t9
kLnZsSZAB8qgiWCQkRCh8giJq3PdoIwxeRbaHKwwBrIDm/jRmZVB4DnWV7c4
2Q4dZExOBxIRDBkPSoDY8nTr4mQzcEM4nR+nIScis08M1IHQhYkWkIgYi49L
Uy0TZOeBKggilq3U9FZqandrDmLv/CR1oKuoszWrvyuvtCgQDEIK7WzENDSZ
Tc34IIW2dqiuohBB6B3EDgKH9AemYNiAIRgEcViCOMa9DmAIKcEW7IMVM9Rq
a0lshOhAB8EyAAGJ5ByF2pzwotpaPMiDEsKHVRW4uDgIpuOEgAg70p+AKKuA
MAsHNyEsekxGjt3MTAbVDInewVY+OMCA8V58oI+up6umvZ0yNxchJ8dkZCTg
4qKoqMwE2COizNY325dX2iooMcrK3IcOEawshJgYUqGimbmUrByzlPQRcmR1
W2koYEycpYoaM3QQeq2pzaWkfMLaRs7JWV1Olrm8IGxlqqmhKhERu52W1tmS
Wl8ZMdCdVUMJ6WhNrq8OLy8KqKoIbaiLa29Ja21MplZF11ZEFKR7FGR5lRcG
pyc6O9soluYFXTgzePnc6PoiHfRNDtdMjtYO9JR20PNbWjNr6xKqquMLCsLi
YlzTUvydHfTiYzzhu/767cN//vnu8d3tuHAXTye9m5fnnj08C7hu31x/9+ba
pw+33ry6/OzJ9qWL4+NjtVOT1MuXJiAf05PNpzeGnz3ZAXfv3t558nh3e2v2
22+e/PHb+3NbE9GRTiJCB/18TI4eJLzddWMj7Vwd1Zsb0nMzAqCqwBDoIRaB
QdRbdwcdOLHPb268+2r367c371xdBobnN0eUlPkdnfQLi2Nd3PT5BAheAUJa
7hiuFIwoFx+hqsEtr8QmLcsmK3/yJCehpiagqyGkrnjSzUkD6djRUUla+rCC
4glvb6P3728lJ/l10StHhxozU/ziox1ePNl89/o8va0gIMBCU1PYwkLZ2Egu
OMiBWp/X3kZZXxvbubCIr3Pv7vbtW2f++vPz3t4PJUWxtZXxZ1Y7W6ips+No
4mqwnJ9sxEke7qGszLYjHsKXwksg35FOvq2MvE063j493Izl8nTX2lwvkASk
kEWsnF4eAK0Qx82l/sUpOsRxoIMy3F0N+RvtrYUv3VwkH1WcWe5jjKM+3F0B
BrdW+4DhykwblBGcMuQSKwsTbefWhxbJG0rVFzZhaGmAcbSvoo9eiKg4tf+i
9zDpiMrGBstXF2g9nTlmJnw6WiesLYUhfyjePmpu7opwaBALVFcy+lmKm1tJ
IOI5w4I6yFnby9o6ylvYSOEjVlBMTolq6nLpGfEbIzCaCUvLH1HVZN83oqKI
XajnyqrHxSUJGZlD4uIExEtc7ICmCo+sxHEjXXFB/kNMTAQH19EjTORUSmhv
eXgPGhhIBQVZRYRbI85HR5yKDDHOz3aLizTNTLEryvNMjLNPTXRRUDhuYSEO
0rV1OZA6W9pS3n04NztfHxVtw8KyP/7hEZJBRQUeTW1h1Bkp2eOaOrySskeU
1U8YmwvJKzNp6JwMiTBBc6Gtz6ely2dhLa+ixqMgx5aX5r803kQtj+tvy2us
iW9tSKgoCujtSK+hBDc3xLQ1xddVhTXWRbU2JoLE6vLQ3tZ0akV4Y0VEc01c
TrJbRX5QWX4wCnTwyoVxtNgj/VWTI/UoPfTittacpub0mtr4ouKwqCiHrIxA
YPLT988Y/XXpTaWp8b5CPIdOHicsjGRvX1n4/O7686cX7907c+fO5oMHZ169
uvTx443Pn2/94x9Pb91a/vrr2+/f33j79trLl1c+vL/z+NHF58+uPLi/8+s/
Pzx5utvfV+vmZhgR4aCpzldUEB4SYMbGTDjaKiKjhfqbUIojc9J8xvqrl6bb
IXkAjVIUixr74+f7l7cn37+4AgwhkWAQO8gpcds768oqcjGxEKKSx5nZCD4h
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
E+JCTCL8B2EbdDX5TAxEDXT4GQBKix/S1eRRlmcR5id8PPTy0gOigm2iQqxy
0nyKcwMLsn2LcrDiW1bg11QXO0DPgcfrpKX3teX0tmYXpHu101L6OnLoTak9
7VmtDUkjfQWp8KUuygDQ2lwUphQ6GB9jGRygp6nG6uIoPzJYlpbkCgY5ThDa
mgKiwofkZdm5OAgJieOysqxgUF2DWxFHJXdMSu4oGpOcbN+Jkaq8bJ/hgdL6
mpikeJv66vDKssDG2og2WhxjWoTKwoCW2tj68rCiTC+0DCjZSa6pMfal+YEZ
SS7WZhIt1OTzZ3rPrHVMjFb29xSiVMKvNmc21CYika2udFBKYspKouG9uztL
fvvlK/Kt6r3vf/juYX5WGDcnwXyEkJFiu3px/tVX13d3Nx89uvr58/Onz64h
8T17vjs7S3/27CJ059tvHy7MdaJcPD9799bZN8+vX7+0tLU+evva6pnV4ZtX
lu/f2sSyoSZTRpw52M+iMCekriKRVpP24tF2S33mg1vL33+8PdpTtzE/cH1n
NT894u7VzXfPb9zeXb+8NfPi8aWbuys7Z6e2N8YUdbhYeAkFLf7jnISNk8n/
9n7r6qN5+dl7+pACZ2On6eCkm5YeDMnr6qyhNZQuLQ/fvnPu/v3LL17c/eqr
Oz///AG5b2/vp6a2AkMzCQFRIiD0VH5p9OrpkT/+9/3X3z3//odnZLfbP16+
fLm1t/f+3/98gOX2Rs+rZxc+vrmOL9jbWxUUYqNnKKKuw4PLpKLAOjtOnZ8k
b8WARKyAQdjRPnoh2WWFXgQApwerR7pKgSTWO5tzBrtKEMHaG7IhhUtTLf30
koGO0raG3MEuytnVgaXp9o6W4tmJ1s2VAWAI0KB6Ny7OJUa6IAlC1wAOAARf
U+Qbvs3wqKAJ0GEjWMNHEIrlPo+tcK349QubI0APAA51lePfdTblDXaWwQyP
9JDvEkKUoePzk9SSgmB5+aOGhvxGJvwAEDro5CqH9OfqqoRo7OWubm4i6O+r
4e6q4O6uEhCk5xuo7+yubu+i6uatp6kvKi7Lxi148AQn6fZh6Xn4j3ByHWA5
RghyHxThOyIlyiwqcEiYj5wsAJKno8GtrswOKVSSY4Y5VFU8wcdFhAaaJ8e4
RofYhgeeAoap8c5VZRG02jhKcTC1KrIoBzU8EP4T9FEroutKo6qLwscGyiA3
fR15vfTcjaXW/s5cGFcXO/moUJO4yFOwo5BCtBteHsoeboq2VhLeHlpjwxUJ
MfZszISGCieORJCfkJc9AV+KJaRQU4tXTZ18PIHCy0cgDzbWJRXm+dOoSXWV
UQie1RXBtZWh1JqIuqqw0nzfgiwPtBJlBQEVRUGF2d7Fuf5l+cGZSW7RIRYZ
ia4psY4O1nLN1OR7N+fGBsv7uwqghh1tWa1NaRBENHpV5TEzE1RUnpbGjO7W
wuK8sDB/i4XpFqgSOfXkv98NdFMsjeV01AUvb0++eX7108dHL57fevv6/u7l
1dcvbvz4w7Pc7LCcrOBrVxYYPcY/v7uNynPhzOSVc3P3rm189WAHPvPKhUUI
2cM7Z+jNRd5uhgbaorsXyLFJp8bqZicb+roKEUPqa+KoVYkQwZXpvjNLExkJ
wY9vX3hy5/y1C0s3Lq5c3Vna3pgAgPjL0EEXfwNWXoKFm7h0/cy//vzBzFJH
QITNwlpbTpHPzl7H09vM08u8rDyVWl8wPtqxsTF95sz87u7Zb7998/HDyy9f
fvvXv79BmP3p1+de/kZc/ISVvVJUgktjW+Fvf35+9fbu4yeXX764ev/u5tMn
Z1aXWhrrEzdX2ssLQ5uoaZWlsdaWyprqAiKiB8QkD/GLktPC+nnpgbupkdqe
9oLxwSpg2NOWDy86OVQ9M1oHHZzsr5wZqoEjxTqyYVtDRldLLlgAg0AA9b+5
Nr2DltvZXJiXHjQzSoMf6Ouk9NDLp8eal2Y7d06PwkZCxbyc9MAR1uEkgdtI
TxW0DCSCNYCGHbCCH+0/niB3wEZsAafQUCDJ2BnKC/zbqFk9rYVYaa3PhBxj
vbstf6CrqK461sREiBxlwoDbwJgboc/ZTR7B0MxMCHbUw1XV000N1g5Ry8ZS
3MxMxNJa2tpOQc9YVFKWhRXNNTtxkofg5Dt04iQYPMDNd5ST65Ag32FZiRPC
fId4OQiek4Tw/hRjirIsoA/yx1BAGFEwKCpIxEbaQQQBYHKsM0SwrDC4oji0
tiKipjwcbhNWEwC21Se2U1Pa6pM7GtIH6eTLy330fDRrdFrG3Hjd9kZXTXmk
kQ5PgLeOm6MCCkh0cZINDtQBhl7uqtYWEu4ualNjNXFRtkcPEhIiB4UECHVV
Hl5ucthtGRkWUdHDgkKEtMwxeQVWVhbyIRqtPrW+Oj4xzj47zY1SAv8ZDy9a
UuBdkOOeEmeTkeSQneqamexckOWVl+GVneKRm+aVk+qZGGWXGueE4uaoQqtL
XFtsGegunBypnBmvGeovAYOd7dkZqW5tjZlowxuqk7DSSs2i03JnxxrTEzyT
ot2Kc8Kv7cz+TY5z/v39G2t99LJbu8tbpyd3zi3sXlyB23z55PLXn+7VUpKt
zRXNjWQ8XfTptHzGi1S//fRigF5Jq86eHGx+eHPr7vXTK3N9zx/udLWVpif5
bG8O7u6MZ6Z6IJY+fbRWUhjk76NjYihQQ4m5f21jc2F4aqitJCf+yrmlndPT
5zcmXz/ZXV/sX53vXZjqAOAaJgKWLsoiMiw8wkc/fPvVf778M7cwFalQWVXc
3FJd30DGydkgMyNEW0siMyNiaKClr4d24dzq99+829v7z/t3L//717/+/vvX
775/vrTWe8pGHjpoZiVbWBqVlhX40z9fffvDi5df3b5+ZWM/ut6am6iHF6qv
io0IMo+LsHN31vR013d10RQVQ5w8qqbDzsVHVJM93JoHust7O0rQjg10lqFM
k3dayufHaajnELuZwbrRrorJvmos9197LxofqKTTsrACxawti+9uKSDf823O
B4Mt9dmzE82rC13Lcx0o4A7swDHWlCYwcGMkOwgiCpSR8RHboZgAEKzhV7C9
r70UYCIz9rYVQezgUXEk8MBwnmgHulvz0EoMdBbXlSegBRjpqxjpK6umROnr
87q5qdo5yJieEoACMl4rIHGzlHC0kwsNMnK2k4W7c3ZQ8PTU8vTSMT0lLSR2
FPn68HHiKAsYPMTFf5T15AEULh4mLu7DXCcJCeGjcKHSYseVZNkUZU6QMzmS
GB6HEZWVPCIldhD0yUgcFhEgQgLIaZehgNmp3vSmzPam9JL8QIhLZUlIY00s
3GZTdSxKTUn4eG8ZfEVvSx7oQ4HD31ikI4mP9pWlJzp7uaiGBRrZnJKAI0Wx
tRZLS7FzcZIJCdJ1sJU1NRKOi7ZpakgG/scOE6dMJLEEiQpybMBQQuyooCAh
JnZEWpqZwSBSRkGWX3FeAGNWvpx016Jc78wUp9wMt+Q4u5x0d4Q+eE7yDkyS
W3VpZFq8a1K0Y0woObpLVIiFj5t2R3MW6tL0aM3iTENHS2ZrY2plaTilJAxV
q7kuFVehpT6tsTqJ8ZI1KgY+om1Mj/dIiXHdXuv/+et7e//7/PHlLrUy9cqF
+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
yZW5mq2VJt2g9PnJ8omhoo6mzImRyl999qi+OnllrunZs+9zNQFhgYyG6oTB
npypkZLuVjU5XKcxvaokuq0hbaBdOztS3teqgTWtLYvfWu7ElykviKspTe1s
KchICVQrQ/d3pn/++4/ny5D9+bUnVxMiPSuLUv7ff//NYFf5J794oa5MlRgt
y8mMnp/s/OMP5JS8p5cnP/7sua+/eev2vcPk1Egen/nRx+/9+OMPn332yXff
/vrrX3/89psv3Lm519qcV1epbG/O7O3NKi0LVShYCQnuYaEuXI5RgB8zIc7b
S0y1siAYdIO4WJm/r2tOdlxNpfanH7/65ONXH71weXaua2tnbGqmKUsbrMqU
x8W7S2V2jjRyeYLjvbG2xuztlcGZ0aZcVTQi5OefvmNuSvjI2I5UIiVJFhPl
gfg50I1EM3zz0toff/fps3/+6Y2XruVkhM6N1Q/3Fl6/PKUbfpOVLr93axmv
jAwUH+4ONTWqVhc6QN/SQvviYnuAnwugfnRvXzfXk0YZBBv/9PGl9YVOeNor
R9O3riztrvUjblw9niEf3j+aPtkdu/H/XQK6d211ba4dW6RCYHjz8tytK/Po
pVDDXXKm2WGccZTl6dHKzbX29ZXmjY22urp4qcxclekZHuEYFukYHEYNCiGn
F4NnSEgUq9XBCUlyF7aVgTHBYFlSHPRQBr1kTCpN39HJwNaOcHLSI0c+88xF
7jYysYOXBwVZj80mPCWWLBYRHsmW+1P9/B3jEzxiYt3ZrgYsFz0cMZ6Lsb+P
o7eHDcWCKM1T4Fsh4MCJXT4aOb8K2nB5fwjeDMJx42RyaaL2xsn00UY/pPDl
+/s7i937G323rs4dbvc/d2cNbXW+OSzAmWZLjPQVPXm4/dqLJ7fPFu/fXH35
hQM4Dd3kZp99eGdypCw2kluYE6JJlxbBWKZ5oxvna4Pio/jKRM+asvjHD7ba
G1XAELW3vSkjV+1flBOWrfJHy88KjQ7jDXYXFmRF4OC/cHfvH3/77ZMHx8nR
PiC3q7VwbLBaLCQXN2TYE+mJPknR4vnJetSKzaW21bkm6N3idO3ybP32Knlv
Yn6i5uHt1ZO9ofWlltP9Qd21mvXFRqS/zYX6jfm6+bHSKwf9ixPlsKOrM7Vj
5z4BqF6/NN1Wn/7Z+3eePNhqrklFbUeDVcaH42OnR0vBY1tDam15TENV/HBv
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
AQkXNjBU89Mvn1bUpILUImPc1RouUKaxF6Azzy/16+WfrVaodZSgh0Nt0mHT
NHx4LlAbKElhxYQ4xBlwH17OLw7XNRYMjbY8ePme2IIGtvrvT1/0DtQbmeJK
9h/feh6fpn9GHxbp9vDhN739lRubY7/+9mVGZjiYa31jWiCiiiTmxqaEt7/D
y797Mi45ECRIYRD7h8vAMv7czkEKDAolFDAgvpTGIAyMCbzEZ+Jb8CMLipO8
fDVBwY4hwfZk9mYTYn1tKDbGw8lRnJzkl5Li5+dn/fjjhxERToGB6vLy+Pn5
dhxLSmI6OgqSkjy8PKQ1FbGr81AmFQiDZGr92SZgsLkybm6kEjYBzTQ3Wb29
0b291TM1XrG33X/+zCRclaOdObQcjo4OLHstw1plCgBCsTs5c1JTvYMCLUvy
gjKSXHLSPIA4sF5Blg/qEUFKvKwuDa8tj2yqIafr69evoVKU6bWx0DjRX9DT
nALELU5UAn3TQ8XHl1vwcnmqFmFharAEBdYVPefM/tjp/dHRwRIoTD8vqUph
JJeAmpkeLvwgPwUIKCSA3G6gtiLhvbeeeOOVm4/c2GlrzCZT7Oo2d7h/9+St
q5u3r2+AHOem6mMjtcnxLvjDhBh7wDMmwjY30wd1kZDgson5+c7PPn/r+//v
k0cevcDmGODfpNIIyKq8nPDmxqy0RE8FqaSIiEBNZpJ3WX5EQ00i0N3VlglW
cnVlZ2V5gPgyM12TUu1S0u3zCj0jolRJyW4xcS6h4XaOznwwhURCTrK1tqI0
VCfrd8fbWuu7frR26czi0en53HTfqBBraHgU2GcYQGCtrzunMM8fshMvoe1T
4h1R0hKdIekTY7RJMdqEKA3UhbsjMyrE6vK5GSARfnD7WAdoEYymzxYFbdnZ
nAzN+erzF+7d2OIzCF830VB3flN1/EhvIdQpeBANhDgJJOrXNwF00KWo6BZQ
tPS0pS3N1sK222tMYyKtg4NlLi4M8nFSqLy9pfDlB7coZqT+9PFVo8+3thf+
4a0n3bwUCSm+WbkR3n5qUB46M4C2uNL/xNNXXD0s0c/hsEBzKhsuUAbzpR97
hPK0tGbjKJXTRFIza1ueKYWg0XGetHLpWZFXbxwkpYbMLQ5cu3lqYXmou6/2
y2/+gneBHfAXrklK9n/vgwdNzflXru42t5SkZ0SwucbZufGvvPakGSTlzsLV
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
0AE6wK2mMb97oA6OHhekZUfCSxqYksoZCLV3kQOknX01nn4aNPGlawfO7moK
nRyHsdHK2XwK/kShEgqldJA70IqCt4BBb1+Fp7csNsG5viEZHeba1ZWMdE84
Phdnbk15/HBf2e1bW8lJLiHBKghRYBDe09LSVCwmdOkuEbuYlmpy/RdKanZw
fmFkXpZ/aV4QAjIotUUHQMRnFDQfAKhbIkqmitKnOlmaqdlcIYfpgMR13Xph
MsX3Zt/h7sjmcie5D9SpOWDq7N7MzvrQ/ubolbNLD+4fXjo1c7A5+MSt7cPj
Y6c2R4C4o/2Zw+MTF/ZmTx4bQQXHG+fWLp9aPrc/f/Fw6fTO1NWj9aMzS9cu
HjvYmdxcHZwea7p1Y/df3/z54W9f3bi6g8DCYpK7/LA5hMqGLVFQ+BIjntiQ
xSf1D5trJpbwuDwmi21uTjNls039A7Qwv15+YntHKm6Ih7OwvDiitjIOrhl2
mJw7neOjVhtHRFjbaWmOTuzMTH+wG3Q7j08OyyAwAoMI0VKpMYSEi5M4PsbT
x0MjFTKMCEIi5vF5dN0jDPO0zLCSspjgUKWXj9DJhalQkjBUWRllZniFBlrJ
0ApmRFKMU09bTl6GX3qCZ11FTF6mZ21lSEG2Z2yEVXaaG2BYku+fmeKSGKNJ
irWdHC1YnC3f3mw6td++tlzR35W0DikyXDraXbAwWdtSm/zc/bNPPXZmoK88
JMjW0Z6HPtDdlldfGd+oI9nR/kIoWxAi+WB3sHhiuNTfSwQMenvw9bks/AKk
0bGaL774y/BwGwgO+pBCJW7c3P/gLy+bmEH7ycmk9BIzdw8r0FNomNt77/3O
nE7OC7Vx4KG70ujkDpU0GrkY3EppGhqssVJSFHIqHJDWXrq8Nrp1Yj4g1BlC
DjwCssMRwPzq2w+8/WwDQxxBiMtrw3965/njOzPnL27NLfZBx2ZkR3zy97cn
x7vSUsK/+uIvL75wz8ZaiBBHpZIPGa9cOcAPw92+cHEXBhAwdHKxQuCFYYdf
ABXaOcoXV8dCIjzRauRMHnuLJ565qZ/eVlaV7elrj8vg73giikLFwwWVtXkJ
KaHQOfHJoRwBlcowABWKLFj4ZIGYZW0rx+dQ6boILDJ0cBEnJHnZ2jHTMvzK
q2KjY+zT0r18vKXw0fm5IYnxbi1N2TNTjQ31yeift24cr61OsrGmQbtaWVEF
AsJCDhtowBMQ+uRyNna89KzQkDCH5HiXsvxgtFd5QUhzTcJAZy7cPSqwKhND
JZPDpQinUyMl+kw1qMChLM/C8TVurbbubvbsbfWeWOs6szcKBtzd6N89NgiO
O9yZ0mPwzO7k5bPzuxu9t6+sbq93nz+Yundja3u99+r5RVwGwOICyNQzu9M3
jo6h3L68df3o2IXDxbs3dw/3Z05uT0FwDvRVHp5agP784M8P+vuq8N9ZKs0h
PgV8Q77AiCsw5IqMUEi/RidwAzk8ikTKp1CNqTQTGtUEPCiWUPHvI5pZyInw
MJvcjIC6qviCnMDYGG1FeWR5eXhJSYilJTQGV2Vt7OLKi4lxcnDggPKAcS7f
DJ/J5ZuqNXyZblMqrYYbFe6iUnDNjAimuTGLSTUzJYGPxnJylReXRqekuSYk
OcIqxsRorK2NKNCxCoLLJKRCAoYxJsK2oSquujSyoSohM9ldt3M3uTubLkeH
c3KctiDbt6M51cOZHeIvHR8qAAx7OpLnpkpObDRvrtbPj5UCg8OdecdXO0ty
g6dHaj/+y4v7J8ZZDAIwrCqNJUtJ1KBufAbyBlEUjQg2RGvCWbg7sdycWUH+
FnZ2FI3GzMdPHJdgf/Hi3oMHjwJ9vn5aA0MiNS3kh//7e3ZuuFRmKhAa2mlF
Wnsxzg8NNz98+B1XYOziLtc4CbhC3dYtCmMPD4lIQGY7YTMJtZopEhp6eauA
uO29BRDT7/7wbE9/HXq7fuVCUKjTv7//27mjTYHY5KVX74VHucMvFJYkjk60
joy3HJ5bhyLt6aqtLM/67t//QMVCQg8NdmMwyCEdYLC0NKO8MhsA6eyuHRpp
g9ETScwFEho5K8OIqG8uEUrNJ2f7UjOjwFkMjiHg9uCV+7b2MpCap6+jvbNK
v1hYZEEnFwIbEbGJQZGx/lwhxVoj4QppAKM5y8hCycPv5wkZEhmJUzAgDC+c
CIATFuGUmR2cnRsKTxcZaf/Ou4+/8/ZjSwvtOVmB+blhfT2laIjC/LCCvNDV
5a6aqsTwUI2xIWFvz5XJjCEb0A8R1uBouALcDVZyWmBEhFN8pD0AiPYCBtFk
o31Fg115Xc3p3a3pC1M1kDF6HtSny1uZq9NvNoSXe1vd+8f7Tqx3biy17Rzr
gZvb3xoEBgGrk1tjp05AiIIQp3Tbds9fODWp26sUrnARdLmx1AHxCS2KcuNo
Deg7OrVw6XDp8dsnb17ZAgPeuLy5d3xsoLu8pT77wrlVAPDBc9eDA+xMTQhb
Gw4frlZB09oJOVxyHiCMuVRpLpJReGJyPFkoZghFHHO6GZVqxqBTzM0N2BwD
SAgrtUl2rg8kekq8e2KsE4JPUqJzaUlYZqZnSIhSoSCcnVhOzpzAIMvAQBWk
Kdy3WGJiIWejUQQi2CKxhYWJhYWRxoYdG+Xu6mhpbkaI+AxAjMkwVVgKmFxj
ocTUP1CVnumRme2VnOqSn++flOTk5MjU2FLkEnLUFEjMSHWD4M/L9G6pSyov
CqkoDi4t8Csr9C8rDCzO84Mlz83wio2wCfCSOGvN6yojxwYLB3uyludqluer
hnozFsYr1qZrNxaacdtrSqNrymLOHsy899ZT/b1lp07OvP/2k4M9Jd2t2QNd
BfUVcQini9O1/Z3ZiKgDXTmVJWHWCsLBjurlzvP05Ds4mHv7ihAuampz//fT
l2obgUzOgPI0oxCff/H2W28/C/3p5q6AkjcyJp8j/PLrN888exNWDv2HwiSc
3MT2zgK1LXN0vN7Pzwp+EDrB11cFHvT1swmLJBcN2TsrQTdb27Offfnu5Wu7
//ruo9/9/om7j53/3y9ftLSXAH1w3IYmxNb29Lf/+ZB8qssmXnjpzs//+/rR
uxf5XBMzE+KvH7xx7coB0Nfb24BjRkb0Rx//KSsnztiUDIwAI4dnwuabgAoR
KjNz4wCisalu/YiKzJJ8tLdzct0ngHR8ao3C288VFZwEQmH06GzD4HBPla0U
6BNIGHB/5HA635wroMPDkh/Oh7uh6md6WKu5+QUx3r6qmDi3gADr9vbcn3/+
+Lvv/jw4WI7/PS3FNzzUISTIrrE+a321r7427d4jJ7Mzg7w95VoNW6mkyuVm
lpY0qW6EWa6gcXlk3rn0jJCMjKCcNJ+KwtDqkggAcKS3sLMprb0hhUwa1pGl
32Zdtxy1GOg7ttSkLyfW21F2N7v021lCiwKDO8f6Th4fAsTgCrfXSEKEEL12
YYnMCr49gCvRGZ54ZBucuDRdjz8BP+J6mMSLh7PXL6zCOeJ6cuz08ub5s0ud
7UX5uRErS72//vwpAHj96gmZhZkuWa4RJCiXZyASm6K3KC2ZCMtCCyr0P4wA
XwxvaEZnGpmYEjQaBRikUozNaUYajTQoRBseZVdcEgqVDvmdnxeEAhkfF2tf
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
AQ9Gi2E=
    "], {{0, 383}, {300, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{434., Automatic},
  ImageSizeRaw->{300, 383},
  PlotRange->{{0, 300}, {0, 383}}]], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4783957288045473`*^9}],

Cell["The figure supports three distinct classes of triad:", "Text",
 CellChangeTimes->{{3.478395723062916*^9, 3.478395765668232*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, 1}, {1.4142135623730951`, 1, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 1}, {1.4142135623730951`, 0, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, 1}, {1.4142135623730951`, -1, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, 0}, {1.4142135623730951`, 1, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 0}, {1.4142135623730951`, 0, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, 0}, {1.4142135623730951`, -1, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, -1}, {1.4142135623730951`, 1, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, -1}, {1.4142135623730951`, 0, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, -1}, {1.4142135623730951`, -1, -1}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 2^Rational[1, 2], 0}, {
       1.4142135623730951`, 1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -2^Rational[1, 2], 0}, {
       1.4142135623730951`, -1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 2^Rational[1, 2]}, {
       1.4142135623730951`, 0, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, -2^Rational[1, 2]}, {
       1.4142135623730951`, 0, -1.4142135623730951`}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxd1WlQ00cYB+Aol6KIpbSCQQsogVGi6JQOmJT1IAIODAQwgCJYLCBqFYJ3
UUQ5wmG55BSC5RYaEW1obYGNisA0AkYQRSRcgSBJJAnJnxG01g/trtMP7+zM
82Fn593d3+t7IswqnEQiLf5YjI+lA4gb3Ih4Wte/a5ELhyW+8ohqgD3veq9w
RxNo8q7YKRM2YT/JfVHIY4F21/Y88i4edifqmtyqZ0BkQXbYHByPXDvGFFtq
m8HzxTsKS0Eucs2HfdUcqwtgZOiwZZt/B/LZnnzTbnYNmBiqzVjv4Y5c7cDW
P6PfBaZl6xKKXaqRK8MmOxzcP4AZR6+1bLUucrnnL5dFzbVAVetZ2+PRj1wa
FVmYnN4GZg/Qx7uF75GPxZFYc8wTQFNzaB9F9B3ygVoy+/10KtDe1cmxdk9G
3udI2+w4WgSIFeH7WXelyLuCKy6F8qoA4TfV359rhvzBEdtu7u0UQFzOjuu0
T0fOK7yUdfXUAiCud2wwNOr+z2H5XsOA+UYmILgPlxOuPsgF6QluNvsVgOCE
XjR71I5cWBkiHcqkACK4YaOx43Hkvcy193Qf7QME2VasKU1CPuDAnw42ywXa
PwX6PWUpyMWz4REDQVuAdlekyj5yAblkunVFszIXaFa2jEjoAPnr+s+rYpVM
oC7nVxnVMZC/CdtmEPHOBSjbFMlv0xTIVZS7h+KTlECR2GanuvklcvXb3x6T
OXIwVa1edqX8FHLN8amoLSYsMB79IFPPYAty7TnDwQhdM/AqbeZKCN8U+2Tj
rS9Ok0A/dGeWhXKQE7SgHe4eEvBkoK5+wk6LPTbujbR3NWi/+v2PY5vI2PM8
BtxOR4Gmcn37CtUi7DdKJNaDg+BgStCFundS7PmegT0WqyC/2HjJ7DUhdnaD
VVyZKWwXhFET8+axO3ZHyP5ogiKvlcqfN1l/cv5o5bS9DPY/pO4s0mvEnlAS
WWIeAl9Zz9seOxqK+xPq7fyZmw8cbxSt5jBccT+lFs4e/lvh1LB4+LYtHfef
nixOm7gDFcyWPtbFDHxfjHmRV1oBVIpu0WR2d/D9ik0CfGMToTp7eSJjygH5
hN3fMfLDl6GGFD7JS3+KfDhiqalVCwlqnSRWZYLHyF+uLjAQtJyA2rpztD1p
Nsj7+L+OGUR7QkJfdYCyqB55V4aLAVOtBwlfRVmAohz5/XS6k62uDySSgpKu
7t+N/KaRj8DcJhISpZTstiVc9L8qN/ptN39aBAluyHv6WT5yATlm+WunCkik
Vn5L2TiGXGhRwI/LWQqJUDeFzXNH5L1nPPM75RJImBvLTpU443zY4+tKBzNQ
e09iJB/C+4zKl3V2fdUNNR06a6hH0fsHUr+/WGfDz8PZQ/dpL7PCcF453zs2
bqoDVQ0jW+9wce4pqX47V37DgDOVex+bHFmP83Cdf+sPilYoWxHz7MV5F5yf
vGqiwi8LTrJed/k/qcB5KzlrOCdgwdGD2mHLp4U4nwdPw2r5Yfg8irt9wyqU
P4CgBnqzfxJB0dxJxtzXetijUjNfFVNgpzR6d7IkEHtO38LMcTX8nai5tg1u
//98af04XxIv1KT8A94liJM=
      "]]}}, {
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], 1}, {-1, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], 0}, {-1, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], -1}, {-1, -1.4142135623730951`, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 1}, {0, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 0}, {0, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], -1}, {0, -1.4142135623730951`, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], 1}, {1, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], 0}, {1, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], -1}, {1, -1.4142135623730951`, -1}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, -1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], -2^Rational[1, 2]}, {
       0, -1.4142135623730951`, -1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{-2^Rational[1, 2], -2^Rational[1, 2], 
        0}, {-1.4142135623730951`, -1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -2^Rational[1, 2], 0}, {
       1.4142135623730951`, -1.4142135623730951`, 0}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxd1WlQ00cUAHCUS5GrllYwaAElMEIUnNIBSVlFIuDgaADDKVgol1rkUEQL
osh9FBBRVAwt4RKLCDS2tsJG5ZoCwQiiiIQrECAJJCH5M6LUMtNxd6Yf3uzs
b/bDe2/e7nqeDjENU1FRWbsatNVQBcTPzPAUx5vwv7XXKYvBv9JO0QREye3+
7n0PPzl4eJjlLOp+CIgzzNel9QzkHS4dJaT99YCwp2wprnqJnGdMstkVmAKU
E3S+ifIx8ldr95XeAcVA8dG/Oss0GfnYSKRJm3cnWOy7bsCNq0E+NVKbt93d
Dcht4jTOafQinxNtu3zLqRpIQ6Y7bdw+Il+wO7Q1Tq4GxB6/pvIe1yKX1XrU
9rkPAmFURGlGbhvyxWPUSW73CphIUmEs0U8jV9SE+pN534GhWlLcylw2cmWz
6lUztwwwYOe4y24c9Q0QumEBjGYh6A1kXQqur8LuNTM4WGwInp6w4DIfZGJP
LUrqss4F9aWXCvPPvsd+u3OHlg4XVhzV8llupGNnPtMmXI5ATu5lV/MACfas
4IuG7R2wuzJIOFJAxh7YYKVnFw376VsfqbX7YydZ8BV30uGQDXsu0LAY1/UX
R6OvPBPyF8PCh/xsse+PkFlHvIeCuVbdx1J8XqHfMiagAjh77/OqeCnOU17B
rtKpo8H5kD2a4R+ckEvbJBnvciRQRm4OTUmXIpektVnK7n4J5e9+7yFliZHP
VMs3XKk4CxXRM1G2G/G8TcY8LVDXtIXK81rD4WqGyN/mLFwJYhtA5XTj/S8S
VJAPQjd6eXAWJBz99rm5C5A/H6q7N2WphER80rywfzOe5/zvf5zYSYJEifuQ
a0IUnv8KDWuWbM3qvkxgNjyM/HimX3LdByEkrnv49hlv+uSQfUtv3eK1bkjE
NZgmlRsg7+CEUNJKliFhxw0X/YnuF+Qd0pf+stNsNf8Y6Zy1CPngM4rzTfVG
qLxcFlFmFIT8rdmyxamTwVARfNjhM9cjyCcbeZuzaC5QLjR2cPfejXxmlD/6
wIIKZdQMfs5UE3IJvWWAcTEPztOWeYdybiCX8u47iiyb4Cx/o49nfBpyeZF2
Gm3GBk5Z/hMrjkxFrlAJm67PfQFHw9cbmLag/kOlvcC0nNMD32y+oclpOY29
7rzjwRxzOMD+bUIzxgM5oSE7Rl5zD/bmOWnS5erYPSXlPpIK+CSXam+hhusl
0v3S8wMOwLs6RzhG5hHY75CL2tYxQaWV116jFzexM4NWqIlswCHFas/as7Bn
V35LtpoA3cY32ElX12MPdpWYv7ID/ec8rneJBdiN9ERnyxzA0EFPFypYwHU9
EuiIRybAuHhDV+9XXNyfTtUtlJMSIPT6m5EYdgH5YugTxzeFIUDs8OjUpIEq
clnD2O4mphuQUryc9b+hIV+oPNqz8cR2IN/m3fqDpBW5SDf25esLTmCxvppg
eRUin2bM9no/ZwGFIFFriYPuERw/rhw1eVEKlMMJsFocifxVFHPvjk1cQFB8
D8f9xMPzuXSGtvS1OiCisgve3kLvDOwSxhzIEPgC4urA+4VoOfI/iJpre+De
//8vrav/S1pyTea/8cWrEw==
      "]]}}, {
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, 1, 2^Rational[1, 2]}, {-1, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, 0, 2^Rational[1, 2]}, {-1, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -1, 2^Rational[1, 2]}, {-1, -1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, 1, 2^Rational[1, 2]}, {0, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, 0, 2^Rational[1, 2]}, {0, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -1, 2^Rational[1, 2]}, {0, -1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, 1, 2^Rational[1, 2]}, {1, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, 0, 2^Rational[1, 2]}, {1, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -1, 2^Rational[1, 2]}, {1, -1, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, 2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, 1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, -1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{-2^Rational[1, 2], 0, 2^Rational[1, 2]}, {-1.4142135623730951`, 
        0, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 2^Rational[1, 2]}, {
       1.4142135623730951`, 0, 1.4142135623730951`}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxN1X00lFkcwPEpL1NK2dZuGLVRhhNT6qw9ZNbtxYQOh0FTXqLVItVGo6RW
Ke95WUVe02iNt1gJO3bbxZ1KOCujiZRkiGFkZjIzZh4nalvn7O69/XH/eD5/
POc5v3uf7/WODDELJZFISxcXY3FpAeIWJyzescgpjSVKfEQj//fcA4i8G33d
u5pBsyd3t7S7GftpzovCOhbocO7Io+ypw25PW5db8QwITSm2WwPjkWvGmKIN
mhbwfOmuwpsgF7n6o39lmtkFMDp8dEO7byfy2d58QwG7CkwMV2ducnNFrrJl
657V7QHT0o2Xi50qkStCJjttXT+CGTuP9WyVNnKZ+y8JwpZqoKx2r+51G0Au
iQgvTMloB7OH6OOC7g/Ix+JIrDlmJFBXHfGnCr9DPlhNYX+YvgI0TVo55q4p
yPvtHLfavS4CxKrQAFaTBHlPIPdScF0FIHymBgZyjZA/OGYp4NxNBUTCtbgu
mwzkdYWXrmadWQDEjc7NevqC/x2W7dc7MN/ABATn4UrC2Qs5P+Oyi0WAHBBp
wReNHnUg7y4PkgxnUwERWG+92u4k8j7m+nvaj/wBQbEUqW8mIx+05U0HGuUC
zZ983d7SVOSi2dCwQb9tQLMnXGkTvoBcPN22qkWRC9QGraNiOkD+pvbzimgF
E6jKeBX6NQzkb0N2kMPeOwFFuzzlXbocuZLadCQ+WQHkSe1WyttfIle9++0x
JU0GpipVKxLLziBXn5yK2LaGBcajHmTrkLch15zTGwrTNgKv0mcSg3iG2Ccb
7nwRQwID0JVZGpyGnHD02+XqJgZPBmtqJ6w02KPj3kr6TEBH1vc/jm2hYM9z
G3SJiQDNZbo2XOUS7LdKxOZDQ+Bwqt+FmvcS7PnuB3tN10Je8epls9e7sbPr
zeJKDWEHP4SWlDeP3U4QJv2jGQo9DBQ/bzH/5PujFNM2UjjwkLa7SKcB++WS
8BLjIPjKfN7yxPFgPJ9gT4fPXLzgeIPQJI3hjOcpMXVw890Op0ZEI3ct6Xj+
9BRR+kQjlDNb+1kXM/F+MeaFHukFUCG84yi1asT7K1pzwDs6CaqurUxiTNki
n7D6+5TsaAJUk0In6zKeIh8JW25o1kqCGnuxWSn/MfKXJgVkfmsk1NScc9yX
boG8n/frGDnKHRK6ykPUJbXIezKdyEyVDiS85aUH5GXI72fQ7S21vSCR7Jec
FbAX+W19L76xRTgkblKvtS/joP+r3Npnp/HTIkhwgj7QY3nI+ZRTK9/YcyFx
pfxbqvUY8m7TAl5cznJIBLvILZ7bIe87657fJRNDwni19EyJA+7DPm9nOpiB
mntifdkwfs9r2Yqunq8EUN2ptY52HJ1/IPH5ixUbeh7OHrnv+PJqCO6Vw70T
44ZaUFk/ur2Rg7unoPnsNviGAWfK9z9ec2wT7uFG37Yf5G1QuurUsxfnnXA/
6yoJrs9VOMl60+P7hIt7K47Vm+Oz4OvDmpENTwtxn4diYKXsKHwewdm5eS3q
DyBoBz3ZPwmhcO40Y+5rHewRV7JfFVNhlyRqb4r4IPac/oWZkyr4O1F1fQfc
if3f+6Vt8X5JulCFOvMPxLWIkw==
      "]]}}, {
    {Arrowheads[{0, 0.05}], Arrow3DBox[TubeBox[{{0, 0, 0}, {3, 0, 0}}]]}, 
    {Arrowheads[{0, 0.05}], Arrow3DBox[TubeBox[{{0, 0, 0}, {0, 0, 3}}]]}, 
    {Arrowheads[{0, 0.05}], Arrow3DBox[TubeBox[{{0, 0, 0}, {0, -3, 0}}]]}}},
  Boxed->False]], "Output",
 CellChangeTimes->{{3.457537950049293*^9, 3.4575379792163754`*^9}, 
   3.457639397308329*^9, 3.4673846298891087`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 Graphics3DBox[{{
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, 1}, {1.4142135623730951`, 1, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 1}, {1.4142135623730951`, 0, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, 1}, {1.4142135623730951`, -1, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, 0}, {1.4142135623730951`, 1, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 0}, {1.4142135623730951`, 0, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, 0}, {1.4142135623730951`, -1, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, -1}, {1.4142135623730951`, 1, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, -1}, {1.4142135623730951`, 0, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, -1}, {1.4142135623730951`, -1, -1}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 2^Rational[1, 2], 0}, {
       1.4142135623730951`, 1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -2^Rational[1, 2], 0}, {
       1.4142135623730951`, -1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 2^Rational[1, 2]}, {
       1.4142135623730951`, 0, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, -2^Rational[1, 2]}, {
       1.4142135623730951`, 0, -1.4142135623730951`}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxd1WlQ00cYB+Aol6KIpbSCQQsogVGi6JQOmJT1IAIODAQwgCJYLCBqFYJ3
UUQ5wmG55BSC5RYaEW1obYGNisA0AkYQRSRcgSBJJAnJnxG01g/trtMP7+zM
82Fn593d3+t7IswqnEQiLf5YjI+lA4gb3Ih4Wte/a5ELhyW+8ohqgD3veq9w
RxNo8q7YKRM2YT/JfVHIY4F21/Y88i4edifqmtyqZ0BkQXbYHByPXDvGFFtq
m8HzxTsKS0Eucs2HfdUcqwtgZOiwZZt/B/LZnnzTbnYNmBiqzVjv4Y5c7cDW
P6PfBaZl6xKKXaqRK8MmOxzcP4AZR6+1bLUucrnnL5dFzbVAVetZ2+PRj1wa
FVmYnN4GZg/Qx7uF75GPxZFYc8wTQFNzaB9F9B3ygVoy+/10KtDe1cmxdk9G
3udI2+w4WgSIFeH7WXelyLuCKy6F8qoA4TfV359rhvzBEdtu7u0UQFzOjuu0
T0fOK7yUdfXUAiCud2wwNOr+z2H5XsOA+UYmILgPlxOuPsgF6QluNvsVgOCE
XjR71I5cWBkiHcqkACK4YaOx43Hkvcy193Qf7QME2VasKU1CPuDAnw42ywXa
PwX6PWUpyMWz4REDQVuAdlekyj5yAblkunVFszIXaFa2jEjoAPnr+s+rYpVM
oC7nVxnVMZC/CdtmEPHOBSjbFMlv0xTIVZS7h+KTlECR2GanuvklcvXb3x6T
OXIwVa1edqX8FHLN8amoLSYsMB79IFPPYAty7TnDwQhdM/AqbeZKCN8U+2Tj
rS9Ok0A/dGeWhXKQE7SgHe4eEvBkoK5+wk6LPTbujbR3NWi/+v2PY5vI2PM8
BtxOR4Gmcn37CtUi7DdKJNaDg+BgStCFundS7PmegT0WqyC/2HjJ7DUhdnaD
VVyZKWwXhFET8+axO3ZHyP5ogiKvlcqfN1l/cv5o5bS9DPY/pO4s0mvEnlAS
WWIeAl9Zz9seOxqK+xPq7fyZmw8cbxSt5jBccT+lFs4e/lvh1LB4+LYtHfef
nixOm7gDFcyWPtbFDHxfjHmRV1oBVIpu0WR2d/D9ik0CfGMToTp7eSJjygH5
hN3fMfLDl6GGFD7JS3+KfDhiqalVCwlqnSRWZYLHyF+uLjAQtJyA2rpztD1p
Nsj7+L+OGUR7QkJfdYCyqB55V4aLAVOtBwlfRVmAohz5/XS6k62uDySSgpKu
7t+N/KaRj8DcJhISpZTstiVc9L8qN/ptN39aBAluyHv6WT5yATlm+WunCkik
Vn5L2TiGXGhRwI/LWQqJUDeFzXNH5L1nPPM75RJImBvLTpU443zY4+tKBzNQ
e09iJB/C+4zKl3V2fdUNNR06a6hH0fsHUr+/WGfDz8PZQ/dpL7PCcF453zs2
bqoDVQ0jW+9wce4pqX47V37DgDOVex+bHFmP83Cdf+sPilYoWxHz7MV5F5yf
vGqiwi8LTrJed/k/qcB5KzlrOCdgwdGD2mHLp4U4nwdPw2r5Yfg8irt9wyqU
P4CgBnqzfxJB0dxJxtzXetijUjNfFVNgpzR6d7IkEHtO38LMcTX8nai5tg1u
//98af04XxIv1KT8A94liJM=
      "]]}}, {
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], 1}, {-1, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], 0}, {-1, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], -1}, {-1, -1.4142135623730951`, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 1}, {0, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 0}, {0, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], -1}, {0, -1.4142135623730951`, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], 1}, {1, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], 0}, {1, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], -1}, {1, -1.4142135623730951`, -1}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, -1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], -2^Rational[1, 2]}, {
       0, -1.4142135623730951`, -1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{-2^Rational[1, 2], -2^Rational[1, 2], 
        0}, {-1.4142135623730951`, -1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -2^Rational[1, 2], 0}, {
       1.4142135623730951`, -1.4142135623730951`, 0}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxd1WlQ00cUAHCUS5GrllYwaAElMEIUnNIBSVlFIuDgaADDKVgol1rkUEQL
osh9FBBRVAwt4RKLCDS2tsJG5ZoCwQiiiIQrECAJJCH5M6LUMtNxd6Yf3uzs
b/bDe2/e7nqeDjENU1FRWbsatNVQBcTPzPAUx5vwv7XXKYvBv9JO0QREye3+
7n0PPzl4eJjlLOp+CIgzzNel9QzkHS4dJaT99YCwp2wprnqJnGdMstkVmAKU
E3S+ifIx8ldr95XeAcVA8dG/Oss0GfnYSKRJm3cnWOy7bsCNq0E+NVKbt93d
Dcht4jTOafQinxNtu3zLqRpIQ6Y7bdw+Il+wO7Q1Tq4GxB6/pvIe1yKX1XrU
9rkPAmFURGlGbhvyxWPUSW73CphIUmEs0U8jV9SE+pN534GhWlLcylw2cmWz
6lUztwwwYOe4y24c9Q0QumEBjGYh6A1kXQqur8LuNTM4WGwInp6w4DIfZGJP
LUrqss4F9aWXCvPPvsd+u3OHlg4XVhzV8llupGNnPtMmXI5ATu5lV/MACfas
4IuG7R2wuzJIOFJAxh7YYKVnFw376VsfqbX7YydZ8BV30uGQDXsu0LAY1/UX
R6OvPBPyF8PCh/xsse+PkFlHvIeCuVbdx1J8XqHfMiagAjh77/OqeCnOU17B
rtKpo8H5kD2a4R+ckEvbJBnvciRQRm4OTUmXIpektVnK7n4J5e9+7yFliZHP
VMs3XKk4CxXRM1G2G/G8TcY8LVDXtIXK81rD4WqGyN/mLFwJYhtA5XTj/S8S
VJAPQjd6eXAWJBz99rm5C5A/H6q7N2WphER80rywfzOe5/zvf5zYSYJEifuQ
a0IUnv8KDWuWbM3qvkxgNjyM/HimX3LdByEkrnv49hlv+uSQfUtv3eK1bkjE
NZgmlRsg7+CEUNJKliFhxw0X/YnuF+Qd0pf+stNsNf8Y6Zy1CPngM4rzTfVG
qLxcFlFmFIT8rdmyxamTwVARfNjhM9cjyCcbeZuzaC5QLjR2cPfejXxmlD/6
wIIKZdQMfs5UE3IJvWWAcTEPztOWeYdybiCX8u47iiyb4Cx/o49nfBpyeZF2
Gm3GBk5Z/hMrjkxFrlAJm67PfQFHw9cbmLag/kOlvcC0nNMD32y+oclpOY29
7rzjwRxzOMD+bUIzxgM5oSE7Rl5zD/bmOWnS5erYPSXlPpIK+CSXam+hhusl
0v3S8wMOwLs6RzhG5hHY75CL2tYxQaWV116jFzexM4NWqIlswCHFas/as7Bn
V35LtpoA3cY32ElX12MPdpWYv7ID/ec8rneJBdiN9ERnyxzA0EFPFypYwHU9
EuiIRybAuHhDV+9XXNyfTtUtlJMSIPT6m5EYdgH5YugTxzeFIUDs8OjUpIEq
clnD2O4mphuQUryc9b+hIV+oPNqz8cR2IN/m3fqDpBW5SDf25esLTmCxvppg
eRUin2bM9no/ZwGFIFFriYPuERw/rhw1eVEKlMMJsFocifxVFHPvjk1cQFB8
D8f9xMPzuXSGtvS1OiCisgve3kLvDOwSxhzIEPgC4urA+4VoOfI/iJpre+De
//8vrav/S1pyTea/8cWrEw==
      "]]}}, {
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, 1, 2^Rational[1, 2]}, {-1, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, 0, 2^Rational[1, 2]}, {-1, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -1, 2^Rational[1, 2]}, {-1, -1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, 1, 2^Rational[1, 2]}, {0, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, 0, 2^Rational[1, 2]}, {0, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -1, 2^Rational[1, 2]}, {0, -1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, 1, 2^Rational[1, 2]}, {1, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, 0, 2^Rational[1, 2]}, {1, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -1, 2^Rational[1, 2]}, {1, -1, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, 2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, 1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, -1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{-2^Rational[1, 2], 0, 2^Rational[1, 2]}, {-1.4142135623730951`, 
        0, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 2^Rational[1, 2]}, {
       1.4142135623730951`, 0, 1.4142135623730951`}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxN1X00lFkcwPEpL1NK2dZuGLVRhhNT6qw9ZNbtxYQOh0FTXqLVItVGo6RW
Ke95WUVe02iNt1gJO3bbxZ1KOCujiZRkiGFkZjIzZh4nalvn7O69/XH/eD5/
POc5v3uf7/WODDELJZFISxcXY3FpAeIWJyzescgpjSVKfEQj//fcA4i8G33d
u5pBsyd3t7S7GftpzovCOhbocO7Io+ypw25PW5db8QwITSm2WwPjkWvGmKIN
mhbwfOmuwpsgF7n6o39lmtkFMDp8dEO7byfy2d58QwG7CkwMV2ducnNFrrJl
657V7QHT0o2Xi50qkStCJjttXT+CGTuP9WyVNnKZ+y8JwpZqoKx2r+51G0Au
iQgvTMloB7OH6OOC7g/Ix+JIrDlmJFBXHfGnCr9DPlhNYX+YvgI0TVo55q4p
yPvtHLfavS4CxKrQAFaTBHlPIPdScF0FIHymBgZyjZA/OGYp4NxNBUTCtbgu
mwzkdYWXrmadWQDEjc7NevqC/x2W7dc7MN/ABATn4UrC2Qs5P+Oyi0WAHBBp
wReNHnUg7y4PkgxnUwERWG+92u4k8j7m+nvaj/wBQbEUqW8mIx+05U0HGuUC
zZ983d7SVOSi2dCwQb9tQLMnXGkTvoBcPN22qkWRC9QGraNiOkD+pvbzimgF
E6jKeBX6NQzkb0N2kMPeOwFFuzzlXbocuZLadCQ+WQHkSe1WyttfIle9++0x
JU0GpipVKxLLziBXn5yK2LaGBcajHmTrkLch15zTGwrTNgKv0mcSg3iG2Ccb
7nwRQwID0JVZGpyGnHD02+XqJgZPBmtqJ6w02KPj3kr6TEBH1vc/jm2hYM9z
G3SJiQDNZbo2XOUS7LdKxOZDQ+Bwqt+FmvcS7PnuB3tN10Je8epls9e7sbPr
zeJKDWEHP4SWlDeP3U4QJv2jGQo9DBQ/bzH/5PujFNM2UjjwkLa7SKcB++WS
8BLjIPjKfN7yxPFgPJ9gT4fPXLzgeIPQJI3hjOcpMXVw890Op0ZEI3ct6Xj+
9BRR+kQjlDNb+1kXM/F+MeaFHukFUCG84yi1asT7K1pzwDs6CaqurUxiTNki
n7D6+5TsaAJUk0In6zKeIh8JW25o1kqCGnuxWSn/MfKXJgVkfmsk1NScc9yX
boG8n/frGDnKHRK6ykPUJbXIezKdyEyVDiS85aUH5GXI72fQ7S21vSCR7Jec
FbAX+W19L76xRTgkblKvtS/joP+r3Npnp/HTIkhwgj7QY3nI+ZRTK9/YcyFx
pfxbqvUY8m7TAl5cznJIBLvILZ7bIe87657fJRNDwni19EyJA+7DPm9nOpiB
mntifdkwfs9r2Yqunq8EUN2ptY52HJ1/IPH5ixUbeh7OHrnv+PJqCO6Vw70T
44ZaUFk/ur2Rg7unoPnsNviGAWfK9z9ec2wT7uFG37Yf5G1QuurUsxfnnXA/
6yoJrs9VOMl60+P7hIt7K47Vm+Oz4OvDmpENTwtxn4diYKXsKHwewdm5eS3q
DyBoBz3ZPwmhcO40Y+5rHewRV7JfFVNhlyRqb4r4IPac/oWZkyr4O1F1fQfc
if3f+6Vt8X5JulCFOvMPxLWIkw==
      "]]}}, {
    {Arrowheads[{0, 0.05}], Arrow3DBox[TubeBox[{{0, 0, 0}, {0, 0, 3}}]]}, 
    {Arrowheads[{0, 0.05}], 
     Arrow3DBox[TubeBox[
      NCache[{{0, 0, 0}, {3 2^Rational[-1, 2], 3 2^Rational[-1, 2], 0}}, {{0, 
        0, 0}, {2.1213203435596424`, 2.1213203435596424`, 0}}]]]}, 
    {Arrowheads[{0, 0.05}], 
     Arrow3DBox[TubeBox[
      NCache[{{0, 0, 0}, {3 2^Rational[-1, 2], (-3) 2^Rational[-1, 2], 0}}, {{
        0, 0, 0}, {2.1213203435596424`, -2.1213203435596424`, 0}}]]]}}},
  Boxed->False]], "Input"],

Cell[BoxData[
 Graphics3DBox[{{
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, 1}, {1.4142135623730951`, 1, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 1}, {1.4142135623730951`, 0, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, 1}, {1.4142135623730951`, -1, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, 0}, {1.4142135623730951`, 1, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 0}, {1.4142135623730951`, 0, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, 0}, {1.4142135623730951`, -1, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 1, -1}, {1.4142135623730951`, 1, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, -1}, {1.4142135623730951`, 0, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -1, -1}, {1.4142135623730951`, -1, -1}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 2^Rational[1, 2], 0}, {
       1.4142135623730951`, 1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -2^Rational[1, 2], 0}, {
       1.4142135623730951`, -1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 2^Rational[1, 2]}, {
       1.4142135623730951`, 0, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, -2^Rational[1, 2]}, {
       1.4142135623730951`, 0, -1.4142135623730951`}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxd1WlQ00cYB+Aol6KIpbSCQQsogVGi6JQOmJT1IAIODAQwgCJYLCBqFYJ3
UUQ5wmG55BSC5RYaEW1obYGNisA0AkYQRSRcgSBJJAnJnxG01g/trtMP7+zM
82Fn593d3+t7IswqnEQiLf5YjI+lA4gb3Ih4Wte/a5ELhyW+8ohqgD3veq9w
RxNo8q7YKRM2YT/JfVHIY4F21/Y88i4edifqmtyqZ0BkQXbYHByPXDvGFFtq
m8HzxTsKS0Eucs2HfdUcqwtgZOiwZZt/B/LZnnzTbnYNmBiqzVjv4Y5c7cDW
P6PfBaZl6xKKXaqRK8MmOxzcP4AZR6+1bLUucrnnL5dFzbVAVetZ2+PRj1wa
FVmYnN4GZg/Qx7uF75GPxZFYc8wTQFNzaB9F9B3ygVoy+/10KtDe1cmxdk9G
3udI2+w4WgSIFeH7WXelyLuCKy6F8qoA4TfV359rhvzBEdtu7u0UQFzOjuu0
T0fOK7yUdfXUAiCud2wwNOr+z2H5XsOA+UYmILgPlxOuPsgF6QluNvsVgOCE
XjR71I5cWBkiHcqkACK4YaOx43Hkvcy193Qf7QME2VasKU1CPuDAnw42ywXa
PwX6PWUpyMWz4REDQVuAdlekyj5yAblkunVFszIXaFa2jEjoAPnr+s+rYpVM
oC7nVxnVMZC/CdtmEPHOBSjbFMlv0xTIVZS7h+KTlECR2GanuvklcvXb3x6T
OXIwVa1edqX8FHLN8amoLSYsMB79IFPPYAty7TnDwQhdM/AqbeZKCN8U+2Tj
rS9Ok0A/dGeWhXKQE7SgHe4eEvBkoK5+wk6LPTbujbR3NWi/+v2PY5vI2PM8
BtxOR4Gmcn37CtUi7DdKJNaDg+BgStCFundS7PmegT0WqyC/2HjJ7DUhdnaD
VVyZKWwXhFET8+axO3ZHyP5ogiKvlcqfN1l/cv5o5bS9DPY/pO4s0mvEnlAS
WWIeAl9Zz9seOxqK+xPq7fyZmw8cbxSt5jBccT+lFs4e/lvh1LB4+LYtHfef
nixOm7gDFcyWPtbFDHxfjHmRV1oBVIpu0WR2d/D9ik0CfGMToTp7eSJjygH5
hN3fMfLDl6GGFD7JS3+KfDhiqalVCwlqnSRWZYLHyF+uLjAQtJyA2rpztD1p
Nsj7+L+OGUR7QkJfdYCyqB55V4aLAVOtBwlfRVmAohz5/XS6k62uDySSgpKu
7t+N/KaRj8DcJhISpZTstiVc9L8qN/ptN39aBAluyHv6WT5yATlm+WunCkik
Vn5L2TiGXGhRwI/LWQqJUDeFzXNH5L1nPPM75RJImBvLTpU443zY4+tKBzNQ
e09iJB/C+4zKl3V2fdUNNR06a6hH0fsHUr+/WGfDz8PZQ/dpL7PCcF453zs2
bqoDVQ0jW+9wce4pqX47V37DgDOVex+bHFmP83Cdf+sPilYoWxHz7MV5F5yf
vGqiwi8LTrJed/k/qcB5KzlrOCdgwdGD2mHLp4U4nwdPw2r5Yfg8irt9wyqU
P4CgBnqzfxJB0dxJxtzXetijUjNfFVNgpzR6d7IkEHtO38LMcTX8nai5tg1u
//98af04XxIv1KT8A94liJM=
      "]]}}, {
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], 1}, {-1, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], 0}, {-1, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -2^Rational[1, 2], -1}, {-1, -1.4142135623730951`, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 1}, {0, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 0}, {0, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], -1}, {0, -1.4142135623730951`, -1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], 1}, {1, -1.4142135623730951`, 1}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], 0}, {1, -1.4142135623730951`, 0}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -2^Rational[1, 2], -1}, {1, -1.4142135623730951`, -1}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, -1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], -2^Rational[1, 2]}, {
       0, -1.4142135623730951`, -1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{-2^Rational[1, 2], -2^Rational[1, 2], 
        0}, {-1.4142135623730951`, -1.4142135623730951`, 0}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], -2^Rational[1, 2], 0}, {
       1.4142135623730951`, -1.4142135623730951`, 0}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxd1WlQ00cUAHCUS5GrllYwaAElMEIUnNIBSVlFIuDgaADDKVgol1rkUEQL
osh9FBBRVAwt4RKLCDS2tsJG5ZoCwQiiiIQrECAJJCH5M6LUMtNxd6Yf3uzs
b/bDe2/e7nqeDjENU1FRWbsatNVQBcTPzPAUx5vwv7XXKYvBv9JO0QREye3+
7n0PPzl4eJjlLOp+CIgzzNel9QzkHS4dJaT99YCwp2wprnqJnGdMstkVmAKU
E3S+ifIx8ldr95XeAcVA8dG/Oss0GfnYSKRJm3cnWOy7bsCNq0E+NVKbt93d
Dcht4jTOafQinxNtu3zLqRpIQ6Y7bdw+Il+wO7Q1Tq4GxB6/pvIe1yKX1XrU
9rkPAmFURGlGbhvyxWPUSW73CphIUmEs0U8jV9SE+pN534GhWlLcylw2cmWz
6lUztwwwYOe4y24c9Q0QumEBjGYh6A1kXQqur8LuNTM4WGwInp6w4DIfZGJP
LUrqss4F9aWXCvPPvsd+u3OHlg4XVhzV8llupGNnPtMmXI5ATu5lV/MACfas
4IuG7R2wuzJIOFJAxh7YYKVnFw376VsfqbX7YydZ8BV30uGQDXsu0LAY1/UX
R6OvPBPyF8PCh/xsse+PkFlHvIeCuVbdx1J8XqHfMiagAjh77/OqeCnOU17B
rtKpo8H5kD2a4R+ckEvbJBnvciRQRm4OTUmXIpektVnK7n4J5e9+7yFliZHP
VMs3XKk4CxXRM1G2G/G8TcY8LVDXtIXK81rD4WqGyN/mLFwJYhtA5XTj/S8S
VJAPQjd6eXAWJBz99rm5C5A/H6q7N2WphER80rywfzOe5/zvf5zYSYJEifuQ
a0IUnv8KDWuWbM3qvkxgNjyM/HimX3LdByEkrnv49hlv+uSQfUtv3eK1bkjE
NZgmlRsg7+CEUNJKliFhxw0X/YnuF+Qd0pf+stNsNf8Y6Zy1CPngM4rzTfVG
qLxcFlFmFIT8rdmyxamTwVARfNjhM9cjyCcbeZuzaC5QLjR2cPfejXxmlD/6
wIIKZdQMfs5UE3IJvWWAcTEPztOWeYdybiCX8u47iiyb4Cx/o49nfBpyeZF2
Gm3GBk5Z/hMrjkxFrlAJm67PfQFHw9cbmLag/kOlvcC0nNMD32y+oclpOY29
7rzjwRxzOMD+bUIzxgM5oSE7Rl5zD/bmOWnS5erYPSXlPpIK+CSXam+hhusl
0v3S8wMOwLs6RzhG5hHY75CL2tYxQaWV116jFzexM4NWqIlswCHFas/as7Bn
V35LtpoA3cY32ElX12MPdpWYv7ID/ec8rneJBdiN9ERnyxzA0EFPFypYwHU9
EuiIRybAuHhDV+9XXNyfTtUtlJMSIPT6m5EYdgH5YugTxzeFIUDs8OjUpIEq
clnD2O4mphuQUryc9b+hIV+oPNqz8cR2IN/m3fqDpBW5SDf25esLTmCxvppg
eRUin2bM9no/ZwGFIFFriYPuERw/rhw1eVEKlMMJsFocifxVFHPvjk1cQFB8
D8f9xMPzuXSGtvS1OiCisgve3kLvDOwSxhzIEPgC4urA+4VoOfI/iJpre+De
//8vrav/S1pyTea/8cWrEw==
      "]]}}, {
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, \
{-1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[1, 2]}, {-2^Rational[1, 2], 2^Rational[1, 2], 2^
        Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}, {-1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}, {1.4142135623730951`, 1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], 2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], 2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, 1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, 1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {
       2^Rational[1, 2], -2^Rational[1, 2], 2^Rational[1, 2]}}, {{
      1.4142135623730951`, -1.4142135623730951`, -1.4142135623730951`}, {
      1.4142135623730951`, -1.4142135623730951`, 1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], -2^Rational[1, 2], -2^Rational[1, 2]}, {-2^
         Rational[1, 2], -2^Rational[1, 2], 2^
        Rational[
         1, 2]}}, {{-1.4142135623730951`, -1.4142135623730951`, \
-1.4142135623730951`}, {-1.4142135623730951`, -1.4142135623730951`, 
      1.4142135623730951`}}]], 
    Line3DBox[
     NCache[{{-2^Rational[1, 2], 2^
        Rational[1, 2], -2^Rational[1, 2]}, {-2^Rational[1, 2], 2^
        Rational[1, 2], 2^Rational[1, 2]}}, {{-1.4142135623730951`, 
      1.4142135623730951`, -1.4142135623730951`}, {-1.4142135623730951`, 
      1.4142135623730951`, 1.4142135623730951`}}]], 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {0, 0, 2}}]}, 
    {RGBColor[0, 0, 1], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, 1, 2^Rational[1, 2]}, {-1, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, 0, 2^Rational[1, 2]}, {-1, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{-1, -1, 2^Rational[1, 2]}, {-1, -1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, 1, 2^Rational[1, 2]}, {0, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, 0, 2^Rational[1, 2]}, {0, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{0, -1, 2^Rational[1, 2]}, {0, -1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, 1, 2^Rational[1, 2]}, {1, 1, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, 0, 2^Rational[1, 2]}, {1, 0, 1.4142135623730951`}]]}, 
    {PointSize[0.02], 
     Point3DBox[
      NCache[{1, -1, 2^Rational[1, 2]}, {1, -1, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, 2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, 1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{0, -2^Rational[1, 2], 2^Rational[1, 2]}, {
       0, -1.4142135623730951`, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{-2^Rational[1, 2], 0, 2^Rational[1, 2]}, {-1.4142135623730951`, 
        0, 1.4142135623730951`}]]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], 
     Point3DBox[
      NCache[{2^Rational[1, 2], 0, 2^Rational[1, 2]}, {
       1.4142135623730951`, 0, 1.4142135623730951`}]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxN1X00lFkcwPEpL1NK2dZuGLVRhhNT6qw9ZNbtxYQOh0FTXqLVItVGo6RW
Ke95WUVe02iNt1gJO3bbxZ1KOCujiZRkiGFkZjIzZh4nalvn7O69/XH/eD5/
POc5v3uf7/WODDELJZFISxcXY3FpAeIWJyzescgpjSVKfEQj//fcA4i8G33d
u5pBsyd3t7S7GftpzovCOhbocO7Io+ypw25PW5db8QwITSm2WwPjkWvGmKIN
mhbwfOmuwpsgF7n6o39lmtkFMDp8dEO7byfy2d58QwG7CkwMV2ducnNFrrJl
657V7QHT0o2Xi50qkStCJjttXT+CGTuP9WyVNnKZ+y8JwpZqoKx2r+51G0Au
iQgvTMloB7OH6OOC7g/Ix+JIrDlmJFBXHfGnCr9DPlhNYX+YvgI0TVo55q4p
yPvtHLfavS4CxKrQAFaTBHlPIPdScF0FIHymBgZyjZA/OGYp4NxNBUTCtbgu
mwzkdYWXrmadWQDEjc7NevqC/x2W7dc7MN/ABATn4UrC2Qs5P+Oyi0WAHBBp
wReNHnUg7y4PkgxnUwERWG+92u4k8j7m+nvaj/wBQbEUqW8mIx+05U0HGuUC
zZ983d7SVOSi2dCwQb9tQLMnXGkTvoBcPN22qkWRC9QGraNiOkD+pvbzimgF
E6jKeBX6NQzkb0N2kMPeOwFFuzzlXbocuZLadCQ+WQHkSe1WyttfIle9++0x
JU0GpipVKxLLziBXn5yK2LaGBcajHmTrkLch15zTGwrTNgKv0mcSg3iG2Ccb
7nwRQwID0JVZGpyGnHD02+XqJgZPBmtqJ6w02KPj3kr6TEBH1vc/jm2hYM9z
G3SJiQDNZbo2XOUS7LdKxOZDQ+Bwqt+FmvcS7PnuB3tN10Je8epls9e7sbPr
zeJKDWEHP4SWlDeP3U4QJv2jGQo9DBQ/bzH/5PujFNM2UjjwkLa7SKcB++WS
8BLjIPjKfN7yxPFgPJ9gT4fPXLzgeIPQJI3hjOcpMXVw890Op0ZEI3ct6Xj+
9BRR+kQjlDNb+1kXM/F+MeaFHukFUCG84yi1asT7K1pzwDs6CaqurUxiTNki
n7D6+5TsaAJUk0In6zKeIh8JW25o1kqCGnuxWSn/MfKXJgVkfmsk1NScc9yX
boG8n/frGDnKHRK6ykPUJbXIezKdyEyVDiS85aUH5GXI72fQ7S21vSCR7Jec
FbAX+W19L76xRTgkblKvtS/joP+r3Npnp/HTIkhwgj7QY3nI+ZRTK9/YcyFx
pfxbqvUY8m7TAl5cznJIBLvILZ7bIe87657fJRNDwni19EyJA+7DPm9nOpiB
mntifdkwfs9r2Yqunq8EUN2ptY52HJ1/IPH5ixUbeh7OHrnv+PJqCO6Vw70T
44ZaUFk/ur2Rg7unoPnsNviGAWfK9z9ec2wT7uFG37Yf5G1QuurUsxfnnXA/
6yoJrs9VOMl60+P7hIt7K47Vm+Oz4OvDmpENTwtxn4diYKXsKHwewdm5eS3q
DyBoBz3ZPwmhcO40Y+5rHewRV7JfFVNhlyRqb4r4IPac/oWZkyr4O1F1fQfc
if3f+6Vt8X5JulCFOvMPxLWIkw==
      "]]}}, {
    {Arrowheads[{0, 0.05}], 
     Arrow3DBox[TubeBox[
      NCache[{{0, 0, 0}, {
        3 2^Rational[-1, 2], Rational[3, 2], Rational[3, 2]}}, {{0, 0, 0}, {
        2.1213203435596424`, 1.5, 1.5}}]]]}, 
    {Arrowheads[{0, 0.05}], 
     Arrow3DBox[TubeBox[
      NCache[{{0, 0, 0}, {
        3 2^Rational[-1, 2], Rational[-3, 2], Rational[-3, 2]}}, {{0, 0, 0}, {
        2.1213203435596424`, -1.5, -1.5}}]]]}, 
    {Arrowheads[{0, 0.05}], 
     Arrow3DBox[TubeBox[
      NCache[{{0, 0, 0}, {0, (-3) 2^Rational[-1, 2], 3 2^Rational[-1, 2]}}, {{
        0, 0, 0}, {0, -2.1213203435596424`, 2.1213203435596424`}}]]]}}},
  Boxed->False]], "Output",
 CellChangeTimes->{{3.457537950049293*^9, 3.4575379792163754`*^9}, 
   3.457639397308329*^9, 3.467384630821848*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Peres' set of 33 rays", "Subsection",
 CellChangeTimes->{{3.478395848670432*^9, 3.478395858252363*^9}, 
   3.478396384237515*^9}],

Cell["\<\
From Penrose's construction leads to this construction of 39 rays\
\>", "Text",
 CellChangeTimes->{{3.478395809800664*^9, 3.4783958395940437`*^9}, {
   3.4783959007524014`*^9, 3.4783959088971167`*^9}, 3.4783963842391233`*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4783880630315857`*^9, 3.478388122186167*^9}, 
   3.478396384241371*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   SqrtBox["2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "1"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "2"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "3"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "4"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "5"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "6"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "7"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "8"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "9"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "10"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "11"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "r"}], "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "12"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "r", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "13"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "r", "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "r"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Beta]", "k"], "=", 
      RowBox[{
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"-", "1"}]},
          {"0", "1", "0"},
          {"1", "0", "0"}
         }], "\[NoBreak]", ")"}], ".", 
       SubscriptBox["\[Alpha]", "k"]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "13"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Gamma]", "k"], "=", 
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0"},
         {"0", "0", 
          RowBox[{"-", "1"}]},
         {"0", "1", "0"}
        }], "\[NoBreak]", ")"}], ".", 
      SubscriptBox["\[Beta]", "k"]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "13"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.478351236843603*^9, 3.478351237444549*^9}, 
   3.478396384260324*^9}],

Cell["of which three, however, have been given multiple names", "Text",
 CellChangeTimes->{{3.47839599247353*^9, 3.478396016140211*^9}, {
   3.478396162345895*^9, 3.478396162955368*^9}, 3.478396384266964*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Alpha]", "j"], "\[Equal]", 
       SubscriptBox["\[Beta]", "k"]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "13"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "13"}], "}"}]}], "]"}], "]"}], ",", 
   "True"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Alpha]", "j"], "\[Equal]", 
       SubscriptBox["\[Gamma]", "k"]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "13"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "13"}], "}"}]}], "]"}], "]"}], ",", 
   "True"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Beta]", "j"], "\[Equal]", 
       SubscriptBox["\[Gamma]", "k"]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "13"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "13"}], "}"}]}], "]"}], "]"}], ",", 
   "True"}], "]"}]}], "Input",
 CellChangeTimes->{{3.478351332765628*^9, 3.4783514328761063`*^9}, {
   3.478351887486661*^9, 3.478351917000061*^9}, {3.47839602478806*^9, 
   3.478396039063409*^9}, {3.4783960969747257`*^9, 3.478396146850482*^9}, 
   3.478396384271598*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.478351434709056*^9, {3.4783518938107567`*^9, 3.4783519182398233`*^9}, 
   3.478396058848935*^9, 3.478396104001683*^9, 3.4783961511147137`*^9, 
   3.4783963842803383`*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.478351434709056*^9, {3.4783518938107567`*^9, 3.4783519182398233`*^9}, 
   3.478396058848935*^9, 3.478396104001683*^9, 3.478396151149723*^9, 
   3.478396384291615*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.478351434709056*^9, {3.4783518938107567`*^9, 3.4783519182398233`*^9}, 
   3.478396058848935*^9, 3.478396104001683*^9, 3.4783961512211943`*^9, 
   3.478396384298493*^9}]
}, Open  ]],

Cell["Specifically,", "Text",
 CellChangeTimes->{{3.4783963704242697`*^9, 3.478396384307927*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Alpha]", "12"], "\[Equal]", 
  SubscriptBox["\[Beta]", "13"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Alpha]", "11"], "\[Equal]", 
  SubscriptBox["\[Gamma]", "13"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Beta]", "11"], "\[Equal]", 
  SubscriptBox["\[Gamma]", "10"]}]}], "Input",
 CellChangeTimes->{{3.478396282071486*^9, 3.478396339690894*^9}, {
  3.478396384338932*^9, 3.478396402846134*^9}}],

Cell[BoxData["True"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.4783963024130917`*^9, 3.4783963414622173`*^9, {3.478396384346373*^9, 
   3.478396405714061*^9}}],

Cell[BoxData["True"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.4783963024130917`*^9, 3.4783963414622173`*^9, {3.478396384346373*^9, 
   3.4783964056936703`*^9}}],

Cell[BoxData["True"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.4783963024130917`*^9, 3.4783963414622173`*^9, {3.478396384346373*^9, 
   3.4783964056745443`*^9}}]
}, Open  ]],

Cell["\<\
Normalizing the 39 \[Alpha]/\[Beta]/\[Gamma] vectors and taking those \
identifications into account, we arrive at a list of \
\>", "Text",
 CellChangeTimes->{{3.4783965729501038`*^9, 3.4783966299903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"9", "+", "9", "+", "9", "+", "6"}]], "Input",
 CellChangeTimes->{{3.478396647894081*^9, 3.4783966517446127`*^9}}],

Cell[BoxData["33"], "Output",
 CellChangeTimes->{3.478396653628572*^9}]
}, Open  ]],

Cell["unit vectors (rays)", "Text",
 CellChangeTimes->{{3.4783966750331917`*^9, 3.47839671942735*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "k"], "=", 
     FractionBox[
      SubscriptBox["\[Alpha]", "k"], 
      RowBox[{"Norm", "[", 
       SubscriptBox["\[Alpha]", "k"], "]"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "13"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["b", "k"], "=", 
     FractionBox[
      SubscriptBox["\[Beta]", "k"], 
      RowBox[{"Norm", "[", 
       SubscriptBox["\[Beta]", "k"], "]"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "13"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["c", "k"], "=", 
     FractionBox[
      SubscriptBox["\[Gamma]", "k"], 
      RowBox[{"Norm", "[", 
       SubscriptBox["\[Gamma]", "k"], "]"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "13"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", "1"], "=", 
   SubscriptBox["a", "10"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", "2"], "=", 
   SubscriptBox["a", "11"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", "3"], "=", 
   SubscriptBox["a", "12"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", "4"], "=", 
   SubscriptBox["a", "13"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", "5"], "=", 
   SubscriptBox["b", "10"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", "6"], "=", 
   SubscriptBox["b", "11"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.478351718062091*^9, 3.478351726124123*^9}, 
   3.478396384397131*^9}],

Cell["to which I now give unified names:", "Text",
 CellChangeTimes->{{3.478396725066594*^9, 3.4783967328418303`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["R", "1"], "=", 
   SubscriptBox["a", "1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "2"], "=", 
   SubscriptBox["a", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "3"], "=", 
   SubscriptBox["a", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "4"], "=", 
   SubscriptBox["a", "4"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "5"], "=", 
   SubscriptBox["a", "5"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "6"], "=", 
   SubscriptBox["a", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "7"], "=", 
   SubscriptBox["a", "7"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "8"], "=", 
   SubscriptBox["a", "8"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "9"], "=", 
   SubscriptBox["a", "9"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "10"], "=", 
   SubscriptBox["b", "1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "11"], "=", 
   SubscriptBox["b", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "12"], "=", 
   SubscriptBox["b", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "13"], "=", 
   SubscriptBox["b", "4"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "14"], "=", 
   SubscriptBox["b", "5"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "15"], "=", 
   SubscriptBox["b", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "16"], "=", 
   SubscriptBox["b", "7"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "17"], "=", 
   SubscriptBox["b", "8"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "18"], "=", 
   SubscriptBox["b", "9"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "19"], "=", 
   SubscriptBox["c", "1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "20"], "=", 
   SubscriptBox["c", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "21"], "=", 
   SubscriptBox["c", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "22"], "=", 
   SubscriptBox["c", "4"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "23"], "=", 
   SubscriptBox["c", "5"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "24"], "=", 
   SubscriptBox["c", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "25"], "=", 
   SubscriptBox["c", "7"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "26"], "=", 
   SubscriptBox["c", "8"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "27"], "=", 
   SubscriptBox["c", "9"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "28"], "=", 
   SubscriptBox["x", "1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "29"], "=", 
   SubscriptBox["x", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "30"], "=", 
   SubscriptBox["x", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "31"], "=", 
   SubscriptBox["x", "4"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "32"], "=", 
   SubscriptBox["x", "5"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["R", "33"], "=", 
   SubscriptBox["x", "6"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4783521208759747`*^9, 3.4783524435273323`*^9}, 
   3.478396384402122*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4783967640965157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identification of orthogonal pairs of Peres rays", "Subsection",
 CellChangeTimes->{{3.4783967729894123`*^9, 3.478396778350868*^9}, {
  3.47839684335042*^9, 3.478396846091543*^9}}],

Cell["Peres rays can be taken in", "Text",
 CellChangeTimes->{{3.478396796418095*^9, 3.478396797024352*^9}, {
  3.47839692613379*^9, 3.478396952853232*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{"33", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.4783969387957153`*^9, 3.4783969465496798`*^9}}],

Cell[BoxData["528"], "Output",
 CellChangeTimes->{3.478396947417107*^9}]
}, Open  ]],

Cell["distinct pairwise combinations. From", "Text",
 CellChangeTimes->{{3.478396956817286*^9, 3.47839696696085*^9}, {
  3.478397436215938*^9, 3.478397438074874*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"DotProd", "[", 
       RowBox[{
        SubscriptBox["R", "i"], ",", 
        SubscriptBox["R", "j"]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "32"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"i", "+", "1"}], ",", "33"}], "}"}]}], "]"}], "]"}], ",", 
   "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.478352654289913*^9, 3.478352702551009*^9}, {
   3.478352743234164*^9, 3.478352774211615*^9}, 3.4783963844071293`*^9}],

Cell[BoxData["72"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.4783527063309*^9, {3.478352754049144*^9, 3.478352776085218*^9}, 
   3.478388215938867*^9, 3.4783963844092007`*^9, 3.4783968026338453`*^9}]
}, Open  ]],

Cell[TextData[{
 "we see that there are a total of 72 ",
 StyleBox["orthogonal",
  FontSlant->"Italic"],
 " pairs or Peres rays. To discover their identities, we proceed"
}], "Text",
 CellChangeTimes->{{3.478396811683124*^9, 3.4783968726639357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NamedPair", "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"DotProd", "[", 
      RowBox[{
       SubscriptBox["R", "i"], ",", 
       SubscriptBox["R", "j"]}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4783880100816193`*^9, 3.4783880295989313`*^9}, 
   3.478396384412231*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MasterPairList", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"NamedPair", "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "32"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"i", "+", "1"}], ",", "33"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4783882897749166`*^9, 3.478388371134755*^9}, 
   3.4783963844152613`*^9, 3.478397040384651*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.478388466614045*^9, 3.478388474244022*^9}, 
   3.478396384678507*^9}],

Cell[BoxData["528"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478388475467079*^9, 3.478396384679545*^9, 
  3.4783970529620256`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"OrthogonalPairSearch", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
         "MasterPairList", "\[LeftDoubleBracket]", "k", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], "==", 
        RowBox[{"{", "0", "}"}]}], ",", 
       RowBox[{
        RowBox[{
        "MasterPairList", "\[LeftDoubleBracket]", "k", 
         "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
        "\[RightDoubleBracket]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "528"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4783884290190697`*^9, 3.478388459678835*^9}, {
   3.478388517251182*^9, 3.478388524844776*^9}, 3.4783963846895113`*^9, 
   3.478397077343158*^9}],

Cell["The beginning of that long list looks like this:", "Text",
 CellChangeTimes->{{3.4783971259915257`*^9, 3.478397137257866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"%", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.478397092632699*^9, 3.478397109246893*^9}, 
   3.478397149689554*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9"}], "}"}], ",", "Null", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "11"}], "}"}], ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "26"}], "}"}], ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "33"}], "}"}], ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "12"}], "}"}], ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.478397110807973*^9, 3.4783971511637993`*^9}]
}, Open  ]],

Cell[TextData[{
 "We (by hand!) erase all the ",
 StyleBox["Null", "Output"],
 "s, and obtain this named list of orthogonal pairs of Peres rays:"
}], "Text",
 CellChangeTimes->{{3.4783971588822517`*^9, 3.4783972069374447`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"OrthogonalPairs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "33"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "33"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "19"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "18"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "33"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "18"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "28"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "19"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "28"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "28"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "31"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"23", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"23", ",", "31"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "31"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "31"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"32", ",", "33"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.478389749558259*^9, 3.4783897787681723`*^9}, 
   3.478396384694601*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "OrthogonalPairs", "]"}]], "Input",
 CellChangeTimes->{{3.478388919749984*^9, 3.478389256222073*^9}, {
   3.478389790635354*^9, 3.47838979392372*^9}, 3.478396384696032*^9}],

Cell[BoxData["72"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478389257676013*^9, 3.4783897962834387`*^9, 
  3.478396384697176*^9, 3.4783972561142*^9}]
}, Open  ]],

Cell["\<\
We will have need of this list later in the discussion. For the moment is \
useful mainly as methodological guidance when we turn to construction of a \
named list of orthogonal triads:\
\>", "Text",
 CellChangeTimes->{{3.478397278536908*^9, 3.4783973749613667`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.478388260571969*^9, 3.478396384698221*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identification of orthogonal triads", "Subsection",
 CellChangeTimes->{{3.478397403277409*^9, 3.4783974166249228`*^9}}],

Cell["Peres rays can be taken in", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Binomial", "[", 
  RowBox[{"33", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.478352934667817*^9, 3.478352942030587*^9}, 
   3.478396384699587*^9}],

Cell[BoxData["5456"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4783529459981203`*^9, 3.478396384700609*^9}]
}, Open  ]],

Cell["distinct triadic combinations. From", "Text",
 CellChangeTimes->{{3.478397469926338*^9, 3.478397501165804*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Triad", "[", 
   RowBox[{"i_", ",", "j_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DotProd", "[", 
     RowBox[{
      SubscriptBox["R", "i"], ",", 
      SubscriptBox["R", "j"]}], "]"}], ",", 
    RowBox[{"DotProd", "[", 
     RowBox[{
      SubscriptBox["R", "i"], ",", 
      SubscriptBox["R", "k"]}], "]"}], ",", 
    RowBox[{"DotProd", "[", 
     RowBox[{
      SubscriptBox["R", "k"], ",", 
      SubscriptBox["R", "j"]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.47835385868714*^9, 3.4783538772306004`*^9}, 
   3.4783539248939133`*^9, 3.4783963847082357`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Triad", "[", 
        RowBox[{"i", ",", "j", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "31"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"i", "+", "1"}], ",", "32"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"j", "+", "1"}], ",", "33"}], "}"}]}], "]"}], ",", "2"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.478352813900988*^9, 3.478352908983015*^9}, {
   3.478352956095611*^9, 3.4783529980821*^9}, {3.478353943732233*^9, 
   3.478353954611763*^9}, 3.47839638471047*^9}],

Cell[BoxData["16"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478352914677272*^9, 3.4783529587332983`*^9, 
  3.4783530010111713`*^9, 3.4783539629318943`*^9, 3.478396384711927*^9, 
  3.478397511803198*^9}]
}, Open  ]],

Cell["\<\
we see that only 16 (only 0.29%) comprise orthogonal triads. To discover \
those (and their names) we proceed very much as before:\
\>", "Text",
 CellChangeTimes->{{3.478397527193511*^9, 3.478397538281534*^9}, {
  3.478397658412231*^9, 3.478397729636442*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DotProd", "[", 
         RowBox[{
          SubscriptBox["R", "i"], ",", 
          SubscriptBox["R", "j"]}], "]"}], ",", 
        RowBox[{"DotProd", "[", 
         RowBox[{
          SubscriptBox["R", "i"], ",", 
          SubscriptBox["R", "k"]}], "]"}], ",", 
        RowBox[{"DotProd", "[", 
         RowBox[{
          SubscriptBox["R", "k"], ",", 
          SubscriptBox["R", "j"]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "31"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"i", "+", "1"}], ",", "32"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"j", "+", "1"}], ",", "33"}], "}"}]}], "]"}], ",", "2"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{3.47839638471449*^9, 3.478397744502602*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NamedTriad", "[", 
   RowBox[{"i_", ",", "j_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DotProd", "[", 
       RowBox[{
        SubscriptBox["R", "i"], ",", 
        SubscriptBox["R", "j"]}], "]"}], ",", 
      RowBox[{"DotProd", "[", 
       RowBox[{
        SubscriptBox["R", "i"], ",", 
        SubscriptBox["R", "k"]}], "]"}], ",", 
      RowBox[{"DotProd", "[", 
       RowBox[{
        SubscriptBox["R", "k"], ",", 
        SubscriptBox["R", "j"]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.47835403102814*^9, 3.478354084997903*^9}, 
   3.478396384717456*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MasterTriadList", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"NamedTriad", "[", 
        RowBox[{"i", ",", "j", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "31"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"i", "+", "1"}], ",", "32"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"j", "+", "1"}], ",", "33"}], "}"}]}], "]"}], ",", "2"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4783541317750177`*^9, 3.478354284827351*^9}, {
   3.4783543326965523`*^9, 3.478354364283453*^9}, 3.478396384720632*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "MasterTriadList", "]"}]], "Input",
 CellChangeTimes->{{3.478354424796953*^9, 3.47835443221984*^9}, 
   3.478396384722062*^9}],

Cell[BoxData["5456"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4783544345462646`*^9, 3.47839638472442*^9, 
  3.478397767128903*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"OrthogonalTriadSearch", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
         "MasterTriadList", "\[LeftDoubleBracket]", "k", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], "==", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{
        "MasterTriadList", "\[LeftDoubleBracket]", "k", 
         "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
        "\[RightDoubleBracket]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "5456"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.478354456710134*^9, 3.478354525520973*^9}, {
   3.4783550237947598`*^9, 3.4783550279406643`*^9}, 3.478396384735345*^9}],

Cell["I show a small portion of that very long list:", "Text",
 CellChangeTimes->{{3.478397832734953*^9, 3.478397851952567*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"OrthogonalTriadSearch", ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "300"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.478355043776753*^9, 3.478355081920875*^9}, {
   3.478355119622493*^9, 3.478355122946804*^9}, 3.478396384737797*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "33"}], "}"}], ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.4783550633765593`*^9, 3.478355082492276*^9}, 
   3.478355124532442*^9, 3.478396384742631*^9}]
}, Open  ]],

Cell[TextData[{
 "Removing (by hand!!) all the ",
 StyleBox["Null", "Output"],
 "s, we obtain"
}], "Text",
 CellChangeTimes->{{3.478397861169527*^9, 3.478397885834343*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"OrthogonalTriads", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "9", ",", "33"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "11", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "14", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "13", ",", "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "14", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "15", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "32", ",", "33"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "14", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "17", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "28", ",", "29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"23", ",", "30", ",", "31"}], "}"}]}], "}"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.478354544610352*^9, 3.4783546216645203`*^9}, {
   3.4783558437619534`*^9, 3.478355856429591*^9}, 3.478396384744969*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "OrthogonalTriads", "]"}]], "Input",
 CellChangeTimes->{{3.478354873522015*^9, 3.4783549042787046`*^9}, 
   3.478355876321938*^9, 3.478396384746467*^9}],

Cell[BoxData["16"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478354907575467*^9, 3.4783558780885477`*^9, 
  3.478396384747439*^9, 3.478397904795714*^9}]
}, Open  ]],

Cell["From", "Text",
 CellChangeTimes->{{3.478398054661817*^9, 3.478398055299943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Count", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "OrthogonalTriads", "]"}], ",", "k"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "33"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.478355897707548*^9, 3.478355905505004*^9}, {
   3.478356034363633*^9, 3.478356067465576*^9}, 3.4783963847490597`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "4", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "4", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "4", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478356073610321*^9, 3.478396384750476*^9}]
}, Open  ]],

Cell["\<\
we see that most rays appear in only a single triad, but three are members \
simultaneously of 4 triads, while six are members simultaneously of 2 triads. \
As per the following diagram: \
\>", "Text",
 CellChangeTimes->{{3.478398064220994*^9, 3.478398176025001*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {PointSize[0.02], 
    PointBox[NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-
       Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1, -
       Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}]]}, 
   {RGBColor[0, 0, 1], PointSize[0.02], 
    PointBox[NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], PointBox[{0, 0}]}, 
   {RGBColor[0, 0, 1], PointSize[0.02], 
    PointBox[NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}]]}, 
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      0, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {0, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{
      0, Sin[Rational[1, 8] Pi]}, {-Sin[Rational[1, 8] Pi], 1}}, {{
      0, 0.3826834323650898}, {-0.3826834323650898, 1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], 1}, {
      Sin[Rational[1, 8] Pi], 1}}, {{-0.3826834323650898, 1}, {
      0.3826834323650898, 1}}]], 
   LineBox[NCache[{{Sin[Rational[1, 8] Pi], 1}, {
      0, Sin[Rational[1, 8] Pi]}}, {{0.3826834323650898, 1}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {
      Sin[Rational[1, 8] Pi], -1}}, {{0, -0.3826834323650898}, {
      0.3826834323650898, -1}}]], 
   LineBox[NCache[{{
      Sin[Rational[1, 8] Pi], -1}, {-Sin[Rational[1, 8] Pi], -1}}, {{
      0.3826834323650898, -1}, {-0.3826834323650898, -1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], -1}, {
      0, -Sin[Rational[1, 8] Pi]}}, {{-0.3826834323650898, -1}, {
      0, -0.3826834323650898}}]], 
   LineBox[NCache[{{0, 0}, {1, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      1, 0.3826834323650898}}]], 
   LineBox[NCache[{{1, Sin[Rational[1, 8] Pi]}, {
      1, -Sin[Rational[1, 8] Pi]}}, {{1, 0.3826834323650898}, {
      1, -0.3826834323650898}}]], 
   LineBox[NCache[{{1, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      1, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {-1, -Sin[Rational[1, 8] Pi]}}, {{0, 
      0}, {-1, -0.3826834323650898}}]], 
   LineBox[NCache[{{-1, -Sin[Rational[1, 8] Pi]}, {-1, Sin[
       Rational[1, 8] Pi]}}, {{-1, -0.3826834323650898}, {-1, 
       0.3826834323650898}}]], 
   LineBox[NCache[{{-1, Sin[Rational[1, 8] Pi]}, {0, 
      0}}, {{-1, 0.3826834323650898}, {0, 0}}]], 
   {PointSize[0.02], 
    PointBox[NCache[{
      4 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {1.5307337294603591`, -0.9884814442135508}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      2.1480502970952693`, -1.605798011848461}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      1 + 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {
      2.1480502970952693`, -2.3711648765786406`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      4 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1.5307337294603591`, -2.9884814442135506`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      2 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {0.7653668647301796, -2.9884814442135506`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1 + 
       3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {
      0.1480502970952693, -2.3711648765786406`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {0.1480502970952693, -1.605798011848461}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      2 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      0.7653668647301796, -0.9884814442135508}]]}, 
   {RGBColor[0, 0, 1], PointSize[0.02], 
    PointBox[NCache[{
      3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2])
         Sin[Rational[1, 8] Pi]}, {
      1.1480502970952693`, -2.3711648765786406`}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1.1480502970952693`, -1.9884814442135508`}]]}, 
   {RGBColor[0, 0, 1], PointSize[0.02], 
    PointBox[NCache[{
      3 Sin[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {1.1480502970952693`, -1.605798011848461}]]}, 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2])
         Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -2.3711648765786406`}, {
     1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -1.9884814442135508`}, {
     1.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      2 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{1.1480502970952693`, -1.605798011848461}, {
     0.7653668647301796, -0.9884814442135508}}]], 
   LineBox[NCache[{{
      2 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      4 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{0.7653668647301796, -0.9884814442135508}, {
     1.5307337294603591`, -0.9884814442135508}}]], 
   LineBox[NCache[{{
      4 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.5307337294603591`, -0.9884814442135508}, {
     1.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2])
         Sin[Rational[1, 8] Pi]}, {
      4 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -2.3711648765786406`}, {
     1.5307337294603591`, -2.9884814442135506`}}]], 
   LineBox[NCache[{{
      4 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      2 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.5307337294603591`, -2.9884814442135506`}, {
     0.7653668647301796, -2.9884814442135506`}}]], 
   LineBox[NCache[{{
      2 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2])
         Sin[Rational[1, 8] Pi]}}, {{
     0.7653668647301796, -2.9884814442135506`}, {
     1.1480502970952693`, -2.3711648765786406`}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -1.9884814442135508`}, {
     2.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{
      1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1 + 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}}, {{
     2.1480502970952693`, -1.605798011848461}, {
     2.1480502970952693`, -2.3711648765786406`}}]], 
   LineBox[
    NCache[{{1 + 
       3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     2.1480502970952693`, -2.3711648765786406`}, {
     1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-1 + 
       3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -1.9884814442135508`}, {
     0.1480502970952693, -2.3711648765786406`}}]], 
   LineBox[NCache[{{-1 + 
       3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {-1 + 
       3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     0.1480502970952693, -2.3711648765786406`}, {
     0.1480502970952693, -1.605798011848461}}]], 
   LineBox[NCache[{{-1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{0.1480502970952693, -1.605798011848461}, {
     1.1480502970952693`, -1.9884814442135508`}}]], 
   {PointSize[0.02], 
    PointBox[NCache[{(-2) Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-0.7653668647301796, -0.9884814442135508}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-0.1480502970952693, -1.605798011848461}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      1 - 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-0.1480502970952693, -2.3711648765786406`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{(-2) Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-0.7653668647301796, -2.9884814442135506`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{(-4) Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-1.5307337294603591`, -2.9884814442135506`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1 - 3 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-2.1480502970952693`, -2.3711648765786406`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-2.1480502970952693`, -1.605798011848461}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{(-4) Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-1.5307337294603591`, -0.9884814442135508}]]}, 
   {RGBColor[0, 0, 1], PointSize[0.02], 
    PointBox[NCache[{(-3) 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-1.1480502970952693`, -2.3711648765786406`}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-1.1480502970952693`, -1.9884814442135508`}]]}, 
   {RGBColor[0, 0, 1], PointSize[0.02], 
    PointBox[NCache[{(-3) Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-1.1480502970952693`, -1.605798011848461}]]},
    LineBox[NCache[{{(-3) 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -2.3711648765786406`}, \
{-1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -1.9884814442135508`}, \
{-1.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-4) Sin[Rational[1, 8] Pi], 
       1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -1.605798011848461}, \
{-1.5307337294603591`, -0.9884814442135508}}]], 
   LineBox[NCache[{{(-4) Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-2) Sin[Rational[1, 8] Pi], 
       1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.5307337294603591`, -0.9884814442135508}, \
{-0.7653668647301796, -0.9884814442135508}}]], 
   LineBox[NCache[{{(-2) Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-0.7653668647301796, -0.9884814442135508}, \
{-1.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{(-3) 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-2) 
       Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -2.3711648765786406`}, \
{-0.7653668647301796, -2.9884814442135506`}}]], 
   LineBox[NCache[{{(-2) Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-4) 
       Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-0.7653668647301796, -2.9884814442135506`}, \
{-1.5307337294603591`, -2.9884814442135506`}}]], 
   LineBox[NCache[{{(-4) Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.5307337294603591`, -2.9884814442135506`}, \
{-1.1480502970952693`, -2.3711648765786406`}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -1.9884814442135508`}, \
{-0.1480502970952693, -1.605798011848461}}]], 
   LineBox[NCache[{{
      1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1 - 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-0.1480502970952693, -1.605798011848461}, \
{-0.1480502970952693, -2.3711648765786406`}}]], 
   LineBox[NCache[{{
      1 - 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-0.1480502970952693, -2.3711648765786406`}, \
{-1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-1 - 3 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -1.9884814442135508`}, \
{-2.1480502970952693`, -2.3711648765786406`}}]], 
   LineBox[NCache[{{-1 - 3 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-2.1480502970952693`, -2.3711648765786406`}, \
{-2.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{-1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-2.1480502970952693`, -1.605798011848461}, \
{-1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{0, 0}, {
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[
    NCache[{{3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -1.9884814442135508`}, {-1.1480502970952693`, \
-1.9884814442135508`}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {0, 
      0}}, {{-1.1480502970952693`, -1.9884814442135508`}, {0, 
      0}}]]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.4560843600915937`*^9, 3.4560844175746098`*^9, 3.456084450161973*^9, 
   3.45608450328505*^9, 3.456084585384015*^9, 3.456084658207897*^9, 
   3.456084802211738*^9, 3.456084928188367*^9, 3.456085746886993*^9, {
   3.456085805743764*^9, 3.456085827876017*^9}, 3.4560862936683807`*^9, 
   3.456086503971876*^9, 3.4561426030201797`*^9, 3.456142661387204*^9, 
   3.4783963847601433`*^9}],

Cell[TextData[{
 "The ",
 StyleBox["three red",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " dots refer to center-of-face rays, the ",
 StyleBox["six blue",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " dots to center of edge rays."
}], "Text",
 CellChangeTimes->{{3.4783577460583553`*^9, 3.478357776062345*^9}, 
   3.478396384766008*^9, {3.47839819512738*^9, 3.478398226741424*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4783983084907207`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists of companions", "Subsection",
 CellChangeTimes->{{3.478398338907523*^9, 3.4783983438308773`*^9}}],

Cell[TextData[{
 "To discover the identities of the rays that share triad membership with \
(say) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "5"], 
    StyleBox[" ", "Text"], 
    StyleBox["we", "Text"], 
    StyleBox[" ", "Text"], 
    StyleBox["proceed", "Text"]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.478398361442527*^9, 3.478398424717414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Intersection", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"OrthogonalTriads", ",", "j"}], "]"}], ",", 
        RowBox[{"{", "5", "}"}]}], "]"}], "\[NotEqual]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Part", "[", 
      RowBox[{"OrthogonalTriads", ",", "j"}], "]"}], ",", 
     RowBox[{"{", "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "16"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.478358264497491*^9, 3.478396384768342*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "14", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "32", ",", "33"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.47835826629494*^9, 3.478358372439725*^9, 
  3.478396384770905*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.478358293205616*^9, 3.478358296993719*^9}, 
   3.478396384772469*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "13", ",", "22", ",", "5", ",", "14", ",", "23", ",", "5", ",", 
   "15", ",", "24", ",", "5", ",", "32", ",", "33"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478358298873102*^9, 3.4783583760584803`*^9, 
  3.4783963847736473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.4783583095296097`*^9, 3.4783583175521507`*^9}, 
   3.4783963847751904`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "13", ",", "22", ",", "14", ",", "23", ",", "15", ",", "24", ",", 
   "32", ",", "33"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478358319140154*^9, 3.478358384379573*^9, 
  3.47839638477674*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{"%", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.4783583893757143`*^9, 3.47835840902992*^9}, 
   3.4783963847780943`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13", ",", "22", ",", "14", ",", "23", ",", "15", ",", "24", ",", "32", ",",
    "33"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4783584101938066`*^9, 3.478396384779327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.478358329779552*^9, 3.478358332847611*^9}, 
   3.478396384780645*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13", ",", "14", ",", "15", ",", "22", ",", "23", ",", "24", ",", "32", ",",
    "33"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478358334529065*^9, 3.478358427373329*^9, 
  3.478396384781818*^9}]
}, Open  ]],

Cell["\<\
I conflate that sequence of commands to construct \"companions lists\" for \
each of Peres' 33 rays:\
\>", "Text",
 CellChangeTimes->{{3.478398452668498*^9, 3.4783984877587767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompanionsList", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sort", "[", "\[IndentingNewLine]", 
     RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Intersection", "[", 
               RowBox[{
                RowBox[{"Part", "[", 
                 RowBox[{"OrthogonalTriads", ",", "j"}], "]"}], ",", 
                RowBox[{"{", "k", "}"}]}], "]"}], "\[NotEqual]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"Part", "[", 
              RowBox[{"OrthogonalTriads", ",", "j"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "16"}], "}"}]}], "]"}], "]"}], "]"}], 
       ",", "\[IndentingNewLine]", "k"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "33"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4783590158796463`*^9, 3.4783590642072363`*^9}, 
   3.47839638478559*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "13", ",", "14", ",", "15", ",", "22", ",", "23", ",", "24", ",", "32", 
     ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "5", ",", "6", ",", "20", ",", "23", ",", "26", ",", "28", ",", 
     "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "5", ",", "8", ",", "11", ",", "14", ",", "17", ",", "30", ",", 
     "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "14", ",", "18", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "14", ",", "16", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "23", ",", "27", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "23", ",", "25", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "7", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9", ",", "32"}], "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478359069513529*^9, 3.478359224262796*^9, 
  3.4783833142629147`*^9, 3.478396384789301*^9, 3.4783985170904913`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.478359202145824*^9, 3.478359218774762*^9}, 
   3.4783963847906513`*^9}],

Cell[BoxData["33"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.478359211946867*^9, 3.47835922900413*^9}, 
   3.4783833196713953`*^9, 3.4783963847916937`*^9, 3.478398528815398*^9}]
}, Open  ]],

Cell["From", "Text",
 CellChangeTimes->{{3.4783985924441338`*^9, 3.478398592955406*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Count", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "CompanionsList", "]"}], ",", "k"}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "33"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4783591806688337`*^9, 3.4783591844695797`*^9}, 
   3.478396384795257*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "2", ",", "2", ",", "2", ",", "8", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "8", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "8", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "4", ",", "4", ",", "4", ",", 
   "4", ",", "4", ",", "4"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478359235666819*^9, 3.478383323584136*^9, 
  3.4783963847967567`*^9, 3.478398701820086*^9}]
}, Open  ]],

Cell["\<\
we see that three rays have 8 companions, six have 4 companions, the rest \
have only 2. The following list indicates how many companions each specific \
ray has:\
\>", "Text",
 CellChangeTimes->{{3.4783985963456078`*^9, 3.4783986928437843`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "CompanionsList", "]"}], ",", "k"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "33"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4783617879476852`*^9, 3.4783617934230328`*^9}, 
   3.478396384798499*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "4"}], "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478359391547502*^9, 3.478361795728303*^9, 
  3.4783833389402637`*^9, 3.478396384800868*^9, 3.47839871181279*^9}]
}, Open  ]],

Cell["\<\
I use that information to define a \"number of companions\" function of \
ray-name:\
\>", "Text",
 CellChangeTimes->{{3.47839874445217*^9, 3.478398775442935*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Companions", "[", "k_", "]"}], ":=", 
  RowBox[{"Part", "[", 
   RowBox[{"CompanionsList", ",", "k"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.478359818332138*^9, 3.4783598557775393`*^9}, 
   3.4783963848037167`*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.478398828799965*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Attempts to paint triads in conformity with the 110 principle\
\>", "Subsection",
 CellChangeTimes->{{3.478398876412224*^9, 3.4783989053981113`*^9}}],

Cell["This looks like a solution of the ray-painting problem:", "Text",
 CellChangeTimes->{{3.4783989616623898`*^9, 3.47839899286508*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {PointSize[0.02], 
    PointBox[NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-
       Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1, -
       Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}]]}, 
   {PointSize[0.02], PointBox[{0, 0}]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}]]}, 
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      0, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {0, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{
      0, Sin[Rational[1, 8] Pi]}, {-Sin[Rational[1, 8] Pi], 1}}, {{
      0, 0.3826834323650898}, {-0.3826834323650898, 1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], 1}, {
      Sin[Rational[1, 8] Pi], 1}}, {{-0.3826834323650898, 1}, {
      0.3826834323650898, 1}}]], 
   LineBox[NCache[{{Sin[Rational[1, 8] Pi], 1}, {
      0, Sin[Rational[1, 8] Pi]}}, {{0.3826834323650898, 1}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {
      Sin[Rational[1, 8] Pi], -1}}, {{0, -0.3826834323650898}, {
      0.3826834323650898, -1}}]], 
   LineBox[NCache[{{
      Sin[Rational[1, 8] Pi], -1}, {-Sin[Rational[1, 8] Pi], -1}}, {{
      0.3826834323650898, -1}, {-0.3826834323650898, -1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], -1}, {
      0, -Sin[Rational[1, 8] Pi]}}, {{-0.3826834323650898, -1}, {
      0, -0.3826834323650898}}]], 
   LineBox[NCache[{{0, 0}, {1, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      1, 0.3826834323650898}}]], 
   LineBox[NCache[{{1, Sin[Rational[1, 8] Pi]}, {
      1, -Sin[Rational[1, 8] Pi]}}, {{1, 0.3826834323650898}, {
      1, -0.3826834323650898}}]], 
   LineBox[NCache[{{1, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      1, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {-1, -Sin[Rational[1, 8] Pi]}}, {{0, 
      0}, {-1, -0.3826834323650898}}]], 
   LineBox[NCache[{{-1, -Sin[Rational[1, 8] Pi]}, {-1, Sin[
       Rational[1, 8] Pi]}}, {{-1, -0.3826834323650898}, {-1, 
       0.3826834323650898}}]], 
   LineBox[NCache[{{-1, Sin[Rational[1, 8] Pi]}, {0, 
      0}}, {{-1, 0.3826834323650898}, {0, 0}}]], 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{
      4 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {1.5307337294603591`, -0.9884814442135508}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      2.1480502970952693`, -1.605798011848461}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      1 + 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {
      2.1480502970952693`, -2.3711648765786406`}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{
      4 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1.5307337294603591`, -2.9884814442135506`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      2 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {0.7653668647301796, -2.9884814442135506`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1 + 
       3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {
      0.1480502970952693, -2.3711648765786406`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {0.1480502970952693, -1.605798011848461}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      2 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      0.7653668647301796, -0.9884814442135508}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2])
         Sin[Rational[1, 8] Pi]}, {
      1.1480502970952693`, -2.3711648765786406`}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1.1480502970952693`, -1.9884814442135508`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      3 Sin[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {1.1480502970952693`, -1.605798011848461}]]}, 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2])
         Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -2.3711648765786406`}, {
     1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -1.9884814442135508`}, {
     1.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      2 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{1.1480502970952693`, -1.605798011848461}, {
     0.7653668647301796, -0.9884814442135508}}]], 
   LineBox[NCache[{{
      2 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      4 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{0.7653668647301796, -0.9884814442135508}, {
     1.5307337294603591`, -0.9884814442135508}}]], 
   LineBox[NCache[{{
      4 Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.5307337294603591`, -0.9884814442135508}, {
     1.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2])
         Sin[Rational[1, 8] Pi]}, {
      4 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -2.3711648765786406`}, {
     1.5307337294603591`, -2.9884814442135506`}}]], 
   LineBox[NCache[{{
      4 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      2 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.5307337294603591`, -2.9884814442135506`}, {
     0.7653668647301796, -2.9884814442135506`}}]], 
   LineBox[NCache[{{
      2 Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2])
         Sin[Rational[1, 8] Pi]}}, {{
     0.7653668647301796, -2.9884814442135506`}, {
     1.1480502970952693`, -2.3711648765786406`}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -1.9884814442135508`}, {
     2.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{
      1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1 + 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}}, {{
     2.1480502970952693`, -1.605798011848461}, {
     2.1480502970952693`, -2.3711648765786406`}}]], 
   LineBox[NCache[{{
      1 + 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     2.1480502970952693`, -2.3711648765786406`}, {
     1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-1 + 
       3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -1.9884814442135508`}, {
     0.1480502970952693, -2.3711648765786406`}}]], 
   LineBox[NCache[{{-1 + 
       3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {-1 + 
       3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     0.1480502970952693, -2.3711648765786406`}, {
     0.1480502970952693, -1.605798011848461}}]], 
   LineBox[NCache[{{-1 + 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{0.1480502970952693, -1.605798011848461}, {
     1.1480502970952693`, -1.9884814442135508`}}]], 
   {PointSize[0.02], 
    PointBox[NCache[{(-2) Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-0.7653668647301796, -0.9884814442135508}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{
      1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-0.1480502970952693, -1.605798011848461}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{
      1 - 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-0.1480502970952693, -2.3711648765786406`}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{(-2) Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[
        Rational[1, 8] Pi]}, {-0.7653668647301796, -2.9884814442135506`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{(-4) Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-1.5307337294603591`, -2.9884814442135506`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{-1 - 3 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-2.1480502970952693`, -2.3711648765786406`}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{-1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-2.1480502970952693`, -1.605798011848461}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{(-4) Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-1.5307337294603591`, -0.9884814442135508}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{(-3) 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-1.1480502970952693`, -2.3711648765786406`}]]}, 
   {PointSize[0.02], 
    PointBox[NCache[{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}, {-1.1480502970952693`, -1.9884814442135508`}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    PointBox[NCache[{(-3) Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-1.1480502970952693`, -1.605798011848461}]]},
    LineBox[NCache[{{(-3) 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -2.3711648765786406`}, \
{-1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -1.9884814442135508`}, \
{-1.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-4) Sin[Rational[1, 8] Pi], 
       1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -1.605798011848461}, \
{-1.5307337294603591`, -0.9884814442135508}}]], 
   LineBox[NCache[{{(-4) Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-2) Sin[Rational[1, 8] Pi], 
       1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.5307337294603591`, -0.9884814442135508}, \
{-0.7653668647301796, -0.9884814442135508}}]], 
   LineBox[NCache[{{(-2) Sin[Rational[1, 8] Pi], 1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-0.7653668647301796, -0.9884814442135508}, \
{-1.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{(-3) 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-2) 
       Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -2.3711648765786406`}, \
{-0.7653668647301796, -2.9884814442135506`}}]], 
   LineBox[NCache[{{(-2) Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-4) 
       Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-0.7653668647301796, -2.9884814442135506`}, \
{-1.5307337294603591`, -2.9884814442135506`}}]], 
   LineBox[NCache[{{(-4) Sin[Rational[1, 8] Pi], -1 - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.5307337294603591`, -2.9884814442135506`}, \
{-1.1480502970952693`, -2.3711648765786406`}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -1.9884814442135508`}, \
{-0.1480502970952693, -1.605798011848461}}]], 
   LineBox[NCache[{{
      1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {
      1 - 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-0.1480502970952693, -1.605798011848461}, \
{-0.1480502970952693, -2.3711648765786406`}}]], 
   LineBox[NCache[{{
      1 - 3 Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 
        3^Rational[1, 2]) Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-0.1480502970952693, -2.3711648765786406`}, \
{-1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-1 - 3 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-1.1480502970952693`, -1.9884814442135508`}, \
{-2.1480502970952693`, -2.3711648765786406`}}]], 
   LineBox[NCache[{{-1 - 3 
       Sin[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {-1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-2.1480502970952693`, -2.3711648765786406`}, \
{-2.1480502970952693`, -1.605798011848461}}]], 
   LineBox[NCache[{{-1 - 3 Sin[Rational[1, 8] Pi], 
       Sin[Rational[1, 8] Pi] - (3 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] 
         Pi]}}, {{-2.1480502970952693`, -1.605798011848461}, \
{-1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[NCache[{{0, 0}, {
      3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      1.1480502970952693`, -1.9884814442135508`}}]], 
   LineBox[
    NCache[{{3 Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {(-3) 
       Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}}, {{
     1.1480502970952693`, -1.9884814442135508`}, {-1.1480502970952693`, \
-1.9884814442135508`}}]], 
   LineBox[NCache[{{(-3) Sin[Rational[1, 8] Pi], ((-3) 3^Rational[1, 2]) 
       Sin[Rational[1, 8] Pi]}, {0, 
      0}}, {{-1.1480502970952693`, -1.9884814442135508`}, {0, 
      0}}]]}]], "Output",
 CellChangeTimes->{3.4783820122810373`*^9}],

Cell["But is it? We attach appropriate ray-names to the dots", "Text",
 CellChangeTimes->{{3.478399031517331*^9, 3.478399060694981*^9}}],

Cell[BoxData[
 GraphicsBox[{
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      0, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {0, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{
      0, Sin[Rational[1, 8] Pi]}, {-Sin[Rational[1, 8] Pi], 1}}, {{
      0, 0.3826834323650898}, {-0.3826834323650898, 1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], 1}, {
      Sin[Rational[1, 8] Pi], 1}}, {{-0.3826834323650898, 1}, {
      0.3826834323650898, 1}}]], 
   LineBox[NCache[{{Sin[Rational[1, 8] Pi], 1}, {
      0, Sin[Rational[1, 8] Pi]}}, {{0.3826834323650898, 1}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {
      Sin[Rational[1, 8] Pi], -1}}, {{0, -0.3826834323650898}, {
      0.3826834323650898, -1}}]], 
   LineBox[NCache[{{
      Sin[Rational[1, 8] Pi], -1}, {-Sin[Rational[1, 8] Pi], -1}}, {{
      0.3826834323650898, -1}, {-0.3826834323650898, -1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], -1}, {
      0, -Sin[Rational[1, 8] Pi]}}, {{-0.3826834323650898, -1}, {
      0, -0.3826834323650898}}]], 
   LineBox[NCache[{{0, 0}, {1, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      1, 0.3826834323650898}}]], 
   LineBox[NCache[{{1, Sin[Rational[1, 8] Pi]}, {
      1, -Sin[Rational[1, 8] Pi]}}, {{1, 0.3826834323650898}, {
      1, -0.3826834323650898}}]], 
   LineBox[NCache[{{1, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      1, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {-1, -Sin[Rational[1, 8] Pi]}}, {{0, 
      0}, {-1, -0.3826834323650898}}]], 
   LineBox[NCache[{{-1, -Sin[Rational[1, 8] Pi]}, {-1, Sin[
       Rational[1, 8] Pi]}}, {{-1, -0.3826834323650898}, {-1, 
       0.3826834323650898}}]], 
   LineBox[NCache[{{-1, Sin[Rational[1, 8] Pi]}, {0, 
      0}}, {{-1, 0.3826834323650898}, {0, 0}}]], 
   CircleBox[NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}], 
     0.1]}, InsetBox["\<\"7\"\>", 
    NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}]], 
   CircleBox[NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}], 
     0.1]}, InsetBox["\<\"15\"\>", 
    NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}]], 
   CircleBox[NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}], 
     0.1]}, InsetBox["\<\"24\"\>", 
    NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}]], 
   CircleBox[NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}], 
     0.1]}, InsetBox["\<\"9\"\>", 
    NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}]], 
   CircleBox[NCache[{-Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}],
     0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}], 
     0.1]}, InsetBox["\<\"1\"\>", 
    NCache[{-Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}]], 
   CircleBox[NCache[{-1, -Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}],
     0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-1, -Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}], 
     0.1]}, InsetBox["\<\"22\"\>", 
    NCache[{-1, -Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}]], 
   CircleBox[NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}], 
     0.1]}, InsetBox["\<\"13\"\>", 
    NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}]], 
   CircleBox[NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}], 
     0.1]}, InsetBox["\<\"3\"\>", 
    NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}]], 
   CircleBox[NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}], 
     0.1]}, InsetBox["\<\"33\"\>", 
    NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}]], 
   CircleBox[{0, 0}, 0.1], 
   {Hue[0.6, 0.1], DiskBox[{0, 0}, 0.1]}, InsetBox["\<\"5\"\>", {0, 0}], 
   CircleBox[NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}], 
     0.1]}, InsetBox["\<\"32\"\>", 
    NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}]]}]], "Output",\

 CellChangeTimes->{3.478382041831477*^9, 3.478382328307728*^9}],

Cell[BoxData[
 GraphicsBox[{
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      0, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {0, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{
      0, Sin[Rational[1, 8] Pi]}, {-Sin[Rational[1, 8] Pi], 1}}, {{
      0, 0.3826834323650898}, {-0.3826834323650898, 1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], 1}, {
      Sin[Rational[1, 8] Pi], 1}}, {{-0.3826834323650898, 1}, {
      0.3826834323650898, 1}}]], 
   LineBox[NCache[{{Sin[Rational[1, 8] Pi], 1}, {
      0, Sin[Rational[1, 8] Pi]}}, {{0.3826834323650898, 1}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {
      Sin[Rational[1, 8] Pi], -1}}, {{0, -0.3826834323650898}, {
      0.3826834323650898, -1}}]], 
   LineBox[NCache[{{
      Sin[Rational[1, 8] Pi], -1}, {-Sin[Rational[1, 8] Pi], -1}}, {{
      0.3826834323650898, -1}, {-0.3826834323650898, -1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], -1}, {
      0, -Sin[Rational[1, 8] Pi]}}, {{-0.3826834323650898, -1}, {
      0, -0.3826834323650898}}]], 
   LineBox[NCache[{{0, 0}, {1, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      1, 0.3826834323650898}}]], 
   LineBox[NCache[{{1, Sin[Rational[1, 8] Pi]}, {
      1, -Sin[Rational[1, 8] Pi]}}, {{1, 0.3826834323650898}, {
      1, -0.3826834323650898}}]], 
   LineBox[NCache[{{1, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      1, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {-1, -Sin[Rational[1, 8] Pi]}}, {{0, 
      0}, {-1, -0.3826834323650898}}]], 
   LineBox[NCache[{{-1, -Sin[Rational[1, 8] Pi]}, {-1, Sin[
       Rational[1, 8] Pi]}}, {{-1, -0.3826834323650898}, {-1, 
       0.3826834323650898}}]], 
   LineBox[NCache[{{-1, Sin[Rational[1, 8] Pi]}, {0, 
      0}}, {{-1, 0.3826834323650898}, {0, 0}}]], 
   CircleBox[NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}], 
     0.1]}, InsetBox["\<\"18\"\>", 
    NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}]], 
   CircleBox[NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}], 
     0.1]}, InsetBox["\<\"6\"\>", 
    NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}]], 
   CircleBox[NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}], 
     0.1]}, InsetBox["\<\"20\"\>", 
    NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}]], 
   CircleBox[NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}], 
     0.1]}, InsetBox["\<\"16\"\>", 
    NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}]], 
   CircleBox[NCache[{-Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}],
     0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}], 
     0.1]}, InsetBox["\<\"12\"\>", 
    NCache[{-Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}]], 
   CircleBox[NCache[{-1, -Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}],
     0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-1, -Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}], 
     0.1]}, InsetBox["\<\"26\"\>", 
    NCache[{-1, -Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}]], 
   CircleBox[NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}], 
     0.1]}, InsetBox["\<\"4\"\>", 
    NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}]], 
   CircleBox[NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}], 
     0.1]}, InsetBox["\<\"10\"\>", 
    NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}]], 
   CircleBox[NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}], 
     0.1]}, InsetBox["\<\"29\"\>", 
    NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}]], 
   CircleBox[{0, 0}, 0.1], 
   {Hue[0.6, 0.1], DiskBox[{0, 0}, 0.1]}, InsetBox["\<\"14\"\>", {0, 0}], 
   CircleBox[NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}], 
     0.1]}, InsetBox["\<\"28\"\>", 
    NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}]]}]], "Output",\

 CellChangeTimes->{
  3.478382064618845*^9, {3.478382524348675*^9, 3.478382599987588*^9}}],

Cell[BoxData[
 GraphicsBox[{
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      0, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {0, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{
      0, Sin[Rational[1, 8] Pi]}, {-Sin[Rational[1, 8] Pi], 1}}, {{
      0, 0.3826834323650898}, {-0.3826834323650898, 1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], 1}, {
      Sin[Rational[1, 8] Pi], 1}}, {{-0.3826834323650898, 1}, {
      0.3826834323650898, 1}}]], 
   LineBox[NCache[{{Sin[Rational[1, 8] Pi], 1}, {
      0, Sin[Rational[1, 8] Pi]}}, {{0.3826834323650898, 1}, {
      0, 0.3826834323650898}}]], 
   LineBox[NCache[{{0, -Sin[Rational[1, 8] Pi]}, {
      Sin[Rational[1, 8] Pi], -1}}, {{0, -0.3826834323650898}, {
      0.3826834323650898, -1}}]], 
   LineBox[NCache[{{
      Sin[Rational[1, 8] Pi], -1}, {-Sin[Rational[1, 8] Pi], -1}}, {{
      0.3826834323650898, -1}, {-0.3826834323650898, -1}}]], 
   LineBox[NCache[{{-Sin[Rational[1, 8] Pi], -1}, {
      0, -Sin[Rational[1, 8] Pi]}}, {{-0.3826834323650898, -1}, {
      0, -0.3826834323650898}}]], 
   LineBox[NCache[{{0, 0}, {1, Sin[Rational[1, 8] Pi]}}, {{0, 0}, {
      1, 0.3826834323650898}}]], 
   LineBox[NCache[{{1, Sin[Rational[1, 8] Pi]}, {
      1, -Sin[Rational[1, 8] Pi]}}, {{1, 0.3826834323650898}, {
      1, -0.3826834323650898}}]], 
   LineBox[NCache[{{1, -Sin[Rational[1, 8] Pi]}, {0, 0}}, {{
      1, -0.3826834323650898}, {0, 0}}]], 
   LineBox[NCache[{{0, 0}, {-1, -Sin[Rational[1, 8] Pi]}}, {{0, 
      0}, {-1, -0.3826834323650898}}]], 
   LineBox[NCache[{{-1, -Sin[Rational[1, 8] Pi]}, {-1, Sin[
       Rational[1, 8] Pi]}}, {{-1, -0.3826834323650898}, {-1, 
       0.3826834323650898}}]], 
   LineBox[NCache[{{-1, Sin[Rational[1, 8] Pi]}, {0, 
      0}}, {{-1, 0.3826834323650898}, {0, 0}}]], 
   CircleBox[NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}], 
     0.1]}, InsetBox["\<\"27\"\>", 
    NCache[{Sin[Rational[1, 8] Pi], 1}, {0.3826834323650898, 1}]], 
   CircleBox[NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}], 
     0.1]}, InsetBox["\<\"8\"\>", 
    NCache[{1, Sin[Rational[1, 8] Pi]}, {1, 0.3826834323650898}]], 
   CircleBox[NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}], 
     0.1]}, InsetBox["\<\"17\"\>", 
    NCache[{1, -Sin[Rational[1, 8] Pi]}, {1, -0.3826834323650898}]], 
   CircleBox[NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}], 
    0.1], 
   {Hue[0.9, 0.2], 
    DiskBox[NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}], 
     0.1]}, InsetBox["\<\"25\"\>", 
    NCache[{Sin[Rational[1, 8] Pi], -1}, {0.3826834323650898, -1}]], 
   CircleBox[NCache[{-Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}],
     0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}], 
     0.1]}, InsetBox["\<\"21\"\>", 
    NCache[{-Sin[Rational[1, 8] Pi], -1}, {-0.3826834323650898, -1}]], 
   CircleBox[NCache[{-1, -Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}],
     0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-1, -Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}], 
     0.1]}, InsetBox["\<\"11\"\>", 
    NCache[{-1, -Sin[Rational[1, 8] Pi]}, {-1, -0.3826834323650898}]], 
   CircleBox[NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}], 
     0.1]}, InsetBox["\<\"2\"\>", 
    NCache[{-1, Sin[Rational[1, 8] Pi]}, {-1, 0.3826834323650898}]], 
   CircleBox[NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}], 
     0.1]}, InsetBox["\<\"19\"\>", 
    NCache[{-Sin[Rational[1, 8] Pi], 1}, {-0.3826834323650898, 1}]], 
   CircleBox[NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}], 
     0.1]}, InsetBox["\<\"31\"\>", 
    NCache[{0, -Sin[Rational[1, 8] Pi]}, {0, -0.3826834323650898}]], 
   CircleBox[{0, 0}, 0.1], 
   {Hue[0.9, 0.2], DiskBox[{0, 0}, 0.1]}, InsetBox["\<\"23\"\>", {0, 0}], 
   CircleBox[NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}], 
    0.1], 
   {Hue[0.6, 0.1], 
    DiskBox[NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}], 
     0.1]}, InsetBox["\<\"30\"\>", 
    NCache[{0, Sin[Rational[1, 8] Pi]}, {0, 0.3826834323650898}]]}]], "Output",\

 CellChangeTimes->{3.4783991281871653`*^9, 3.4783991638775997`*^9}],

Cell["and list the rays we propose to paint red:", "Text",
 CellChangeTimes->{{3.478399188730845*^9, 3.478399201453472*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RedRays", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"{", 
    RowBox[{
    "13", ",", "32", ",", "15", ",", "9", ",", "4", ",", "28", ",", "6", ",", 
     "16", ",", "27", ",", "23", ",", "25"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.478383156573844*^9, 3.478383196068124*^9}, {
   3.4783840419840527`*^9, 3.478384046283496*^9}, 3.4783963848052673`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "6", ",", "9", ",", "13", ",", "15", ",", "16", ",", "23", ",", 
   "25", ",", "27", ",", "28", ",", "32"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478383203086825*^9, 3.478384048170949*^9, 
  3.478384678470704*^9, 3.4783963848064833`*^9, 3.478399212791366*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "RedRays", "]"}]], "Input",
 CellChangeTimes->{{3.478384293648316*^9, 3.4783842986177177`*^9}, 
   3.478396384807798*^9}],

Cell[BoxData["11"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478384300686656*^9, 3.478396384808885*^9, 
  3.478399221915609*^9}]
}, Open  ]],

Cell["\<\
I define a \"paint\" function, which paints a designated ray \[Placeholder] \
and its companions (wherever they occur) \[SelectionPlaceholder], in \
accordance with the 110 principle:\
\>", "Text",
 CellChangeTimes->{{3.478399255684766*^9, 3.478399347443695*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Paint", "[", "n_", "]"}], ":=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", "\[Rule]", "\[Placeholder]"}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"Companions", "[", "n", "]"}], ",", "j"}], "]"}], "\[Rule]", 
       "\[SelectionPlaceholder]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"Companions", "[", "n", "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.47836023180523*^9, 3.478360275245289*^9}, 
   3.4783963848301497`*^9, 3.478399363210462*^9}],

Cell[TextData[{
 "and proceed to paint rays in the ",
 StyleBox["RedRays", "Input"],
 " sequence:"
}], "Text",
 CellChangeTimes->{{3.478399426492855*^9, 3.478399468903369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrthogonalTriads", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.478360298475502*^9, 3.478360304247427*^9}, 
   3.478360484273494*^9, {3.4783840642306023`*^9, 3.478384069901505*^9}, 
   3.4783848297573967`*^9, 3.478396384834594*^9, 3.47839939652582*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\[SelectionPlaceholder]", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "32", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "\[SelectionPlaceholder]", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "30", ",", "31"}], "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.478360307413114*^9, 3.478360485645211*^9, {3.478384072909545*^9, 
   3.478384090733824*^9}, 3.4783848321973352`*^9, 3.4783963848382607`*^9, 
   3.47839940193321*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.478399496786502*^9, 3.478399508865611*^9}}],

Cell[RawData[""], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.478399526011258*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\[SelectionPlaceholder]", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "32", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "30", ",", "31"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.478399526727212*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.478399534891755*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", "23"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "32", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "30", ",", "31"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.478399535461082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.478399542189788*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", "23"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "32", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "30", ",", "31"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.478399542879137*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.478399557006124*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", "23"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "32", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "28", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "30", ",", "31"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.478399557679661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.478399564243656*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "32", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "28", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.478399564881154*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.478399572095086*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "32", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "28", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.478399572800634*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.47839958175984*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "32", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "28", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4783995823216753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.478399588801977*^9, 3.478399589170277*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "32", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.478399590336747*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", 
   RowBox[{"RedRays", "\[LeftDoubleBracket]", "11", "\[RightDoubleBracket]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.4783995973378277`*^9, 3.47839959749115*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[Placeholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.478399598204948*^9}]
}, Open  ]],

Cell["\<\
It looks like we have succeeded!! BUT\[Ellipsis]look what we have done to the \
orthogonal pairs: recalling our instructions\
\>", "Text",
 CellChangeTimes->{{3.47839965672339*^9, 3.478399678253558*^9}, {
  3.4783997479792852`*^9, 3.4783997805343*^9}}],

Cell[CellGroupData[{

Cell[BoxData["RedRays"], "Input",
 CellChangeTimes->{{3.478390650564384*^9, 3.478390657883523*^9}, 
   3.478396384899825*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "6", ",", "9", ",", "13", ",", "15", ",", "16", ",", "23", ",", 
   "25", ",", "27", ",", "28", ",", "32"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478390660343955*^9, 3.478396384900958*^9, 
  3.478399823914918*^9}]
}, Open  ]],

Cell["and their effect", "Text",
 CellChangeTimes->{{3.478399790398988*^9, 3.47839979282512*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"RedRays", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}],
     "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", 
     RowBox[{"Length", "[", "RedRays", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.478390722061207*^9, 3.4783907935295677`*^9}, 
   3.478396384903401*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"4", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"6", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"9", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"13", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"15", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"16", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"23", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"25", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"27", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"28", "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
   RowBox[{"32", "\[Rule]", "\[SelectionPlaceholder]"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478390795561348*^9, 3.478396384906885*^9, 
  3.478399831429587*^9}]
}, Open  ]],

Cell["we have", "Text",
 CellChangeTimes->{{3.478399808105647*^9, 3.478399814049548*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
    "OrthogonalPairs", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "72"}], "}"}]}], "]"}], "/.", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
     "RedRays", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
     "\[Rule]", "\[SelectionPlaceholder]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"Length", "[", "RedRays", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.478389914659217*^9, 3.4783900017416143`*^9}, {
   3.478390312139673*^9, 3.478390315187017*^9}, {3.478390359583034*^9, 
   3.4783903738351316`*^9}, {3.478390517912088*^9, 3.4783905236637287`*^9}, {
   3.4783905912849092`*^9, 3.4783906198351583`*^9}, {3.478390678805574*^9, 
   3.478390694943736*^9}, {3.4783908091548147`*^9, 3.478390821856442*^9}, 
   3.478396384909419*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "33"}], "}"}]}], "}"}]], "Output",\

 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.478390032964386*^9, 3.478390317161633*^9, 3.478390374491056*^9, 
   3.4783905247586813`*^9, 3.478390614541769*^9, {3.478390679990171*^9, 
   3.478390701900003*^9}, 3.478390827625544*^9, 3.478396384913948*^9, 
   3.478399847376711*^9}]
}, Open  ]],

Cell["On 4 occasions", "Text",
 CellChangeTimes->{{3.478399885008902*^9, 3.478399891321129*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4783908442897863`*^9, 3.478390852519869*^9}, {
   3.478390894261099*^9, 3.4783909100444508`*^9}, 3.47839638491532*^9}],

Cell[BoxData["4"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4783909144285793`*^9, 3.478396384916359*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["we have painted orthogonal rays red, which the 110 principle \
disallows",
  FontVariations->{"Underline"->True}],
 "."
}], "Text",
 CellChangeTimes->{{3.478399900170463*^9, 3.4783999281006804`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.478384393545906*^9, 3.4783963849174547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["An alternative failure", "Subsection",
 CellChangeTimes->{{3.478399974311173*^9, 3.478399978441413*^9}}],

Cell["Suppose we start with the original orthogonal triad list", "Text",
 CellChangeTimes->{{3.4783999876508713`*^9, 3.4784000089723377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["OrthogonalTriads"], "Input",
 CellChangeTimes->{3.478396384918432*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "14", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "14", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "32", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "14", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "30", ",", "31"}], "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478384415493167*^9, 3.4783963849214373`*^9}]
}, Open  ]],

Cell["\<\
and proceed by painting red the next yet-unpainted ray: we then achieve\
\>", "Text",
 CellChangeTimes->{{3.478400024625166*^9, 3.478400067434725*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrthogonalTriads", "/.", 
  RowBox[{"Paint", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{3.478384423106823*^9, 3.4783963849243717`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "11", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "14", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "14", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "32", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "14", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "30", ",", "31"}], "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478384424080263*^9, 3.4783845029881897`*^9, 
  3.4783963849264393`*^9, 3.478400075197369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", "2", "]"}]}]], "Input",
 CellChangeTimes->{3.478384475920288*^9, 3.478384509046033*^9, 
  3.478396384927701*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "14", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "14", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "32", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "14", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30", ",", "31"}], "}"}]}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4783844767994757`*^9, 3.478384511118126*^9, 
  3.478396384929769*^9, 3.478400086706038*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", "3", "]"}]}]], "Input",
 CellChangeTimes->{{3.478384516859376*^9, 3.478384522111349*^9}, 
   3.47839638493186*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "14", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "14", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "14", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30", ",", "31"}], "}"}]}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4783845231170607`*^9, 3.478396384934465*^9, 
  3.478400097663693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{3.4783845357570963`*^9, 3.4783963849367228`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "15", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "\[SelectionPlaceholder]", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30", ",", "31"}], "}"}]}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4783845364846478`*^9, 3.478396384939047*^9, 
  3.4784001103616953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{3.478384548126498*^9, 3.478396384940301*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "\[SelectionPlaceholder]", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30", ",", "31"}], "}"}]}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478384549488413*^9, 3.478396384942437*^9, 
  3.478400119745482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", "6", "]"}]}]], "Input",
 CellChangeTimes->{3.478384558951939*^9, 3.478396384944128*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "17", ",", "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30", ",", "31"}], "}"}]}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478384560617968*^9, 3.478396384946252*^9, 
  3.478400128958005*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", "8", "]"}]}]], "Input",
 CellChangeTimes->{3.4783845682091*^9, 3.478396384947482*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "18", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "28", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30", ",", "31"}], "}"}]}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4783845690624733`*^9, 3.4783963849495087`*^9, 
  3.478400140705533*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.478384579593698*^9, 3.478384579899703*^9}, 
   3.478396384950746*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "16", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", "29"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30", ",", "31"}], "}"}]}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478384581310446*^9, 3.478396384954118*^9, 
  3.478400156347183*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", "12", "]"}]}]], "Input",
 CellChangeTimes->{{3.4783845915711308`*^9, 3.478384591728277*^9}, 
   3.4783963849555607`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[SelectionPlaceholder]", ",", "30", ",", "31"}], "}"}]}], 
  "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.478384594397826*^9, 3.478396384957707*^9, 
  3.4784001775982037`*^9}]
}, Open  ]],

Cell[TextData[{
 "but at this point ",
 StyleBox["we stand in violation of the 110 principle",
  FontVariations->{"Underline"->True}],
 ", for we have encountered an instance"
}], "Text",
 CellChangeTimes->{{3.478400215218321*^9, 3.4784002588913603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.478400263716805*^9, 3.478400279907218*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.478400282790168*^9}]
}, Open  ]],

Cell["\<\
of a triad with three blue rays. Were we to play the game to completion the \
situation woule become even worse:\
\>", "Text",
 CellChangeTimes->{{3.478400306176628*^9, 3.478400316834786*^9}, {
  3.478400422091446*^9, 3.478400448751906*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%%", "/.", 
  RowBox[{"Paint", "[", "19", "]"}]}]], "Input",
 CellChangeTimes->{{3.4784003567865753`*^9, 3.4784003628137302`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "25", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", "31"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4784003638367453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Paint", "[", "21", "]"}]}]], "Input",
 CellChangeTimes->{{3.478400389262985*^9, 3.478400389410816*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Placeholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4784003901685762`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[SelectionPlaceholder]", ",", "\[SelectionPlaceholder]", ",", 
     "\[SelectionPlaceholder]"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.478400408807507*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.478433277315666*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Twinned pairs of spin-one particles", "Subsection",
 CellChangeTimes->{{3.478433312858843*^9, 3.478433322238887*^9}}],

Cell["\<\
I begin be indicating what it means for two spin-one particles to be \"in the \
singlet state,\" then describe a wonderful properties that such particles \
acquire when they are in that particular composite state.\
\>", "Text",
 CellChangeTimes->{{3.4784346049163113`*^9, 3.478434734721552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a_", "\[CircleTimes]", "b_"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{"a", ",", "b"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalI]", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0", "0"},
      {"0", "1", "0"},
      {"0", "0", "1"}
     }], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.478433342928215*^9, 3.47843337153622*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["S", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[DoubleStruckS]", "1"], "\[CircleTimes]", 
      "\[DoubleStruckCapitalI]"}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{"\[DoubleStruckCapitalI]", "\[CircleTimes]", 
      SubscriptBox["\[DoubleStruckS]", "1"]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", "2"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[DoubleStruckS]", "2"], "\[CircleTimes]", 
      "\[DoubleStruckCapitalI]"}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{"\[DoubleStruckCapitalI]", "\[CircleTimes]", 
      SubscriptBox["\[DoubleStruckS]", "2"]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["S", "3"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[DoubleStruckS]", "3"], "\[CircleTimes]", 
       "\[DoubleStruckCapitalI]"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"\[DoubleStruckCapitalI]", "\[CircleTimes]", 
       SubscriptBox["\[DoubleStruckS]", "3"]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SS", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["S", "1"], ".", 
     SubscriptBox["S", "1"]}], "+", 
    RowBox[{
     SubscriptBox["S", "2"], ".", 
     SubscriptBox["S", "2"]}], "+", 
    RowBox[{
     SubscriptBox["S", "3"], ".", 
     SubscriptBox["S", "3"]}]}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4784333930162477`*^9, 3.4784335422287083`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    SubscriptBox["S", "1"], ",", 
    SubscriptBox["S", "2"]}], "]"}], "\[Equal]", 
  RowBox[{"\[ImaginaryI]", " ", "\[HBar]", " ", 
   SubscriptBox["S", "3"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    SubscriptBox["S", "2"], ",", 
    SubscriptBox["S", "3"]}], "]"}], "\[Equal]", 
  RowBox[{"\[ImaginaryI]", " ", "\[HBar]", " ", 
   SubscriptBox["S", "1"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Comm", "[", 
   RowBox[{
    SubscriptBox["S", "3"], ",", 
    SubscriptBox["S", "1"]}], "]"}], "\[Equal]", 
  RowBox[{"\[ImaginaryI]", " ", "\[HBar]", " ", 
   SubscriptBox["S", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.478433549151696*^9, 3.478433605521934*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478433616608169*^9, 3.4784337716878357`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478433616608169*^9, 3.478433771694165*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478433616608169*^9, 3.4784337716993933`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", "SS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["S", "3"], "]"}]}], "Input",
 CellChangeTimes->{{3.4784337854409943`*^9, 3.478433803342656*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"6", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"6", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"6", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"6", " ", 
    SuperscriptBox["\[HBar]", "2"]}], ",", 
   RowBox[{"6", " ", 
    SuperscriptBox["\[HBar]", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.478433806454777*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[HBar]"}], ",", 
   RowBox[{"-", "\[HBar]"}], ",", 
   RowBox[{"-", "\[HBar]"}], ",", "\[HBar]", ",", "\[HBar]", ",", 
   RowBox[{"2", " ", "\[HBar]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4784338064844027`*^9}]
}, Open  ]],

Cell[TextData[{
 "Notice that 0 is a shared eigenvalue (and the only non-degenerate \
eigenvalue of ",
 StyleBox["SS", "Input"],
 ")."
}], "Text",
 CellChangeTimes->{{3.47843385184971*^9, 3.478433886157153*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Thickness[Large], CircleBox[{0, 0}, 0.08], 
   {RGBColor[1, 0, 0], CircleBox[{-0.5, 0.5}, 0.08]}, 
   {RGBColor[1, 0, 0], CircleBox[{0.5, 0.5}, 0.08]}, DiskBox[{-1, 1}, 0.1], 
   DiskBox[{0, 1}, 0.1], DiskBox[{1, 1}, 0.1], 
   {RGBColor[1, 0, 0], CircleBox[{-1.5, 1.5}, 0.08]}, 
   {RGBColor[1, 0, 0], CircleBox[{-0.5, 1.5}, 0.08]}, 
   {RGBColor[1, 0, 0], CircleBox[{0.5, 1.5}, 0.08]}, 
   {RGBColor[1, 0, 0], CircleBox[{1.5, 1.5}, 0.08]}, CircleBox[{-2, 2}, 0.08],
    CircleBox[{-1, 2}, 0.08], CircleBox[{0, 2}, 0.08], 
   CircleBox[{1, 2}, 0.08], CircleBox[{2, 2}, 0.08]},
  Axes->True,
  AxesLabel->{
    FormBox["m", TraditionalForm], 
    FormBox["\[Mu]", TraditionalForm]},
  PlotRange->{-0.1, 2.5},
  Prolog->AbsolutePointSize[8],
  Ticks->{{{-3, 
      FormBox[
       RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}}, {{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.468592910322908*^9, {3.468592944279825*^9, 3.4685929736874847`*^9}, 
   3.468593056913566*^9, 3.4685930909332037`*^9, 3.468593178731501*^9, 
   3.468593212164249*^9}],

Cell["The associated eigenvalue is", "Text",
 CellChangeTimes->{{3.478433927605219*^9, 3.478433933033823*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalPsi]", "singlet"], "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["3"]], 
    RowBox[{"(", GridBox[{
       {"1"},
       {"0"},
       {"0"},
       {"0"},
       {"1"},
       {"0"},
       {"0"},
       {"0"},
       {"1"}
      }], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4784339373281*^9, 3.478433974348015*^9}, {
  3.4784345245193233`*^9, 3.478434527268186*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SS", ".", 
   SubscriptBox["\[CapitalPsi]", "singlet"]}], "\[Equal]", 
  RowBox[{"0", " ", 
   SubscriptBox["\[CapitalPsi]", "singlet"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["S", "3"], ".", 
   SubscriptBox["\[CapitalPsi]", "singlet"]}], "\[Equal]", 
  RowBox[{"0", " ", 
   SubscriptBox["\[CapitalPsi]", "singlet"]}]}]}], "Input",
 CellChangeTimes->{{3.478433994335599*^9, 3.478434020063869*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478434024161195*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478434024165761*^9}]
}, Open  ]],

Cell[TextData[{
 "Introduce the eigenvectors of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[DoubleStruckS]", "3"], 
    StyleBox[":", "Text"]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.478434052349449*^9, 3.47843406683319*^9}, 
   3.478434279776197*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"1"},
       {"0"}
      }], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"0"},
      {"1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"(", GridBox[{
       {"\[ImaginaryI]"},
       {"1"},
       {"0"}
      }], ")"}]}]}], ";", Cell[""]}]}], "Input",
 CellChangeTimes->{{3.478434076621316*^9, 3.4784341620633793`*^9}, {
  3.4784343034886017`*^9, 3.478434306047097*^9}}],

Cell[BoxData[
 InterpretationBox[Cell[""],
  TextCell[""]]], "Output",
 CellChangeTimes->{{3.4784343163868103`*^9, 3.47843433276439*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "3"], ".", "u"}], "\[Equal]", 
  RowBox[{
   RowBox[{"+", "\[HBar]"}], " ", "u"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "3"], ".", "n"}], "\[Equal]", 
  RowBox[{"0", "\[HBar]", " ", "n"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckS]", "3"], ".", "d"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "\[HBar]"}], " ", "d"}]}]}], "Input",
 CellChangeTimes->{{3.4784341828676157`*^9, 3.478434275708375*^9}, {
  3.478434325689419*^9, 3.478434328397428*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478434232432115*^9, 3.478434286830892*^9, 
  3.4784343353508043`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478434232432115*^9, 3.478434286830892*^9, 
  3.4784343353603*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.478434232432115*^9, 3.478434286830892*^9, 
  3.4784343353659363`*^9}]
}, Open  ]],

Cell["and find that the singlet state can be described", "Text",
 CellChangeTimes->{{3.47843434934741*^9, 3.478434370903469*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[CapitalPsi]", "singlet"], "\[Equal]", 
  FractionBox[
   RowBox[{
    RowBox[{"u", "\[CircleTimes]", "d"}], "+", 
    RowBox[{"n", "\[CircleTimes]", "n"}], "+", 
    RowBox[{"d", "\[CircleTimes]", "u"}]}], 
   SqrtBox["3"]]}]], "Input",
 CellChangeTimes->{{3.478434391950371*^9, 3.478434463094102*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4784344801201887`*^9, 3.4784345416774073`*^9}]
}, Open  ]],

Cell[TextData[{
 "so is a manifestly ",
 StyleBox["entangled state",
  FontVariations->{"Underline"->True}],
 "."
}], "Text",
 CellChangeTimes->{{3.47843476041333*^9, 3.478434787718648*^9}}]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1014, 956},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"7.0 for Mac OS X PowerPC (32-bit) (November 11, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 117, 2, 40, "Input"],
Cell[687, 26, 143, 2, 40, "Output"]
}, Open  ]],
Cell[845, 31, 2166, 76, 541, "Input"],
Cell[3014, 109, 119, 2, 40, "Input"],
Cell[3136, 113, 174, 2, 40, "Input"],
Cell[3313, 117, 326, 7, 160, "Input"],
Cell[3642, 126, 16, 0, 39, "Text"],
Cell[3661, 128, 167, 6, 75, "Text"],
Cell[3831, 136, 87, 1, 64, "Input"],
Cell[CellGroupData[{
Cell[3943, 141, 115, 1, 51, "Subsection"],
Cell[4061, 144, 226, 4, 39, "Text"],
Cell[4290, 150, 706, 22, 88, "Input"],
Cell[CellGroupData[{
Cell[5021, 176, 373, 7, 88, "Input"],
Cell[5397, 185, 191, 6, 63, "Output"],
Cell[5591, 193, 191, 6, 63, "Output"],
Cell[5785, 201, 191, 6, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6013, 212, 229, 6, 40, "Input"],
Cell[6245, 220, 184, 5, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6466, 230, 471, 12, 42, "Input"],
Cell[6940, 244, 277, 9, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7254, 258, 299, 8, 44, "Input"],
Cell[7556, 268, 170, 4, 67, "Output"]
}, Open  ]],
Cell[7741, 275, 344, 9, 39, "Text"],
Cell[8088, 286, 893, 28, 66, "Input"],
Cell[CellGroupData[{
Cell[9006, 318, 456, 12, 49, "Input"],
Cell[9465, 332, 845, 23, 98, "Output"]
}, Open  ]],
Cell[10325, 358, 107, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[10457, 363, 242, 7, 68, "Input"],
Cell[10702, 372, 223, 7, 67, "Output"]
}, Open  ]],
Cell[10940, 382, 182, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[11147, 390, 336, 8, 40, "Input"],
Cell[11486, 400, 120, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11643, 407, 458, 12, 49, "Input"],
Cell[12104, 421, 273, 8, 67, "Output"]
}, Open  ]],
Cell[12392, 432, 87, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12516, 438, 206, 4, 51, "Subsection"],
Cell[12725, 444, 158, 3, 39, "Text"],
Cell[12886, 449, 316, 7, 88, "Input"],
Cell[13205, 458, 179, 3, 40, "Input"],
Cell[13387, 463, 1069, 32, 242, "Input"],
Cell[CellGroupData[{
Cell[14481, 499, 1006, 24, 90, "Input"],
Cell[15490, 525, 195, 3, 40, "Output"],
Cell[15688, 530, 193, 3, 40, "Output"],
Cell[15884, 535, 193, 3, 40, "Output"]
}, Open  ]],
Cell[16092, 541, 527, 13, 42, "Input"],
Cell[CellGroupData[{
Cell[16644, 558, 789, 16, 90, "Input"],
Cell[17436, 576, 73, 1, 40, "Output"],
Cell[17512, 579, 75, 1, 40, "Output"],
Cell[17590, 582, 75, 1, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17702, 588, 373, 7, 88, "Input"],
Cell[18078, 597, 156, 4, 40, "Output"],
Cell[18237, 603, 156, 4, 40, "Output"],
Cell[18396, 609, 156, 4, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18589, 618, 182, 3, 40, "Input"],
Cell[18774, 623, 293, 9, 49, "Output"]
}, Open  ]],
Cell[19082, 635, 402, 10, 39, "Text"],
Cell[19487, 647, 1214, 40, 113, "Input"],
Cell[CellGroupData[{
Cell[20726, 691, 829, 22, 72, "Input"],
Cell[21558, 715, 4612, 148, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26207, 868, 1155, 33, 78, "Input"],
Cell[27365, 903, 683, 19, 86, "Output"]
}, Open  ]],
Cell[28063, 925, 190, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[28278, 934, 1288, 35, 111, "Input"],
Cell[29569, 971, 211, 5, 49, "Output"],
Cell[29783, 978, 211, 5, 49, "Output"],
Cell[29997, 985, 209, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30243, 995, 1992, 60, 78, "Input"],
Cell[32238, 1057, 505, 15, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32780, 1077, 128, 2, 40, "Input"],
Cell[32911, 1081, 293, 9, 49, "Output"]
}, Open  ]],
Cell[33219, 1093, 793, 18, 133, "Text"],
Cell[34015, 1113, 564, 12, 111, "Input"],
Cell[34582, 1127, 96, 1, 40, "Input"],
Cell[34681, 1130, 1328, 48, 400, "Input"],
Cell[CellGroupData[{
Cell[36034, 1182, 1071, 28, 90, "Input"],
Cell[37108, 1212, 194, 3, 40, "Output"],
Cell[37305, 1217, 194, 3, 40, "Output"],
Cell[37502, 1222, 194, 3, 40, "Output"]
}, Open  ]],
Cell[37711, 1228, 461, 12, 42, "Input"],
Cell[CellGroupData[{
Cell[38197, 1244, 789, 16, 88, "Input"],
Cell[38989, 1262, 95, 1, 40, "Output"],
Cell[39087, 1265, 95, 1, 40, "Output"],
Cell[39185, 1268, 97, 1, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39319, 1274, 307, 6, 88, "Input"],
Cell[39629, 1282, 338, 11, 63, "Output"],
Cell[39970, 1295, 338, 11, 63, "Output"],
Cell[40311, 1308, 340, 11, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40688, 1324, 156, 3, 40, "Input"],
Cell[40847, 1329, 459, 15, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41343, 1349, 296, 8, 67, "Input"],
Cell[41642, 1359, 145, 4, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41824, 1368, 1711, 47, 89, "Input"],
Cell[43538, 1417, 198, 3, 40, "Output"],
Cell[43739, 1422, 198, 3, 40, "Output"],
Cell[43940, 1427, 199, 3, 40, "Output"]
}, Open  ]],
Cell[44154, 1433, 405, 9, 107, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44596, 1447, 142, 1, 51, "Subsection"],
Cell[44741, 1450, 515, 8, 107, "Text"],
Cell[45259, 1460, 97896, 1610, 614, 795, 16, "CachedBoxData", "BoxData", \
"Output"],
Cell[143158, 3072, 169, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[143352, 3078, 242, 6, 65, "Input"],
Cell[143597, 3086, 643, 16, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144277, 3107, 242, 6, 64, "Input"],
Cell[144522, 3115, 637, 16, 40, "Output"]
}, Open  ]],
Cell[145174, 3134, 423, 7, 84, "Text"],
Cell[145600, 3143, 18480, 308, 607, "Input"],
Cell[164083, 3453, 226, 5, 39, "Text"],
Cell[164312, 3460, 19117, 372, 608, "Output"],
Cell[183432, 3834, 236, 4, 62, "Text"],
Cell[183671, 3840, 22920, 384, 608, 5666, 99, "CachedBoxData", "BoxData", \
"Output"],
Cell[206594, 4226, 206, 4, 39, "Text"],
Cell[206803, 4232, 418957, 6873, 853, "Input"],
Cell[625763, 11107, 89, 1, 64, "Input"],
Cell[625855, 11110, 134, 1, 39, "Text"],
Cell[625992, 11113, 19273, 373, 608, "Output"],
Cell[CellGroupData[{
Cell[645290, 11490, 19409, 377, 670, "Input"],
Cell[664702, 11869, 19662, 384, 615, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[684413, 12259, 135, 2, 51, "Subsection"],
Cell[684551, 12263, 235, 4, 39, "Text"],
Cell[684789, 12269, 205, 4, 40, "Input"],
Cell[684997, 12275, 4368, 149, 530, "Input"],
Cell[689368, 12426, 208, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[689601, 12432, 1524, 43, 106, "Input"],
Cell[691128, 12477, 273, 6, 40, "Output"],
Cell[691404, 12485, 269, 6, 40, "Output"],
Cell[691676, 12493, 271, 6, 40, "Output"]
}, Open  ]],
Cell[691962, 12502, 97, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[692084, 12507, 465, 11, 90, "Input"],
Cell[692552, 12520, 202, 5, 40, "Output"],
Cell[692757, 12527, 204, 5, 40, "Output"],
Cell[692964, 12534, 204, 5, 40, "Output"]
}, Open  ]],
Cell[693183, 12542, 215, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[693423, 12550, 137, 2, 40, "Input"],
Cell[693563, 12554, 71, 1, 40, "Output"]
}, Open  ]],
Cell[693649, 12558, 102, 1, 39, "Text"],
Cell[693754, 12561, 1807, 62, 325, "Input"],
Cell[695564, 12625, 118, 1, 39, "Text"],
Cell[695685, 12628, 3883, 134, 805, "Input"],
Cell[699571, 12764, 89, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699697, 12770, 186, 2, 51, "Subsection"],
Cell[699886, 12774, 156, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[700067, 12780, 155, 3, 40, "Input"],
Cell[700225, 12785, 72, 1, 40, "Output"]
}, Open  ]],
Cell[700312, 12789, 166, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[700503, 12795, 613, 17, 48, "Input"],
Cell[701119, 12814, 242, 5, 40, "Output"]
}, Open  ]],
Cell[701376, 12822, 250, 6, 39, "Text"],
Cell[701629, 12830, 449, 14, 48, "Input"],
Cell[702081, 12846, 571, 16, 40, "Input"],
Cell[CellGroupData[{
Cell[702677, 12866, 151, 3, 40, "Input"],
Cell[702831, 12871, 171, 4, 40, "Output"]
}, Open  ]],
Cell[703017, 12878, 871, 23, 64, "Input"],
Cell[703891, 12903, 132, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[704048, 12908, 173, 4, 40, "Input"],
Cell[704224, 12914, 1131, 26, 110, "Output"]
}, Open  ]],
Cell[705370, 12943, 227, 5, 39, "Text"],
Cell[705600, 12950, 4844, 150, 248, "Input"],
Cell[CellGroupData[{
Cell[710469, 13104, 210, 3, 40, "Input"],
Cell[710682, 13109, 190, 4, 40, "Output"]
}, Open  ]],
Cell[710887, 13116, 277, 5, 62, "Text"],
Cell[711167, 13123, 109, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[711313, 13129, 125, 1, 51, "Subsection"],
Cell[711441, 13132, 42, 0, 39, "Text"],
Cell[CellGroupData[{
Cell[711508, 13136, 177, 4, 40, "Input"],
Cell[711688, 13142, 147, 3, 40, "Output"]
}, Open  ]],
Cell[711850, 13148, 117, 1, 39, "Text"],
Cell[711970, 13151, 637, 19, 48, "Input"],
Cell[CellGroupData[{
Cell[712632, 13174, 812, 22, 64, "Input"],
Cell[713447, 13198, 243, 5, 40, "Output"]
}, Open  ]],
Cell[713705, 13206, 269, 5, 62, "Text"],
Cell[713977, 13213, 960, 29, 77, "Input"],
Cell[714940, 13244, 750, 23, 71, "Input"],
Cell[715693, 13269, 715, 19, 64, "Input"],
Cell[CellGroupData[{
Cell[716433, 13292, 164, 3, 40, "Input"],
Cell[716600, 13297, 171, 4, 40, "Output"]
}, Open  ]],
Cell[716786, 13304, 891, 24, 87, "Input"],
Cell[717680, 13330, 128, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[717833, 13335, 291, 6, 40, "Input"],
Cell[718127, 13343, 1664, 27, 202, "Output"]
}, Open  ]],
Cell[719806, 13373, 172, 5, 39, "Text"],
Cell[719981, 13380, 1459, 39, 110, "Input"],
Cell[CellGroupData[{
Cell[721465, 13423, 190, 3, 40, "Input"],
Cell[721658, 13428, 192, 4, 40, "Output"]
}, Open  ]],
Cell[721865, 13435, 86, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[721976, 13440, 395, 10, 40, "Input"],
Cell[722374, 13452, 516, 10, 64, "Output"]
}, Open  ]],
Cell[722905, 13465, 277, 5, 62, "Text"],
Cell[723185, 13472, 18139, 378, 524, "Output"],
Cell[741327, 13852, 408, 12, 39, "Text"],
Cell[741738, 13866, 89, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[741864, 13872, 109, 1, 51, "Subsection"],
Cell[741976, 13875, 417, 13, 41, "Text"],
Cell[CellGroupData[{
Cell[742418, 13892, 607, 17, 64, "Input"],
Cell[743028, 13911, 823, 26, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743888, 13942, 152, 3, 40, "Input"],
Cell[744043, 13947, 331, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744411, 13960, 167, 3, 40, "Input"],
Cell[744581, 13965, 296, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744914, 13978, 182, 4, 40, "Input"],
Cell[745099, 13984, 264, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[745400, 13996, 149, 3, 40, "Input"],
Cell[745552, 14001, 287, 8, 40, "Output"]
}, Open  ]],
Cell[745854, 14012, 192, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[746071, 14020, 1185, 29, 156, "Input"],
Cell[747259, 14051, 2592, 78, 156, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[749888, 14134, 153, 3, 40, "Input"],
Cell[750044, 14139, 218, 4, 40, "Output"]
}, Open  ]],
Cell[750277, 14146, 88, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[750390, 14151, 349, 10, 40, "Input"],
Cell[750742, 14163, 565, 11, 64, "Output"]
}, Open  ]],
Cell[751322, 14177, 256, 5, 62, "Text"],
Cell[CellGroupData[{
Cell[751603, 14186, 405, 12, 40, "Input"],
Cell[752011, 14200, 2208, 72, 110, "Output"]
}, Open  ]],
Cell[754234, 14275, 172, 4, 39, "Text"],
Cell[754409, 14281, 252, 6, 42, "Input"],
Cell[754664, 14289, 87, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[754788, 14295, 159, 3, 51, "Subsection"],
Cell[754950, 14300, 138, 1, 39, "Text"],
Cell[755091, 14303, 17758, 369, 524, "Output"],
Cell[772852, 14674, 136, 1, 39, "Text"],
Cell[772991, 14677, 4946, 101, 561, "Output"],
Cell[777940, 14780, 4976, 102, 561, "Output"],
Cell[782919, 14884, 4953, 101, 561, "Output"],
Cell[787875, 14987, 124, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[788024, 14992, 386, 8, 40, "Input"],
Cell[788413, 15002, 363, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788813, 15015, 159, 3, 40, "Input"],
Cell[788975, 15020, 168, 4, 40, "Output"]
}, Open  ]],
Cell[789158, 15027, 273, 5, 62, "Text"],
Cell[789434, 15034, 708, 20, 65, "Input"],
Cell[790145, 15056, 176, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[790346, 15065, 386, 7, 40, "Input"],
Cell[790735, 15074, 1562, 42, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[792334, 15121, 226, 5, 40, "Input"],
Cell[792563, 15128, 27, 0, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[792627, 15133, 202, 5, 40, "Input"],
Cell[792832, 15140, 1497, 41, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[794366, 15186, 202, 5, 40, "Input"],
Cell[794571, 15193, 1649, 47, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[796257, 15245, 202, 5, 40, "Input"],
Cell[796462, 15252, 1693, 49, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[798192, 15306, 202, 5, 40, "Input"],
Cell[798397, 15313, 1789, 53, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[800223, 15371, 202, 5, 40, "Input"],
Cell[800428, 15378, 2041, 59, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[802506, 15442, 202, 5, 40, "Input"],
Cell[802711, 15449, 2085, 61, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[804833, 15515, 201, 5, 40, "Input"],
Cell[805037, 15522, 2131, 63, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[807205, 15590, 227, 5, 40, "Input"],
Cell[807435, 15597, 2207, 65, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[809679, 15667, 228, 5, 40, "Input"],
Cell[809910, 15674, 2287, 67, 64, "Output"]
}, Open  ]],
Cell[812212, 15744, 262, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[812499, 15753, 125, 2, 40, "Input"],
Cell[812627, 15757, 317, 8, 40, "Output"]
}, Open  ]],
Cell[812959, 15768, 97, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[813081, 15773, 408, 10, 40, "Input"],
Cell[813492, 15785, 882, 17, 40, "Output"]
}, Open  ]],
Cell[814389, 15805, 89, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[814503, 15810, 958, 23, 64, "Input"],
Cell[815464, 15835, 5756, 158, 225, "Output"]
}, Open  ]],
Cell[821235, 15996, 96, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[821356, 16001, 320, 7, 40, "Input"],
Cell[821679, 16010, 144, 3, 40, "Output"]
}, Open  ]],
Cell[821838, 16016, 226, 6, 39, "Text"],
Cell[822067, 16024, 111, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[822215, 16030, 110, 1, 51, "Subsection"],
Cell[822328, 16033, 142, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[822495, 16038, 84, 1, 40, "Input"],
Cell[822582, 16041, 1309, 37, 87, "Output"]
}, Open  ]],
Cell[823906, 16081, 161, 3, 39, "Text"],
Cell[CellGroupData[{
Cell[824092, 16088, 163, 3, 40, "Input"],
Cell[824258, 16093, 1446, 40, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[825741, 16138, 171, 4, 40, "Input"],
Cell[825915, 16144, 1576, 43, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[827528, 16192, 173, 4, 40, "Input"],
Cell[827704, 16198, 1652, 47, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[829393, 16250, 150, 3, 40, "Input"],
Cell[829546, 16255, 1793, 51, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[831376, 16311, 146, 3, 40, "Input"],
Cell[831525, 16316, 1949, 55, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[833511, 16376, 146, 3, 40, "Input"],
Cell[833660, 16381, 1994, 57, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835691, 16443, 144, 3, 40, "Input"],
Cell[835838, 16448, 2043, 59, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[837918, 16512, 175, 4, 40, "Input"],
Cell[838096, 16518, 2135, 63, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[840268, 16586, 179, 4, 40, "Input"],
Cell[840450, 16592, 2224, 65, 87, "Output"]
}, Open  ]],
Cell[842689, 16660, 255, 6, 39, "Text"],
Cell[CellGroupData[{
Cell[842969, 16670, 283, 7, 40, "Input"],
Cell[843255, 16679, 70, 1, 40, "Output"]
}, Open  ]],
Cell[843340, 16683, 251, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[843616, 16692, 154, 3, 40, "Input"],
Cell[843773, 16697, 2220, 65, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846030, 16767, 149, 3, 40, "Input"],
Cell[846182, 16772, 2307, 67, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[848526, 16844, 217, 6, 40, "Input"],
Cell[848746, 16852, 70, 1, 40, "Output"]
}, Open  ]],
Cell[848831, 16856, 87, 1, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[848955, 16862, 123, 1, 51, "Subsection"],
Cell[849081, 16865, 305, 5, 62, "Text"],
Cell[849389, 16872, 155, 4, 42, "Input"],
Cell[849547, 16878, 260, 8, 86, "Input"],
Cell[849810, 16888, 1605, 50, 158, "Input"],
Cell[CellGroupData[{
Cell[851440, 16942, 769, 22, 90, "Input"],
Cell[852212, 16966, 97, 1, 40, "Output"],
Cell[852312, 16969, 95, 1, 40, "Output"],
Cell[852410, 16972, 97, 1, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[852544, 16978, 222, 4, 65, "Input"],
Cell[852769, 16984, 633, 19, 49, "Output"],
Cell[853405, 17005, 329, 8, 40, "Output"]
}, Open  ]],
Cell[853749, 17016, 211, 6, 39, "Text"],
Cell[853963, 17024, 1447, 34, 364, "Output"],
Cell[855413, 17060, 110, 1, 39, "Text"],
Cell[855526, 17063, 445, 19, 224, "Input"],
Cell[CellGroupData[{
Cell[855996, 17086, 461, 12, 71, "Input"],
Cell[856460, 17100, 73, 1, 40, "Output"],
Cell[856536, 17103, 73, 1, 40, "Output"]
}, Open  ]],
Cell[856624, 17107, 316, 10, 41, "Text"],
Cell[CellGroupData[{
Cell[856965, 17121, 734, 30, 242, "Input"],
Cell[857702, 17153, 137, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[857876, 17161, 602, 16, 90, "Input"],
Cell[858481, 17179, 122, 2, 40, "Output"],
Cell[858606, 17183, 118, 2, 40, "Output"],
Cell[858727, 17187, 122, 2, 40, "Output"]
}, Open  ]],
Cell[858864, 17192, 129, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[859018, 17197, 344, 9, 75, "Input"],
Cell[859365, 17208, 99, 1, 40, "Output"]
}, Open  ]],
Cell[859479, 17212, 190, 6, 39, "Text"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

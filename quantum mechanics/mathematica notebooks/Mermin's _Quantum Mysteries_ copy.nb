(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    209425,       7517]
NotebookOptionsPosition[    190963,       6959]
NotebookOutlinePosition[    191374,       6976]
CellTagsIndexPosition[    191331,       6973]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"2", "-", "2"}]], "Input",
 CellLabel->"In[1]:="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[1]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["David Mermin's \"Quantum Mysteries\" ", "Title"],

Cell["\<\
Nicholas Wheeler, Reed College Physics Departent. This material was written \
in 2006, revised and slightly expanded in March 2007 for use in Quantum II. \
Converted to v7 on 13 January 2013.\
\>", "Text",
 CellChangeTimes->{{3.568660978379616*^9, 3.568661019177331*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.568660866114202*^9, 3.568660869247407*^9}}],

Cell["We will need these tools:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P_", "\[CircleTimes]", "Q_"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", "P", ",", "Q"}], "]"}], ",", "i", ",", "j", 
           ",", "k"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"Dimensions", "[", "P", "]"}], "\[LeftDoubleBracket]", 
            "2", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "P", "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "Q", "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellLabel->"In[2]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "0"], "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"0", "1"},
      {"1", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "2"], "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"-", "\[ImaginaryI]"}]},
      {"\[ImaginaryI]", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "3"], "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";"}]}], "Input",
 CellLabel->"In[3]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"A", ".", "B"}], "-", 
   RowBox[{"B", ".", "A"}]}]}]], "Input",
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Null8", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "0"}
     }], ")"}]}], ";"}]], "Input",
 CellLabel->"In[8]:="],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell["Introduction:", "Subsection"],

Cell[TextData[{
 "Chapter 6 in Asher Peres' ",
 StyleBox["Quantum Theory: Concepts & Methods",
  FontSlant->"Italic"],
 " is entitled \"Bell's Theorem,\" and \[Section]6-1 bears the subtitle \"The \
dilemma of Einstein, Podolsky and Rosen.\" At page 152 in that section I \
encountered a short (and to me not very intelligible) summary of an argument \
due to N. David Mermin that I had encountered several times previously, but \
had never had time/motivation to try to trace out in detail. That is exactly \
what I will attempt to do here.\nMermin's work was inspired by (then \
unpublished) work of D.M. Greenberger, M.A. Horn & A. Zeilinger (1989) and \
first appeared under the title \"What's wrong with these elements of \
reality\" in Mermin's monthly column in Physics Today ",
 StyleBox["43",
  FontWeight->"Bold"],
 ", 9 (June, 1990), and shortly thereafter, in a somewhat more colorful (but \
to me equally obscure) form, as \"Quantum mysteries revisited,\" AJP ",
 StyleBox["58",
  FontWeight->"Bold"],
 ", 731 (1990).\nEPR imagined themselves to be demonstrating that quantum \
mechanics was \"incomplete\" because, in instances of the sort to which they \
drew attention, it failed to conform to what they considered to be essential \
basic features of any acceptable theory of physical reality\[LongDash]failed \
to conform to what has come to be called \"local realism.\"\nJohn Bell, \
building upon a sharpened version of the EPR model, developed certain \
inequalities that would have to be honored if quantum mechanics was to be in \
accordance with a \"hidden variable theory\" of the sort which EPR appeared \
to have in mind, and he left to experimentalists the non-trivial task of \
discovering whether or not those inequalities were in fact satisfied (they \
turned out not to be).\nThe EPR/Bell system contemplated a composite \
2-particle system. GHZ\[LongDash]in work that Mermin reportedly considered to \
be \"hot stuff\" (see page 222 in A. D. Aczel's ",
 StyleBox["Entanglement",
  FontSlant->"Italic"],
 " (2001))\[LongDash]argued in reference to a 4-particle system, but without \
reference to inequalities.  Mermin's wonderful accomplishment was to produce \
a simpler 3-particle system that leads to the same conclusion. \nMermin is \
deep into quantum computation these days, and allows himself to use shorthand \
notations that, while possibly standard to that field, are very confusing to \
me. My effort here will be to write out Mermin's argument in mathematical \
language that I can understand (but that he would doubtless consider to be \
insanely pedantic and explicit)."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Remark added later:",
 FontColor->RGBColor[1, 0, 0]]], "Subsubsection"],

Cell[TextData[{
 "GHZ appears on pages 73\[Dash]76 in Bell's Theorem, ",
 StyleBox["Quantum Theory and Conceptions of the Universe ",
  FontSlant->"Italic"],
 "(1989),",
 " edited by M. Kafatos. More readily accessible is D.M. Greenberger, M.A. \
Horn, A. Shimony & A. Zeilinger, \"Bell's theorem without inequalities,\" AJP \
",
 StyleBox["58",
  FontWeight->"Bold"],
 ", 1131\[Dash]1143 (1990)."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Description of the system:", "Subsection"],

Cell[TextData[{
 "We have before us three distinct and distinguishable 2-state systems, named \
",
 StyleBox["a",
  FontSlant->"Italic"],
 ",",
 StyleBox[" b",
  FontSlant->"Italic"],
 " and ",
 StyleBox["c",
  FontSlant->"Italic"],
 ". To be physically concrete we may\[LongDash]in the tradition of Bohm and \
Bell\[LongDash]think of them as spin one-half particles. Though born at the \
same moment of the same unspecified explosive event, they are now so widely \
separated that we can in principle consider them to be non-interactive, \
autonymous physical systems. But to make the argument work we will want \
ultimately to view them as the component parts of a composite quantum system \
in a certain highly entangled state (just as Bohm/Bell elected to contentrate \
on situations in which their two particles were in a singlet state)."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observables of interest:", "Subsection"],

Cell[TextData[{
 "We have in hand two measurement devices/meters designed to look at system \
",
 StyleBox["a",
  FontSlant->"Italic"],
 ", two at system ",
 StyleBox["b",
  FontSlant->"Italic"],
 ", two at system ",
 StyleBox["c",
  FontSlant->"Italic"],
 " (or so we would say if we were concerned only with unentangled states):"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["A", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "1"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "2"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "2"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "1"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "2"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "2"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["C", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["C", "2"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "2"]}]}], ";"}]}], "Input",
 CellLabel->"In[9]:="],

Cell["\<\
The measurement devices can be used in any combination, since they do not \
interfere with each other (are represented by matrices that commute) \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["B", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["B", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "2"], ",", 
    SubscriptBox["B", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "2"], ",", 
    SubscriptBox["B", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["C", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["C", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "2"], ",", 
    SubscriptBox["C", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "2"], ",", 
    SubscriptBox["C", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["B", "1"], ",", 
    SubscriptBox["C", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["B", "1"], ",", 
    SubscriptBox["C", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["B", "2"], ",", 
    SubscriptBox["C", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["B", "2"], ",", 
    SubscriptBox["C", "2"]}], "]"}], "==", "Null8"}]}], "Input",
 CellLabel->"In[25]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[26]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[27]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[28]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[29]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[30]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[31]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[32]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[33]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[34]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[35]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[36]="]
}, Open  ]],

Cell["\<\
though the devices that look to any individual particle do interfere with one \
another:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["A", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["B", "1"], ",", 
    SubscriptBox["B", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["C", "1"], ",", 
    SubscriptBox["C", "2"]}], "]"}], "==", "Null8"}]}], "Input",
 CellLabel->"In[179]:="],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[179]="],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[180]="],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[181]="]
}, Open  ]],

Cell[TextData[{
 "To emphasize the point just established: each of our  6 observables commute \
with all members of other families, but not within their own families. \
Observations performed upon systems ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalS]", "a"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalS]", "b"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[ScriptCapitalS]", "c"], TraditionalForm]]],
 ", since they do not interfere with one another, can be performed in any \
order. The observables look at composite states (represented by 8-vectors) \
and their ",
 StyleBox["\[PlusMinus]1", "Input"],
 " meter readings are 4-fold degenerate: "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["A", "1"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["A", "2"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["B", "1"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["B", "2"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["C", "1"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["C", "2"], "]"}]}], "Input",
 CellLabel->"In[37]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[37]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[38]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[39]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[40]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[41]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[42]="]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "We digress to construct the spectral resolutions of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "2"], TraditionalForm]]],
 ":"
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Sigma]", "1"], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[Sigma]", "1"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvectors", "[", 
  SubscriptBox["\[Sigma]", "1"], "]"}]}], "Input",
 CellLabel->"In[46]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1"},
     {"1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[46]//MatrixForm="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[47]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[48]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["u", "1"], "=", 
   RowBox[{"(", GridBox[{
      {
       FractionBox["1", 
        SqrtBox["2"]]},
      {
       FractionBox["1", 
        SqrtBox["2"]]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["d", "1"], "=", 
   RowBox[{"(", GridBox[{
      {
       FractionBox["1", 
        SqrtBox["2"]]},
      {
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox["2"]]}]}
     }], ")"}]}], ";"}]}], "Input",
 CellLabel->"In[77]:="],

Cell["Here are the projectors onto those eigenstates", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"1", "u", " "}]], "=", 
   RowBox[{
    SubscriptBox["u", "1"], ".", 
    RowBox[{"Transpose", "[", 
     SubscriptBox["u", "1"], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"1", "d", " "}]], "=", 
   RowBox[{
    SubscriptBox["d", "1"], ".", 
    RowBox[{"Transpose", "[", 
     SubscriptBox["d", "1"], "]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[57]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["P", 
   RowBox[{"1", "u"}]], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", 
   RowBox[{"1", "d"}]], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[59]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[59]//MatrixForm="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[60]//MatrixForm="]
}, Open  ]],

Cell[TextData[{
 "which information we use to obtain the spectral resolution of the hermitian \
matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "1"], TraditionalForm]]],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["\[Sigma]", "1"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     SubscriptBox["P", 
      RowBox[{"1", "u"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     SubscriptBox["P", 
      RowBox[{"1", "d"}]]}]}]}],
  FontColor->RGBColor[1, 0, 0]]], "Input",
 CellLabel->"In[61]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[61]="]
}, Open  ]],

Cell[TextData[{
 "Ditto for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "2"], TraditionalForm]]],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Sigma]", "2"], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["\[Sigma]", "2"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvectors", "[", 
  SubscriptBox["\[Sigma]", "2"], "]"}]}], "Input",
 CellLabel->"In[62]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {"\[ImaginaryI]", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[62]//MatrixForm="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[63]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[64]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["u", "2"], "=", 
   RowBox[{"(", GridBox[{
      {
       FractionBox["1", 
        SqrtBox["2"]]},
      {
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["d", "2"], "=", 
   RowBox[{"(", GridBox[{
      {
       FractionBox["1", 
        SqrtBox["2"]]},
      {
       RowBox[{"-", 
        FractionBox["\[ImaginaryI]", 
         SqrtBox["2"]]}]}
     }], ")"}]}], ";"}]}], "Input",
 CellLabel->"In[68]:="],

Cell["We verify that those eigenvectors are orthonormal:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Conjugate", "[", 
    SubscriptBox["u", "2"], "]"}], "]"}], ".", 
  SubscriptBox["u", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Conjugate", "[", 
    SubscriptBox["d", "2"], "]"}], "]"}], ".", 
  SubscriptBox["d", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Conjugate", "[", 
    SubscriptBox["u", "2"], "]"}], "]"}], ".", 
  SubscriptBox["d", "2"]}]}], "Input",
 CellLabel->"In[74]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1", "}"}], "}"}]], "Output",
 CellLabel->"Out[74]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1", "}"}], "}"}]], "Output",
 CellLabel->"Out[75]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0", "}"}], "}"}]], "Output",
 CellLabel->"Out[76]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", "u", " "}]], "=", 
   RowBox[{
    SubscriptBox["u", "2"], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Conjugate", "[", 
      SubscriptBox["u", "2"], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", "d", " "}]], "=", 
   RowBox[{
    SubscriptBox["d", "2"], ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Conjugate", "[", 
      SubscriptBox["d", "2"], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[108]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["P", 
   RowBox[{"2", "u"}]], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", 
   RowBox[{"2", "d"}]], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[110]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", "2"]}]},
     {
      FractionBox["\[ImaginaryI]", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[110]//MatrixForm="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["\[ImaginaryI]", "2"]},
     {
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", "2"]}], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[111]//MatrixForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", "u"}]], ".", 
    SubscriptBox["P", 
     RowBox[{"2", "u"}]]}], "-", 
   SubscriptBox["P", 
    RowBox[{"2", "u"}]]}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", "d"}]], ".", 
    SubscriptBox["P", 
     RowBox[{"2", "d"}]]}], "-", 
   SubscriptBox["P", 
    RowBox[{"2", "d"}]]}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", "u"}]], ".", 
   SubscriptBox["P", 
    RowBox[{"2", "d"}]]}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[112]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[112]//MatrixForm="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[113]//MatrixForm="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[114]//MatrixForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["\[Sigma]", "2"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     SubscriptBox["P", 
      RowBox[{"2", "u"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     SubscriptBox["P", 
      RowBox[{"2", "d"}]]}]}]}],
  FontColor->RGBColor[1, 0, 0]]], "Input",
 CellLabel->"In[115]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[115]="]
}, Open  ]],

Cell[TextData[{
 "We are in position now to obtain spectral resolutions of the ",
 StyleBox["A", "Input"],
 "/",
 StyleBox["B", "Input"],
 "/",
 StyleBox["C", "Input"],
 " matrices that represent our 6 instruments, this being information basic to \
the description of actual measurement processes."
}], "Text"],

Cell[BoxData["\[IndentingNewLine]"], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Spectral resolution of the A, B and C meters (of which each comes in two \
flavors):\
\>", "Subsection"],

Cell["From", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["A", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "1"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "2"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "2"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "1"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "2"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "2"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["C", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "1"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["C", "2"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "2"]}]}], ";"}]}], "Input",
 CellLabel->"In[15]:="],

Cell["and the results just obtained, we have", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["A", "1"], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"1", "u"}]], "\[CircleTimes]", 
       SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["\[Sigma]", "0"]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"1", "d"}]], "\[CircleTimes]", 
       SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["\[Sigma]", "0"]}], Cell[""]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["A", "2"], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", "u"}]], "\[CircleTimes]", 
       SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["\[Sigma]", "0"]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["P", 
        RowBox[{"2", "d"}]], "\[CircleTimes]", 
       SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["\[Sigma]", "0"]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["B", "1"], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
       SubscriptBox["P", 
        RowBox[{"1", "u"}]]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["\[Sigma]", "0"]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
       SubscriptBox["P", 
        RowBox[{"1", "d"}]]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["\[Sigma]", "0"]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["B", "2"], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
       SubscriptBox["P", 
        RowBox[{"2", "u"}]]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["\[Sigma]", "0"]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
       SubscriptBox["P", 
        RowBox[{"2", "d"}]]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["\[Sigma]", "0"]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["C", "1"], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
       SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["P", 
      RowBox[{"1", "u"}]]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
       SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["P", 
      RowBox[{"1", "d"}]]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["C", "2"], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
       SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["P", 
      RowBox[{"2", "u"}]]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
       SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
     SubscriptBox["P", 
      RowBox[{"2", "d"}]]}]}]}]}]}], "Input",
 CellLabel->"In[117]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[117]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[118]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[119]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[120]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[121]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[122]="]
}, Open  ]],

Cell["\<\
Each instrumental matrix is the weighted sum of two projectors, which we here \
define:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["PA", 
    RowBox[{"1", "u"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"1", "u"}]], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PA", 
    RowBox[{"1", "d"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"1", "d"}]], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PA", 
    RowBox[{"2", "u"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", "u"}]], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PA", 
    RowBox[{"2", "d"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["P", 
       RowBox[{"2", "d"}]], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"1", "u"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["P", 
       RowBox[{"1", "u"}]]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"1", "d"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["P", 
       RowBox[{"1", "d"}]]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"2", "u"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["P", 
       RowBox[{"2", "u"}]]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"2", "d"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["P", 
       RowBox[{"2", "d"}]]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["\[Sigma]", "0"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PC", 
    RowBox[{"1", "u"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["P", 
     RowBox[{"1", "u"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PC", 
    RowBox[{"1", "d"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["P", 
     RowBox[{"1", "d"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PC", 
    RowBox[{"2", "u"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["P", 
     RowBox[{"2", "u"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["PC", 
    RowBox[{"2", "d"}]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "0"]}], ")"}], "\[CircleTimes]", 
    SubscriptBox["P", 
     RowBox[{"2", "d"}]]}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[123]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   SubscriptBox["A", "1"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     SubscriptBox["PA", 
      RowBox[{"1", "u"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     SubscriptBox["PA", 
      RowBox[{"1", "d"}]]}]}]}],
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   SubscriptBox["A", "2"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     SubscriptBox["PA", 
      RowBox[{"2", "u"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     SubscriptBox["PA", 
      RowBox[{"2", "d"}]]}]}]}],
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   SubscriptBox["B", "1"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     SubscriptBox["PB", 
      RowBox[{"1", "u"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     SubscriptBox["PB", 
      RowBox[{"1", "d"}]]}]}]}],
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   SubscriptBox["B", "2"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     SubscriptBox["PB", 
      RowBox[{"2", "u"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     SubscriptBox["PB", 
      RowBox[{"2", "d"}]]}]}]}],
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   SubscriptBox["C", "1"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     SubscriptBox["PC", 
      RowBox[{"1", "u"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     SubscriptBox["PC", 
      RowBox[{"1", "d"}]]}]}]}],
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   SubscriptBox["C", "2"], "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     SubscriptBox["PC", 
      RowBox[{"2", "u"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     SubscriptBox["PC", 
      RowBox[{"2", "d"}]]}]}]}],
  FontColor->RGBColor[1, 0, 0]]}], "Input",
 CellLabel->"In[135]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[135]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[136]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[137]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[138]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[139]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[140]="]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Construction of Mermin's input state:", "Subsection"],

Cell["We write", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"up", "=", 
   RowBox[{"(", GridBox[{
      {"1"},
      {"0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dn", "=", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"1"}
     }], ")"}]}], ";"}]}], "Input",
 CellLabel->"In[144]:="],

Cell[TextData[{
 "to denote the eigenstates of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "3"], TraditionalForm]]]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "3"], ".", "up"}], "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"+", "1"}], ")"}], "up"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "3"], ".", "dn"}], "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "dn"}]}]}], "Input",
 CellLabel->"In[146]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[146]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[147]="]
}, Open  ]],

Cell["\<\
and, with Mermin, look to the several things that can happen when the \
composite pure state\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalPsi]", "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"up", "\[CircleTimes]", "up"}], ")"}], "\[CircleTimes]", 
      "up"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"dn", "\[CircleTimes]", "dn"}], ")"}], "\[CircleTimes]", 
      "dn"}]}], 
    SqrtBox["2"]]}], ";"}]], "Input",
 CellLabel->"In[148]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPsi]", "//", "MatrixForm"}]], "Input",
 CellLabel->"In[149]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]]},
     {"0"},
     {"0"},
     {"0"},
     {"0"},
     {"0"},
     {"0"},
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[149]//MatrixForm="]
}, Open  ]],

Cell[TextData[{
 "is presented to A, B and C\[LongDash]in, let us say (though it has been \
shown not matter), that order. Near the end of this essay I will describe the \
considerations that serve to ",
 StyleBox["motivate",
  FontSlant->"Italic"],
 " the introduction of ",
 StyleBox["\[CapitalPsi]", "Input"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Remark added later:",
 FontColor->RGBColor[1, 0, 0]]], "Subsubsection"],

Cell[TextData[{
 "I have attributed to Mirman a lot of stuff that he actually took directly \
from Greenberger, Horn & Zeilinger. In particular, the state that I have just \
above attributed to Mirman is at page 173 in G. Greenstein & A. G. Zajonc,",
 StyleBox[" The Quantum Challenge: Modern Research on the Foundations of \
Quantum Mechanics",
  FontSlant->"Italic"],
 " (2006) called "
}], "Text"],

Cell[BoxData[
 SubscriptBox["\[CapitalPsi]", "GHZ"]], "Input"],

Cell[TextData[{
 "and the argument that they present (with attribution to GHZ) is precisely \
the argument that Mirman gives, though Mirman seems to want us to think that \
his argument is a \"simplification\" of the GHZ argument. Mirman's  \
contribution appears to have consisted mainly of the introduction of ",
 StyleBox["R", "Input"],
 "ed and ",
 StyleBox["G", "Input"],
 "reen into his more vivid presentation of GHZ's argument. "
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Measurement protocols: ", "Subsection"],

Cell[TextData[{
 "Each of three instruments can be selected from either of two alternatives, \
so there are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "3"], "=", "8", " "}], TraditionalForm]]],
 "distinct measurement sequences: these I denote "
}], "Text"],

Cell[BoxData[{
 StyleBox["111",
  FontColor->RGBColor[
   1, 0, 0]], "\[IndentingNewLine]", "112", "\[IndentingNewLine]", "121", "\
\[IndentingNewLine]", 
 StyleBox["122",
  FontColor->RGBColor[
   1, 0, 0]], "\[IndentingNewLine]", "211", "\[IndentingNewLine]", 
 StyleBox["212",
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox["221",
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", "222"}], "Input"],

Cell[TextData[{
 "where, for example, ",
 StyleBox["121", "Input"],
 " signals our intention to make our measurements first with  ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["A", "1"], "Input"], TraditionalForm]]],
 ", then with  ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["B", "2"], "Input"], TraditionalForm]]],
 ", then with  ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["C", "1"], "Input"], TraditionalForm]]],
 ". "
}], "Text"],

Cell["\<\
NOTE: A more attractive notational scheme is provided by the binary numbers\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{"000", "\[IndentingNewLine]", "001", "\[IndentingNewLine]", \
"010", "\[IndentingNewLine]", "011", "\[IndentingNewLine]", "100", "\
\[IndentingNewLine]", "101", "\[IndentingNewLine]", "110", "\
\[IndentingNewLine]", "111"}], "Input",
 FontColor->RGBColor[0, 0, 1]],

Cell[TextData[{
 "Mermin restricts his attention to the ",
 StyleBox["red cases",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[", in which the number of ",
  FontVariations->{"Underline"->True}],
 StyleBox["1", "Input",
  FontVariations->{"Underline"->True}],
 StyleBox["s is odd",
  FontVariations->{"Underline"->True}],
 ". He asserts (without argument, but as will emerge) that the other cases \
are \"unremarkable, and of no relevance for the argument that follows.\""
}], "Text"],

Cell[BoxData["\[IndentingNewLine]"], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data sets:", "Subsection"],

Cell[TextData[{
 "Select a protocol. An experimental run will produce one or another of eight \
possible data sets: \n\t\[Bullet] the selected ",
 StyleBox["A", "Input"],
 "-meter will announce ",
 StyleBox["\[PlusMinus]1", "Input"],
 ", then\n\t\[Bullet]the selected ",
 StyleBox["B", "Input"],
 "-meter will announce ",
 StyleBox["\[PlusMinus]1", "Input"],
 ", finally\n\t\[Bullet] the selected ",
 StyleBox["C", "Input"],
 "-meter will announce ",
 StyleBox["\[PlusMinus]1", "Input"],
 "."
}], "Text"],

Cell[TextData[{
 "Mermin supposes the meters to have been so constructed that ",
 StyleBox["+1", "Input"],
 " turns on a ",
 StyleBox["RED LIGHT",
  FontColor->RGBColor[1, 0, 0]],
 ", ",
 StyleBox["-1", "Input"],
 " turns on a ",
 StyleBox["GREEN LIGHT",
  FontColor->RGBColor[0.0467079, 0.8009, 0.100954]],
 ", and writes"
}], "Text"],

Cell[BoxData[{"RRR", "\[IndentingNewLine]", "RRG", "\[IndentingNewLine]", \
"RGR", "\[IndentingNewLine]", "RGG", "\[IndentingNewLine]", "GRR", "\
\[IndentingNewLine]", "GRG", "\[IndentingNewLine]", "GGR", "\
\[IndentingNewLine]", "GGG"}], "Input"],

Cell["to describe the respective data sets.", "Text"],

Cell[BoxData["\[IndentingNewLine]"], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expected results of successive ABC measurements:", "Subsection"],

Cell["\<\
The computation here is made tedious by the circumstance that it involves \
sub-sub-cases of sub-cases of cases, and will be made easier by introduction \
of these definitions:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Prob", "[", 
   RowBox[{"P_", ",", "\[Psi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Conjugate", "[", 
        RowBox[{"P", ".", "\[Psi]"}], "]"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"P", ".", "\[Psi]"}], ")"}]}], ")"}], "\[LeftDoubleBracket]", 
    "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Prepared", "[", 
   RowBox[{"P_", ",", "\[Psi]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"P", ".", "\[Psi]"}], 
   SqrtBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Conjugate", "[", 
          RowBox[{"P", ".", "\[Psi]"}], "]"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{"P", ".", "\[Psi]"}], ")"}]}], ")"}], "\[LeftDoubleBracket]",
       "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}]]]}]}], "Input",
 CellLabel->"In[185]:="],

Cell["\<\
The former computes the probability that a projection operator P, when \
presented with a state \[Psi], will act to pluck out its component of the \
incident state. The latter describes the normalized state that the projector \
has then prepared and shipped out.\
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "Expected results in the case ",
 StyleBox["122",
  FontSize->18],
 ":"
}], "Subsubsection"],

Cell["The A-meter announces R with probability ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PA", 
    RowBox[{"1", "u"}]], ",", "\[CapitalPsi]"}], "]"}]], "Input",
 CellLabel->"In[187]:="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[187]="]
}, Open  ]],

Cell["and ships to B the state", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPsi]R", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PA", 
     RowBox[{"1", "u"}]], ",", "\[CapitalPsi]"}], "]"}]}]], "Input",
 CellLabel->"In[189]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[189]="]
}, Open  ]],

Cell["We check the normalization:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Conjugate", "[", "\[CapitalPsi]R", "]"}], "]"}], ".", 
     "\[CapitalPsi]R"}], ")"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellLabel->"In[248]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[248]="]
}, Open  ]],

Cell["In all other cases the A-meter announces G with probability", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PA", 
    RowBox[{"1", "d"}]], ",", "\[CapitalPsi]"}], "]"}]], "Input",
 CellLabel->"In[191]:="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[191]="]
}, Open  ]],

Cell["and ships the state", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPsi]G", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PA", 
     RowBox[{"1", "d"}]], ",", "\[CapitalPsi]"}], "]"}]}]], "Input",
 CellLabel->"In[192]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[192]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Conjugate", "[", "\[CapitalPsi]G", "]"}], "]"}], ".", 
     "\[CapitalPsi]G"}], ")"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellLabel->"In[249]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[249]="]
}, Open  ]],

Cell["So far as the A-meter is concerned, we have, in summary", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ProbR", "=", 
   FractionBox["1", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProbG", "=", 
   FractionBox["1", "2"]}], ";"}]}], "Input",
 CellLabel->"In[220]:="],

Cell["It is gratifying to observe that", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbR", "+", "ProbG"}]], "Input",
 CellLabel->"In[250]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[250]="]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell["\<\
Pursuing now the R branch (which is to say: the former alternative), the \
B-meter announces R with probability \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"2", "u"}]], ",", "\[CapitalPsi]R"}], "]"}]], "Input",
 CellLabel->"In[251]:="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[251]="]
}, Open  ]],

Cell["and ships the state", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPsi]RR", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PB", 
     RowBox[{"2", "u"}]], ",", "\[CapitalPsi]R"}], "]"}]}]], "Input",
 CellLabel->"In[252]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[252]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Conjugate", "[", "\[CapitalPsi]RR", "]"}], "]"}], ".", 
     "\[CapitalPsi]RR"}], ")"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellLabel->"In[253]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[253]="]
}, Open  ]],

Cell["Else the B-meter announces G with probability", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"2", "d"}]], ",", "\[CapitalPsi]R"}], "]"}]], "Input",
 CellLabel->"In[254]:="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[254]="]
}, Open  ]],

Cell["and ships the state", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPsi]RG", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PB", 
     RowBox[{"2", "d"}]], ",", "\[CapitalPsi]R"}], "]"}]}]], "Input",
 CellLabel->"In[255]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["\[ImaginaryI]", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["\[ImaginaryI]", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["\[ImaginaryI]", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["\[ImaginaryI]", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[255]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Conjugate", "[", "\[CapitalPsi]RG", "]"}], "]"}], ".", 
     "\[CapitalPsi]RG"}], ")"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellLabel->"In[256]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[256]="]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell["\<\
Pursuing now the G branch of the A-meter's output, when the B-meter announces \
R we have\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"2", "u"}]], ",", "\[CapitalPsi]G"}], "]"}]], "Input",
 CellLabel->"In[201]:="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[201]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPsi]GR", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PB", 
     RowBox[{"2", "u"}]], ",", "\[CapitalPsi]G"}], "]"}]}]], "Input",
 CellLabel->"In[257]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["\[ImaginaryI]", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["\[ImaginaryI]", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[257]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Conjugate", "[", "\[CapitalPsi]GR", "]"}], "]"}], ".", 
     "\[CapitalPsi]GR"}], ")"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellLabel->"In[258]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[258]="]
}, Open  ]],

Cell["while when the B-meter announces G we have", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"2", "d"}]], ",", "\[CapitalPsi]G"}], "]"}]], "Input",
 CellLabel->"In[259]:="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[259]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPsi]GG", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PB", 
     RowBox[{"2", "d"}]], ",", "\[CapitalPsi]G"}], "]"}]}]], "Input",
 CellLabel->"In[260]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["\[ImaginaryI]", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["\[ImaginaryI]", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[260]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Conjugate", "[", "\[CapitalPsi]GG", "]"}], "]"}], ".", 
     "\[CapitalPsi]GG"}], ")"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellLabel->"In[261]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[261]="]
}, Open  ]],

Cell["In summary, we have", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ProbRR", "=", 
   FractionBox["1", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProbRG", "=", 
   FractionBox["1", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProbGR", "=", 
   FractionBox["1", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProbGG", "=", 
   FractionBox["1", "2"]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[230]:="],

Cell[BoxData[""], "Input"],

Cell["\<\
Tracing now the RR branch to the C-meter: when the C-meter announces R we \
have \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PC", 
    RowBox[{"2", "u"}]], ",", "\[CapitalPsi]RR"}], "]"}]], "Input",
 CellLabel->"In[262]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[262]="]
}, Open  ]],

Cell["Also", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPsi]RRR", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"2", "u"}]], ",", "\[CapitalPsi]RR"}], "]"}]}]], "Input",
 CellLabel->"In[263]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["\[ImaginaryI]", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[263]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Conjugate", "[", "\[CapitalPsi]RRR", "]"}], "]"}], ".", 
     "\[CapitalPsi]RRR"}], ")"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellLabel->"In[264]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[264]="]
}, Open  ]],

Cell["\<\
but, since we do not plan to make measurements on the C-meter's output, those \
facts are of no particular relevance, and will henceforth be omitted. Placing \
the preceding result in the company of its companions, we have\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ProbRRR", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"2", "u"}]], ",", "\[CapitalPsi]RR"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ProbRRG", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"2", "d"}]], ",", "\[CapitalPsi]RR"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ProbRGR", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"2", "u"}]], ",", "\[CapitalPsi]RG"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ProbRGG", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"2", "d"}]], ",", "\[CapitalPsi]RG"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ProbGRR", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"2", "u"}]], ",", "\[CapitalPsi]GR"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ProbGRG", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"2", "d"}]], ",", "\[CapitalPsi]GR"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ProbGGR", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"2", "u"}]], ",", "\[CapitalPsi]GG"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ProbGGG", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"2", "d"}]], ",", "\[CapitalPsi]GG"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[265]:="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[265]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[266]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[267]="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[268]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[269]="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[270]="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[271]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[272]="]
}, Open  ]],

Cell["\<\
The probability of any specified sequence of three flashes can now be read \
from the exhaustive list\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ProbR", "*", "ProbRR", "*", "ProbRRR"}], "\[IndentingNewLine]", 
 RowBox[{"ProbR", "*", "ProbRR", "*", "ProbRRG"}], "\[IndentingNewLine]", 
 RowBox[{"ProbR", "*", "ProbRG", "*", "ProbRGR"}], "\[IndentingNewLine]", 
 RowBox[{"ProbR", "*", "ProbRG", "*", "ProbRGG"}], "\[IndentingNewLine]", 
 RowBox[{"ProbG", "*", "ProbGR", "*", "ProbGRR"}], "\[IndentingNewLine]", 
 RowBox[{"ProbG", "*", "ProbGR", "*", "ProbGRG"}], "\[IndentingNewLine]", 
 RowBox[{"ProbG", "*", "ProbGG", "*", "ProbGGR"}], "\[IndentingNewLine]", 
 RowBox[{"ProbG", "*", "ProbGG", "*", "ProbGGG"}]}], "Input",
 CellLabel->"In[273]:="],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellLabel->"Out[273]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[274]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[275]="],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellLabel->"Out[276]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[277]="],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellLabel->"Out[278]="],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellLabel->"Out[279]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[280]="]
}, Open  ]],

Cell[TextData[{
 "Here ",
 StyleBox["ProbG*ProbGR*ProbGRG", "Input"],
 " (for example) is to be read as the probability of \"green followed by red \
followed by green.\" The eight probabilities listed exhaust the \
possibilities, and gratifyingly add to one. Here follows a diagramatic \
representation of the situation just described:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "0.8`", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "10"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "0.8`", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"7", ",", "10"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "0.8`", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"9", ",", 
            RowBox[{"-", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", "10"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.007`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "4"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "4"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", 
              RowBox[{"-", "4"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"6", ",", "6"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"6", ",", 
            RowBox[{"-", "6"}]}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "6"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "6"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "2"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", 
              RowBox[{"-", "6"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "6"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", 
              RowBox[{"-", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "7"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "3"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "7"}]}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", "7"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", "5"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", "3"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "3"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", 
              RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "5"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", 
              RowBox[{"-", "5"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "7"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", 
              RowBox[{"-", "7"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{
        "\"\<\\!\\(\\*\\nStyleBox[SubscriptBox[\>\"", " ", "A", " ", 
         "\"\<, \>\"", " ", "\"\<],\\n FontSize->24]\\)\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"2.1`", ",", "9"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{
        "\"\<\\!\\(\\*\\nStyleBox[SubscriptBox[\>\"", " ", "B", " ", 
         "\"\<, \>\"", " ", "2", " ", "\"\<],\\n FontSize->24]\\)\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"6.1`", ",", "9"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{
        "\"\<\\!\\(\\*\\nStyleBox[SubscriptBox[\>\"", " ", "C", " ", 
         "\"\<, \>\"", " ", "2", " ", "\"\<],\\n FontSize->24]\\)\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"10.1`", ",", "9"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{
        "\"\<\\!\\(\\*\\nStyleBox[SubscriptBox[\\n  StyleBox[\>\"", " ", 
         "\[CapitalPsi]", " ", "\"\<,\\n   FontSize->18], \>\"", " ", "GHZ", 
         " ", "\"\<],\\n FontSize->18]\\)\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2.5`"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<NO\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"15", ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<NO\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"15", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<NO\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"15", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<NO\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"15", ",", 
          RowBox[{"-", "7"}]}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[96]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1.14286 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.159864 0.0544218 0.571429 0.0544218 [
[.27415 1.06122 -14.8125 -9.84375 ]
[.27415 1.06122 14.8125 9.84375 ]
[.49184 1.06122 -14.8125 -9.84375 ]
[.49184 1.06122 14.8125 9.84375 ]
[.70952 1.06122 -14.8125 -10.0312 ]
[.70952 1.06122 14.8125 10.0312 ]
[.02381 .57143 -19.5312 -7.59375 ]
[.02381 .57143 19.5312 7.59375 ]
[.97619 .84354 -8 -6 ]
[.97619 .84354 8 6 ]
[.97619 .73469 -8 -6 ]
[.97619 .73469 8 6 ]
[.97619 .51701 -8 -6 ]
[.97619 .51701 8 6 ]
[.97619 .19048 -8 -6 ]
[.97619 .19048 8 6 ]
[ 0 0 0 0 ]
[ 1 1.14286 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
.8 g
.21429 .02721 m
.21429 1.11565 L
.32313 1.11565 L
.32313 .02721 L
F
.43197 .02721 m
.43197 1.11565 L
.54082 1.11565 L
.54082 .02721 L
F
.64966 .02721 m
.64966 1.11565 L
.7585 1.11565 L
.7585 .02721 L
F
0 g
.007 w
[ ] 0 setdash
.10544 .57143 m
.26871 .57143 L
s
.5 Mabswid
.26871 .35374 m
.26871 .78912 L
s
1 0 0 r
.01 w
.26871 .78912 m
.48639 .78912 L
s
0 1 0 r
.26871 .35374 m
.48639 .35374 L
s
0 g
.5 Mabswid
.48639 .68027 m
.48639 .89796 L
s
.48639 .46259 m
.48639 .2449 L
s
1 0 0 r
.01 w
.48639 .89796 m
.70408 .89796 L
s
0 1 0 r
.48639 .68027 m
.70408 .68027 L
s
.48639 .2449 m
.70408 .2449 L
s
1 0 0 r
.48639 .46259 m
.70408 .46259 L
s
0 g
.5 Mabswid
.70408 .84354 m
.70408 .95238 L
s
.70408 .62585 m
.70408 .73469 L
s
.70408 .29932 m
.70408 .19048 L
s
.70408 .51701 m
.70408 .40816 L
s
1 0 0 r
.01 w
.70408 .95238 m
.92177 .95238 L
s
0 1 0 r
.70408 .84354 m
.92177 .84354 L
s
1 0 0 r
.70408 .73469 m
.92177 .73469 L
s
0 1 0 r
.70408 .62585 m
.92177 .62585 L
s
1 0 0 r
.70408 .51701 m
.92177 .51701 L
s
0 1 0 r
.70408 .40816 m
.92177 .40816 L
s
1 0 0 r
.70408 .29932 m
.92177 .29932 L
s
0 1 0 r
.70408 .19048 m
.92177 .19048 L
s
0 g
gsave
.27415 1.06122 -75.8125 -13.8438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.875 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 18.875 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 24.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(A) show
77.375 22.688 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 17.062 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
88.625 18.875 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.49184 1.06122 -75.8125 -13.8438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.875 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 18.875 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 24.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(B) show
77.375 22.688 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 17.062 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
88.625 18.875 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.70952 1.06122 -75.8125 -14.0312 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 28.0625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 19.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 19.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 24.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(C) show
77.375 23.062 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 17.062 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
88.625 19.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.02381 .57143 -80.5312 -11.5938 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.1875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 15.125 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 15.125 moveto
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 18.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Y) show
73.750 18.062 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 12.750 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(GHZ) show
98.062 15.125 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .84354 -69 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(NO) show
75.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .73469 -69 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(NO) show
75.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .51701 -69 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(NO) show
75.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .19048 -69 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(NO) show
75.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 1.14286 L
0 1.14286 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{249.062, 284.625},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"From In[96]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXU1O5EYUNm67G4gYeiaTRIFFGkWJ2IYFM6skI5FEihRFLFgjhIJmJKJE
k5GQuAAnQOIK7Fiz4ARcgStwBae+8nvlZ7tsF7a7G1AhTbdd9d73/p/LXbbm
j4NP7//6++DTh8ODyW8fD/59/+Hwv8mv/3xUQ4OFIFh4o/4dTgIcJ0HAH/rv
LT7o5Jkf/4mvSXJ7e/uN5eh3T+SJPJEn8kSeqGeiN5pomIzH44QuvxhJrq+v
cTzQ03FyeXlpSPCtztWoA/5bAjBXdfW3tbWlL/Ohnhtp8I2NDS2TZeMcQqI2
QgBA2pKQAQPqMx5jwelZvaBVHL1LlIcWC9JgzsXFRU6aMJeQ82NhK2kchZS5
P2ljHBGPOtJnK0XHQjDMLArv6lhn4cacnlKnUnBaE5FJeLJOU4akVJuCqBTY
VKme0TM+hFF3j5/RPabLU6lWG6U9mAfzYE8RjBYranZt5tw1K13P6BmfKWP9
xbo/npZNxIN5MA/mwVqAZT98rD1aRKfFkxfgBXgBXoAXwCtPzD4KHIdltwfz
YB6sN7Cedhk769HnbqSrMtnvW8WNw67blN016Lp16arBpOj8PnYyWwvvYyez
k3BjzhTTbpLVXbedzAcJbNM1emF8SRG6v79Pjo6OYImyEA6O9Tm7VePznHZB
SjWQgVGdSg1911aXMXkduqDCzs7Okru7O04panq5NCvn+DDXpPAHqJOTE1tZ
fNtN1UGyt7cHbFI8KTXJlDqguVFpDqaSXKtNnRUED4QYBw1In0I9RZUOjU2/
JRydB62DrAUtZ4WUF6kbrQ5hTLNIAiQizr5vK1TD6oQdEqywh7q73fZiwNIa
SOl3dnZM32vtj7JqyCdqs6aXQ1WKWE3u23MvFBjojOq7Y/ioRhEWAKoCCymr
UGsYwpQiCQU1XzPNcBrb5oq2W8WegeIIRMIV+AOmVxvMYG7VXrRflSaiq0n9
MKuocl5EhGSjhHypo61R5itOHccmyx+kMWRBL+OfMBHewAx746e2MZadMtc7
cqK4dfUmKhf1sKop/ehF2dvHL3OEyJr6u7YQT2jN9FwZ2/zi3xf3E7w592Ae
zIPNAcz9kcvZ4Dz9nQYvwAvwAh6vgJnsA7Scnd3egEM3n8N+QVutpruH4HA5
nu2+wgMVmv5eQwuFjNkzTu1J1gOmuSfhoMSjfPbNg3kwV7D6Z2H643G44fGM
nnFujL2/v/7Ayyn/dX+nvYXg/t5zd1r8TfXd9zYa9Ps+fA/3Df2+I9+TQsbs
KaZnwx1fX+/S93Bf68E8mAfL/XBcsSDsj8dBfc/oGZ8LY9Mb7W0oa1bJnsgT
PTmiL6m4VlZWErpvU6vEQF9VMMYFp7m/sBDH6RWIBdSTSMlfY0A/JhSXuDc3
NzX37u6u0gZjkSz/NvRuoqPk5uYmWV9f1+zn5+cjJ4ImcPay4A1GzbNNsF8J
Rnb2sHlWwqZxMWI59Djn0IeEw0YHvOQo0EUWDZlXpsNIpBeeLVRODJYNr5q4
urrKC9dQI4LCrIozRBs1EP/j42OYGizVQs3Bdsm7TLynp6eGlw3DGOhgWGRQ
hjQLk4se3N/f19EFxbAKRVocihwmMLgoc9mixY6CbZRRKmq63NjTOC9axGWp
9BQtIiYltre3jRKKIq3bWMdRuEwbslgFKI0bEBE/PauADKP0Sr2NzAE1wKG0
TFOKbMSYylxhDzccjhCUV05lJ+ARWqS6tKMEZLODn2YGETOyY5Q9DXZkMc1q
K9N5QDqjPkQivM6TSq2iQiWbOHMCUCJmyeigWkwwABWlatRKazyvdFYKSL+x
K4LNFllTi2QGsidX1bTypG4VNCaOTLU4nU0PoRKcxHmPZ8TLxnGKoyuOndht
lom4GstkL+RiwxgyHVZTZK3GDYkeiYuuwzkDJWIKOZTDHGcIvtV8lDdRw710
YJFmceOR6R8V/K0cl+Jmqn9m6bYvLOqsV8ljbDSByKJDQR53d3iU5a26yyv1
5YzjVWVMItOpKB7j2pRaK4rm6wZ3TbTWsDCGQrNpwC1OtrOyeM4XVM9ywYm3
tns5mWycFXAnru62C/vYolrWHMsKyQVRsbVj7EVRoRGlK6cpiEXafe7gmiCn
CeeSCJ3pH+KyWK2J8KlMSJsmsSh1VjrXPcVFOXv1hMGRM6HwGy5KZuVVUq9Y
I2k7UR+vjSDbqmiJgopE5fVMVjdDi7OWnMXzqk7W5KtabYbEgWgjGCj0jGMk
nAFMtB25IoTTwKHbdknDx3gL2ESEz3n/xwzTPg4W/gf0Za9Z\
\>"],
 ImageRangeCache->{{{0, 310.312}, {354.75, 0}} -> {-4.04865, -11.2508, \
0.0792871, 0.0792871}}]
}, Open  ]],

Cell["\<\
Mermin directs our attention to the fact that the only possibilities (and \
they occur with equal likelyhood) are \
\>", "Text"],

Cell[BoxData[{"RRR", "\[IndentingNewLine]", "RGG", "\[IndentingNewLine]", \
"GRG", "\[IndentingNewLine]", "GGR"}], "Input"],

Cell[TextData[{
 "\[LongDash]in each of which ",
 StyleBox["R occurs an odd number of times",
  FontVariations->{"Underline"->True}],
 ". This when our triplex measurement device has been set to the 122 \
configuration. But from the fact\[LongDash]already established\[LongDash]that \
the ",
 StyleBox["A", "Input"],
 ", ",
 StyleBox["B", "Input"],
 " and ",
 StyleBox["C", "Input"],
 " matrices commute across family lines it follows that a similar result \
would have been obtained had we\[LongDash]instead of"
}], "Text"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["A", "1"], 
  SubscriptBox["B", "2"], 
  SubscriptBox["C", "2"]}]], "Input"],

Cell["\<\
\[LongDash]used either of the following devices:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["A", "2"], 
  SubscriptBox["B", "1"], 
  SubscriptBox["C", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["A", "2"], 
  SubscriptBox["B", "2"], 
  SubscriptBox["C", "1"]}]}], "Input"],

Cell["\<\
Observe (again with Mermin) that if we looked to the output of only to two of \
the devices (B and C, say) we would\[LongDash]after drawing the obvious \
conclusion from a long exploratory series of observations\[LongDash]always be \
able to infer the state of A:  \
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"XRR", "\[DoubleLongRightArrow]", "X"}], "=", 
  "R"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XGG", "\[DoubleLongRightArrow]", "X"}], "=", 
  "R"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XRG", "\[DoubleLongRightArrow]", "X"}], "=", 
  "G"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XGR", "\[DoubleLongRightArrow]", "X"}], "=", "G"}]}], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Seeming physical implications:", "Subsection"],

Cell["\<\
Adopting (tentatively) the voice of EPR (which is to say: the \"principle of \
local realism\"), Mermin argues  that our ability to make such deductions \
among objects not in physical communication can only mean that the members of \
the trio (call them \"particles\") were stamped at birth with instructions\
\[LongDash]instructions that they carry with them\[LongDash]concerning how \
they are to behave when they encounter one of our meters. He writes, for \
example, \
\>", "Text"],

Cell[BoxData[
 RowBox[{"(", GridBox[{
    {"R", "G", "G"},
    {"G", "R", "R"}
   }], ")"}]], "Input"],

Cell[TextData[{
 "to indicate that\n\t\[Bullet] particle ",
 StyleBox["a",
  FontSlant->"Italic"],
 " is instructed to register R if it encounters a meter set to position #1 \
(an ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "1"], TraditionalForm]]],
 "-meter, or a ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "1"], TraditionalForm]]],
 "-meter, or a ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "1"], TraditionalForm]]],
 "-meter) but \t   to register G if it encounters a meter set to position #2; \
\n\t\[Bullet] particle ",
 StyleBox["b",
  FontSlant->"Italic"],
 " is instructed to register G if it encounters an ",
 Cell[BoxData[
  FormBox["#1", TraditionalForm]]],
 "-meter, but R if it encounters an ",
 Cell[BoxData[
  FormBox["#2", TraditionalForm]]],
 "-meter;  \n\t\[Bullet] particle ",
 StyleBox["c",
  FontSlant->"Italic"],
 " is instructed to register G if it encounters an ",
 Cell[BoxData[
  FormBox["#1", TraditionalForm]]],
 "-meter, but R if it encounters an ",
 Cell[BoxData[
  FormBox["#2", TraditionalForm]]],
 "-meter. \nThere are, all together, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "6"], "=", "64"}], TraditionalForm]]],
 " possible \"instruction sets\" "
}], "Text"],

Cell["\<\
NOTE: Mermin's appeal to \"instruction sets\" replaces Bell's notion of a \
2-valued distribution function p(\[Lambda]) defined on \"hidden variable \
space.\"\
\>", "Text",
 FontSize->12,
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
but, as he argues (I will not reproduce his straightforward argument), only 8 \
of those 64 conform to the observed facts: they are  \
\>", "Text"],

Cell[BoxData[""], "Input"],

Cell[BoxData[{
 RowBox[{"(", GridBox[{
    {"R", "R", "R"},
    {"R", "R", "R"}
   }], ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", GridBox[{
    {"R", "G", "G"},
    {"R", "G", "G"}
   }], ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", GridBox[{
    {"G", "R", "G"},
    {"G", "R", "G"}
   }], ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", GridBox[{
    {"G", "G", "R"},
    {"G", "G", "R"}
   }], ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", GridBox[{
    {"R", "R", "R"},
    {"G", "G", "G"}
   }], ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", GridBox[{
    {"R", "G", "G"},
    {"G", "R", "R"}
   }], ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", GridBox[{
    {"G", "R", "G"},
    {"R", "G", "R"}
   }], ")"}], "\[IndentingNewLine]", 
 RowBox[{"(", GridBox[{
    {"G", "G", "R"},
    {"R", "R", "G"}
   }], ")"}]}], "Input"],

Cell[BoxData[""], "Input"],

Cell[TextData[{
 "We present  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalPsi]", "GHZ"], TraditionalForm]]],
 " many times to our battery ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "1"], 
    SubscriptBox["B", "2"], 
    SubscriptBox["C", "2"]}], TraditionalForm]]],
 "of meters, and each time the pattern of events conforms to the figure. We \
are (if we accept local realism) forced to conclude that every triplet of \
particles {a,b,c} comes equipped with one or another of those instruction \
sets. And, moreover, that the alternative instruction sets are equally \
probable. "
}], "Text"],

Cell[BoxData["\[IndentingNewLine]"], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The pay-off:", "Subsection"],

Cell[TextData[{
 "Mermin would have us look finally to the instrumental configuration ",
 StyleBox["111", "Subsubsection",
  FontSize->18],
 ". Again we have"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PA", 
    RowBox[{"1", "u"}]], ",", "\[CapitalPsi]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]R", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PA", 
     RowBox[{"1", "u"}]], ",", "\[CapitalPsi]"}], "]"}]}]}], "Input",
 CellLabel->"In[303]:="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[303]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[304]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PA", 
    RowBox[{"1", "d"}]], ",", "\[CapitalPsi]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]G", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PA", 
     RowBox[{"1", "d"}]], ",", "\[CapitalPsi]"}], "]"}]}]}], "Input",
 CellLabel->"In[307]:="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[307]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[308]="]
}, Open  ]],

Cell["\<\
Results at the next two stages are, however, modified (we have replaced our \
old instruments with new ones):\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"1", "u"}]], ",", "\[CapitalPsi]R"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPsi]RR", "=", 
   RowBox[{"Prepared", "[", 
    RowBox[{
     SubscriptBox["PB", 
      RowBox[{"1", "u"}]], ",", "\[CapitalPsi]R"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"1", "d"}]], ",", "\[CapitalPsi]R"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPsi]RG", "=", 
   RowBox[{"Prepared", "[", 
    RowBox[{
     SubscriptBox["PB", 
      RowBox[{"1", "d"}]], ",", "\[CapitalPsi]R"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"1", "u"}]], ",", "\[CapitalPsi]G"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPsi]GR", "=", 
   RowBox[{"Prepared", "[", 
    RowBox[{
     SubscriptBox["PB", 
      RowBox[{"1", "u"}]], ",", "\[CapitalPsi]G"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Prob", "[", 
  RowBox[{
   SubscriptBox["PB", 
    RowBox[{"1", "d"}]], ",", "\[CapitalPsi]G"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalPsi]GG", "=", 
  RowBox[{"Prepared", "[", 
   RowBox[{
    SubscriptBox["PB", 
     RowBox[{"1", "d"}]], ",", "\[CapitalPsi]G"}], "]"}]}]}], "Input",
 CellLabel->"In[285]:="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[285]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[286]="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[287]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[288]="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[289]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[290]="],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[291]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[292]="]
}, Open  ]],

Cell["Those results place us in position finally to compute", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NewProbRRR", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"1", "u"}]], ",", "\[CapitalPsi]RR"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NewProbRRG", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"1", "d"}]], ",", "\[CapitalPsi]RR"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NewProbRGR", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"1", "u"}]], ",", "\[CapitalPsi]RG"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NewProbRGG", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"1", "d"}]], ",", "\[CapitalPsi]RG"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NewProbGRR", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"1", "u"}]], ",", "\[CapitalPsi]GR"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NewProbGRG", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"1", "d"}]], ",", "\[CapitalPsi]GR"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NewProbGGR", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"1", "u"}]], ",", "\[CapitalPsi]GG"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NewProbGGG", "=", 
  RowBox[{"Prob", "[", 
   RowBox[{
    SubscriptBox["PC", 
     RowBox[{"1", "d"}]], ",", "\[CapitalPsi]GG"}], "]"}]}]}], "Input",
 CellLabel->"In[293]:="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[293]="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[294]="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[295]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[296]="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[297]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[298]="],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[299]="],

Cell[BoxData["1"], "Output",
 CellLabel->"Out[300]="]
}, Open  ]],

Cell["\<\
Here I highlight the cases that display an odd number of reds (which formerly \
were the only possible outcomes):\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"ProbR", "*", "ProbRR", "*", 
  StyleBox[
   RowBox[{"NewProb", 
    StyleBox["RRR",
     FontColor->RGBColor[1, 0, 0]]}]]}], "\[IndentingNewLine]", 
 RowBox[{"ProbR", "*", "ProbRR", "*", "NewProbRRG"}], "\[IndentingNewLine]", 
 RowBox[{"ProbR", "*", "ProbRG", "*", "NewProbRGR"}], "\[IndentingNewLine]", 
 RowBox[{"ProbR", "*", "ProbRG", "*", 
  StyleBox[
   RowBox[{"NewProb", 
    StyleBox["RGG",
     FontColor->RGBColor[1, 0, 0]]}]]}], "\[IndentingNewLine]", 
 RowBox[{"ProbG", "*", "ProbGR", "*", "NewProbGRR"}], "\[IndentingNewLine]", 
 RowBox[{"ProbG", "*", "ProbGR", "*", 
  StyleBox[
   RowBox[{"NewProb", 
    StyleBox["GRG",
     FontColor->RGBColor[1, 0, 0]]}]]}], "\[IndentingNewLine]", 
 RowBox[{"ProbG", "*", "ProbGG", "*", 
  StyleBox[
   RowBox[{"NewProb", 
    StyleBox["GGR",
     FontColor->RGBColor[1, 0, 0]]}]]}], "\[IndentingNewLine]", 
 RowBox[{"ProbG", "*", "ProbGG", "*", "NewProbGGG"}]}], "Input",
 CellLabel->"In[309]:="],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["0",
  FontColor->RGBColor[1, 0, 0]]], "Input",
 CellLabel->"Out[309]="],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellLabel->"Out[310]="],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellLabel->"Out[311]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["0",
  FontColor->RGBColor[1, 0, 0]]], "Input",
 CellLabel->"Out[312]="],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellLabel->"Out[313]="]
}, Open  ]],

Cell[BoxData[
 StyleBox["0",
  FontColor->RGBColor[1, 0, 0]]], "Input",
 CellLabel->"Out[314]="],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["0",
  FontColor->RGBColor[1, 0, 0]]], "Input",
 CellLabel->"Out[315]="],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellLabel->"Out[316]="]
}, Open  ]],

Cell["\<\
Again, the possible outcomes are equally likely, and their probabilities add \
to one. The modified event-sequences just described are illustrated in the \
following revision of a previous figure:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "0.8`", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "10"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "0.8`", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"7", ",", "10"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "0.8`", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"9", ",", 
            RowBox[{"-", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", "10"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.007`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "4"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "4"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", 
              RowBox[{"-", "4"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"6", ",", "6"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"6", ",", 
            RowBox[{"-", "6"}]}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "6"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "6"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "2"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", 
              RowBox[{"-", "6"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "6"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"6", ",", 
              RowBox[{"-", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "2"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "7"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "3"}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "7"}]}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", "7"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", "5"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", "3"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "3"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", 
              RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "5"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", 
              RowBox[{"-", "5"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", 
              RowBox[{"-", "7"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14", ",", 
              RowBox[{"-", "7"}]}], "}"}]}], "}"}], "]"}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{
        "\"\<\\!\\(\\*\\nStyleBox[SubscriptBox[\>\"", " ", "A", " ", 
         "\"\<, \>\"", " ", "\"\<],\\n FontSize->24]\\)\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"2.1`", ",", "9"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{
        "\"\<\\!\\(\\*\\nStyleBox[SubscriptBox[\>\"", " ", "B", " ", 
         "\"\<, \\n  StyleBox[\>\"", " ", 
         "\"\<,\\n   FontColor->RGBColor[1, 0, 0]]],\\n \
FontSize->24]\\)\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"6.1`", ",", "9"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{
        "\"\<\\!\\(\\*\\nStyleBox[SubscriptBox[\>\"", " ", "C", " ", 
         "\"\<, \\n  StyleBox[\>\"", " ", 
         "\"\<,\\n   FontColor->RGBColor[1, 0, 0]]],\\n \
FontSize->24]\\)\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"10.1`", ",", "9"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{
        "\"\<\\!\\(\\*\\nStyleBox[SubscriptBox[\\n  StyleBox[\>\"", " ", 
         "\[CapitalPsi]", " ", "\"\<,\\n   FontSize->18], \>\"", " ", "GHZ", 
         " ", "\"\<],\\n FontSize->18]\\)\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2.5`"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<formerly NO, now YES\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"19", ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<formerly NO, now YES\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"19", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<formerly NO, now YES\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"19", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<formerly NO, now YES\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"19", ",", 
          RowBox[{"-", "7"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<formerly YES, now NO\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"19", ",", "7"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<formerly YES, now NO\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"19", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<formerly YES, now NO\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"19", ",", 
          RowBox[{"-", "3"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<formerly YES, now NO\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"19", ",", 
          RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[227]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .93023 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.134551 0.0442968 0.465116 0.0442968 [
[.22757 .86379 -14.8125 -9.84375 ]
[.22757 .86379 14.8125 9.84375 ]
[.40476 .86379 -14.8125 -9.84375 ]
[.40476 .86379 14.8125 9.84375 ]
[.58195 .86379 -14.8125 -10.0312 ]
[.58195 .86379 14.8125 10.0312 ]
[.02381 .46512 -19.5312 -7.59375 ]
[.02381 .46512 19.5312 7.59375 ]
[.97619 .6866 -62 -6 ]
[.97619 .6866 62 6 ]
[.97619 .59801 -62 -6 ]
[.97619 .59801 62 6 ]
[.97619 .42082 -62 -6 ]
[.97619 .42082 62 6 ]
[.97619 .15504 -62 -6 ]
[.97619 .15504 62 6 ]
[.97619 .77519 -62 -6 ]
[.97619 .77519 62 6 ]
[.97619 .50941 -62 -6 ]
[.97619 .50941 62 6 ]
[.97619 .33223 -62 -6 ]
[.97619 .33223 62 6 ]
[.97619 .24363 -62 -6 ]
[.97619 .24363 62 6 ]
[ 0 0 0 0 ]
[ 1 .93023 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
.8 g
.17885 .02215 m
.17885 .90808 L
.26744 .90808 L
.26744 .02215 L
F
.35604 .02215 m
.35604 .90808 L
.44463 .90808 L
.44463 .02215 L
F
.53322 .02215 m
.53322 .90808 L
.62182 .90808 L
.62182 .02215 L
F
0 g
.007 w
[ ] 0 setdash
.09025 .46512 m
.22315 .46512 L
s
.5 Mabswid
.22315 .28793 m
.22315 .6423 L
s
1 0 0 r
.01 w
.22315 .6423 m
.40033 .6423 L
s
0 1 0 r
.22315 .28793 m
.40033 .28793 L
s
0 g
.5 Mabswid
.40033 .55371 m
.40033 .7309 L
s
.40033 .37652 m
.40033 .19934 L
s
1 0 0 r
.01 w
.40033 .7309 m
.57752 .7309 L
s
0 1 0 r
.40033 .55371 m
.57752 .55371 L
s
.40033 .19934 m
.57752 .19934 L
s
1 0 0 r
.40033 .37652 m
.57752 .37652 L
s
0 g
.5 Mabswid
.57752 .6866 m
.57752 .77519 L
s
.57752 .50941 m
.57752 .59801 L
s
.57752 .24363 m
.57752 .15504 L
s
.57752 .42082 m
.57752 .33223 L
s
1 0 0 r
.01 w
.57752 .77519 m
.75471 .77519 L
s
0 1 0 r
.57752 .6866 m
.75471 .6866 L
s
1 0 0 r
.57752 .59801 m
.75471 .59801 L
s
0 1 0 r
.57752 .50941 m
.75471 .50941 L
s
1 0 0 r
.57752 .42082 m
.75471 .42082 L
s
0 1 0 r
.57752 .33223 m
.75471 .33223 L
s
1 0 0 r
.57752 .24363 m
.75471 .24363 L
s
0 1 0 r
.57752 .15504 m
.75471 .15504 L
s
0 g
gsave
.22757 .86379 -75.8125 -13.8438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.875 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 18.875 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 24.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(A) show
77.375 22.688 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 17.062 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
88.625 18.875 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.40476 .86379 -75.8125 -13.8438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.875 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 18.875 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 24.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(B) show
77.375 22.688 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 17.062 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(1) show
88.625 18.875 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.58195 .86379 -75.8125 -14.0312 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 28.0625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 19.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 19.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 24.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(C) show
77.375 23.062 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 17.062 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(1) show
88.625 19.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.02381 .46512 -80.5312 -11.5938 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.1875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 15.125 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 15.125 moveto
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 18.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Y) show
73.750 18.062 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 12.750 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(GHZ) show
98.062 15.125 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .6866 -123 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(formerly) show
117.000 13.000 moveto
(NO) show
129.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(,) show
141.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(now) show
165.000 13.000 moveto
(YES) show
183.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .59801 -123 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(formerly) show
117.000 13.000 moveto
(NO) show
129.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(,) show
141.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(now) show
165.000 13.000 moveto
(YES) show
183.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .42082 -123 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(formerly) show
117.000 13.000 moveto
(NO) show
129.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(,) show
141.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(now) show
165.000 13.000 moveto
(YES) show
183.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .15504 -123 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(formerly) show
117.000 13.000 moveto
(NO) show
129.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(,) show
141.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(now) show
165.000 13.000 moveto
(YES) show
183.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .77519 -123 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(formerly) show
117.000 13.000 moveto
(YES) show
135.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(,) show
147.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(now) show
171.000 13.000 moveto
(NO) show
183.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .50941 -123 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(formerly) show
117.000 13.000 moveto
(YES) show
135.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(,) show
147.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(now) show
171.000 13.000 moveto
(NO) show
183.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .33223 -123 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(formerly) show
117.000 13.000 moveto
(YES) show
135.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(,) show
147.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(now) show
171.000 13.000 moveto
(NO) show
183.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .24363 -123 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(formerly) show
117.000 13.000 moveto
(YES) show
135.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(,) show
147.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(now) show
171.000 13.000 moveto
(NO) show
183.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .93023 L
0 .93023 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{381.188, 354.625},
 ImageMargins->{{0.75, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"From In[227]:=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXc2O3MQWdrrdPT0DIT2BBdJcKQlswk9YZJENbICBCKG7yCK7K0URuhFI
QSBACsoL5Aki5RWyyzpIeYJZsUTMijV5ARamvvI55ePqqnb5L2O3q6PMlO2q
8/edOnV82q75791fvv3/93d/+e6bu5dv/nT3x2+/++bny1/+8JM6NT+XJOf+
VP9/u5ygnSUJ/9CfU/ygg9iO7Ybt2/j1TnZycvIuWu+alj73R+wUO8VOsVPs
FDudRadf0ZrrtGeerdfrjD7J/0JGP9Sd8oHPnz/XR2/TOSRSfO6zOsSePHmS
Xb9+vSA2w+HnISQ+FfJwNjfTPxdSuezly5fZ7du36VqKtj6Hj+q3yPQ4zZpb
yV5mUkMtSaIp2pSOj49Za0NpjgPdSkm+09NTto+ii3NLKbMeDSo8WIn/9OlT
0wW/1TFdm2ePHj0y5F7T51KbHMvHViC5Z4S8MACpq+WFTY2w6nqyomuSOkmU
j1sWMucqXblyxfSCcRS1eQiUnws3YpszXUj74MEDAwba6tzcMSSlnxZ2uY4r
c1pShB3QVtK7KC69XOaGjFLUmEpyhlsnwqMAKgzEHoPfOAa4M6IJCNjErzto
kkbU32scvgyWGA6fwUxDW/0+8JrbzY2hYFL8QVtpUAXxGq2vMuUWr3sZl89J
r7SFWRIITpALMui6cpB2Icq6w/l5zgAZdUwzthAFqNGEMDwJRSH63KCNo/UW
dWy5Cxr7pf5AGvbGtGLUEYvqYAmvYixJNvPBRDBQDxDLIrjWAPTevXvGYeH/
MJgNKKYpzQ0nGC6eF7boFAoo2nA4AAowCADVKyuFAsT51KIJIJckA2hAfopi
0LkTFIMiL4yHWZIL+IZZRlh4zAIIyN7GXszrL9qKhoukC1e2LdlKr1LS3mCV
W6XAh9fSbfhUYcw+RPGUaFzwWcj0ZbUxns9DP4R8HZzmOEzzlnbyzPgtZGZz
FT7gx/QQLdKBIFCAePKkeTHNlpwemJWb8oMiJ0rWRhtcZ62YIJ9nD2Sr41NK
PfKMibHPikTFom67ewG9J9UpZ7OpQA7nMTts9KtC9gXLaEo3k1wyPaFf4sqt
CiPrFgce6RgUfDYiNqsjIzY5vGFNc6xqrnv9wpV0XXOckxNB5tWhuc016gPZ
xb2DWUmLSbw9+4CteCKCFiZJF/rL+xmX/m/on6nt2mIKuRP2j0yvfF4btyUj
JqX0GRphdnAnaGuS0sbapTJfwe/3hdIcDO415VF10xkHTnKg7v4lsgsag38D
GXPRp0oTRSOxSGwqxGrWDhtycdUYL9E5uhnSRx/3wVTWIjVTXYv8pEtWY6xZ
1ikDHvjKgJqfKF32W7lsUWZddAn36OuazSqFB/qao1Ko2ydFjbO/Emfbgqz7
bnu7G1BVRV0dYZ1zf0t/W7yAOmKfJU8b2yYlWfd91UDx7az2yY7CU7BJbbEL
ZNF21T5tZJvUZvN+3SM75nqoHluj1ngocOij9ilr8E3rs01w9n5vPIl6aMeF
xx5LpJyQNancNons3i+h/fXA3uqZ1ywbyKF9ZS4l/YPqoW3rmh/qy/WLqk3S
c6Fdi3poAI8mN9xx4I4O1DnFTV918mzHeG9YmygaiUVi0yMWVA9tzaVJPbQz
ptX10NasYj2UqI6iHtoG7s4eOeIhsSh6pkXRvn0hFkqHVygdJeaxeOqhXVVU
a4N2X9+Ixfqq6fsq66u9uEKsw2ZTqcO+slAy8nptr3YaTV23RyvUrv/2IktX
hYjIIDKIDDphQM8SZ5yDoLULdGo+xB2JRWKjINZB+T2AS5MtDzpjWr01QmtW
Yyy/T3sLhdaQtyzA8JC41cKZb7UQ6gqjfix5wtsvDB7fuCWDoFlV+e8L2TGX
zXd9m4ZQnKf9WDItwhPapqGWX4SWuUe0TUMj/YPK10PYpqGBdh2XpbfsDTiO
gYekPvtPfruUQ4Rj9k18zDURCMuBRgP4QVNZ1oQQZGHfVgsYRyO67dRH/jxj
uTFlQEpFK9eS9l47UedyvStFWfnJI3qW2Tfq+PC6DZ4unVoLKGKkiLzidpsk
9K8wCxmX9AX4QWOQNaMDV6KLI50DLIuVP68gwBFx9GFTppqsdlhOooQ+zrsn
X/w15QTVH9GJl8zG9tgUDf5EK6rJw3ipKEQLv8+QOSLl2i3hozkKWEBQTTDO
WzDXcAqXOGMSMxpqmdNFdaiJVmwZCA4gsozuhm5kOj/brgaP5hthJclGWS2X
D1eRfUsrUl5nAiUvU2UnKQfK8ozjAtxebYnBixZ9QV7W29gaXzTFWEbKUuwo
seLQ1RmrEuozX1A6jqzc4ePrMyRRBPWbTUmMIWfq9KuQnt46CNj9+VIOeK03
DHZgR+j4NkEQtKP/2iK+NJDVLnzGFwSSXXpBYAD4xpcBPLT9Nu8e2TF/ZTHt
J/3jbtO5OvGp/k58JfSrjZ15gr/rXanbfm3R/9P6/e1UPaznESOxSGxYxOgJ
8oDdscdFZ/zvGkQGkUFk0O9O5L1w7v51gA53LG/yisCEdjGPrw00dYPOnkLl
IfHdgYG/OzDQbbDj+wQ9vk8wUMzjOwaCZnfvGDTcDnn89ftpv3IQd0fP1Ymv
IXTiK6H1+515NaHrXdSH/7pCfzurt+Y73L2BI7FILIAY7dye8QqL1lDGjGij
/TjwzAd2+schvY8gV5VaGzGoLqG2/uNCsTRqFBlgabT13wiKFVAHTdJouBXQ
mn8abpyPIk+42jl4fGNlU9CsU9nsEtlYyixoDK2UGYpzfBSZu063lNnaV3aw
lNmZTUZTyuxI497+SGTQM1ORWCQWiYnuQbtgv/oxNR/WjgMnOLBmXbThjtSX
6BzdXOmjj9syqN6aoRbZMdZFp7s1Qy1oR18TjVszZG7IR/2k54S3YRgUlnHL
BQ9tv83boTjmmuaub6/gwnTaj11Ob9sErw+E1iBHtB1Cpa5BtcW2NcIutjmo
0KRFzXDLPoCxU+w0iE5v083fP+fPo5+ehmmWTz2c4xtCSYfHnFfXeQakFIDO
izEVDFLJwAh0hNYMHRa2/HQpoUtW9+V4SMzJJkdHR+WcgM6xAWeB/VKHSKkD
pD0BEqLp48eP1d3upugrGvvs2bPs1q1b4GX4Xr16Nbt//3724sULMfZMVZRj
D2jsw4cPzdg9h4p7NBbq2ea5c+cO1LPGbqiYkmDoyuuSsti+kXTlkHlZPqe4
YbgCApKYpAXHLP3SIf2SWN+4ccOwVlLnEi00PsIoGr+VXxGWhBdYNTxhF4Ad
LRIefXgEmGOEkk0wLWRfkOxseQiqzMaAIG+BfwbKzAU4NcRIwKor2Stk3sCq
JCkDjGkgAH7TL9XSmnTCg3Jgya0ksC1EK9wXzvNWtVzS21ckElC3ZkoFwg6f
cAqHUIF+CDNcZMQSgLD/9/Fxsl1WYXUjK86VIgIllRTQEq/oS5oZmFiY3gwn
NmJf+ESzNNKELhKh35UkfylPV515adtUhX1aOmRqGVEZKTe7Gg71MH0ACbmQ
rc1rjviWbpHJpcN/fHKyTJi6dnCF7IdlWTjWQmSWZR3ObyNyzstWdkKYmvhC
8B2WGVpud2SzZh/mWKecwaxBfA6TySUBmwlOxDFnkz27V16ALhvxxPXF00r4
JjszzIkVluOGdPy1Q7QizG0KJKycRxWhAs5dsAXap/DEUQydhbu+GWCapCQJ
zzABnQkmYgnzSyJsKh3SJclCzCUWmkG1/DdZlO4pOSOaCbtheTHZz4Z4Swve
fL6qH29tgCC77BOocFTOMwpQ9xzG2g9mz3m4nJMXt0qzpBFAG2BgoheGXQlj
gCbClczPYDSMmOFoQ8IB3OCcYSf8zE5jO7bD28m5fwHbJoqg\
\>"],
 ImageRangeCache->{{{0, 475.438}, {442.25, 0}} -> {-3.90537, -12.7281, \
0.0719506, 0.0719506}}]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[TextData[{
 "But ",
 StyleBox["none",
  FontVariations->{"Underline"->True}],
 " of the 8 possible instruction sets\[LongDash]as identified in the previous \
set of experiments\[LongDash]permit ",
 StyleBox["any",
  FontVariations->{"Underline"->True}],
 " of these outcomes",
 StyleBox["!",
  FontSize->36]
}], "Text"],

Cell[TextData[{
 "Here\[LongDash]without fussing with the experimental test of Bell \
inequalities\[LongDash]the data produced by a  ",
 StyleBox["single",
  FontSlant->"Italic"],
 " ",
 StyleBox["measurement sequence",
  FontSlant->"Italic"],
 " would serve to render untenable a proposition that EPR hold to be one of \
the most basic \"necessary properties of real things.\" "
}], "Text"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["So what has Merman accomplished?", "Subsection"],

Cell[TextData[{
 "For a long time physicists supposed von Neumann to have \"proven\" that \
quantum mechanics does not admit of an underlying hidden variable \
interpretation. John Bell, however, pointed out that one of von Neumann's \
assumptions was insecure, and that the hidden variable question was therefore \
",
 StyleBox["not",
  FontSlant->"Italic"],
 " settled. His own argument led to an inequality that was susceptible to \
experimental test: violation of the inequality would rule out a very broad \
class of hidden variable theories\[LongDash]more to the point, it would \
render untenable the \"local realism\"  hypothesis\[LongDash]while if the \
inequality were found not to be violated then orthodox quantum mechanics \
would stand in need of fundamental adjustment. Mermin (following in the \
footsteps of Greenberger, Horn & Zeilinger) provided an alternative \
experimental avenue to the same fundamental objective. His work marks an \
early milestone in a tradition that has produced a variety of alternative \
proofs of \"",
 StyleBox["Bell's theorem without inequalities.", "Subsubsection"],
 "\" "
}], "Text"],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mermin takes us \"behind the scenes\":", "Subsection"],

Cell["We observed early on that ", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["B", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["B", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "2"], ",", 
    SubscriptBox["B", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "2"], ",", 
    SubscriptBox["B", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["C", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["C", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "2"], ",", 
    SubscriptBox["C", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["A", "2"], ",", 
    SubscriptBox["C", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["B", "1"], ",", 
    SubscriptBox["C", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["B", "1"], ",", 
    SubscriptBox["C", "2"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["B", "2"], ",", 
    SubscriptBox["C", "1"]}], "]"}], "==", "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    SubscriptBox["B", "2"], ",", 
    SubscriptBox["C", "2"]}], "]"}], "==", "Null8"}]}], "Input",
 CellLabel->"In[25]:="],

Cell[TextData[{
 StyleBox["i.e",
  FontSlant->"Italic"],
 "., that both ",
 StyleBox["A", "Input"],
 " matrices commute with both ",
 StyleBox["B", "Input"],
 " matrices, which commute with both ",
 StyleBox["C", "Input"],
 " matrices, which commute with both ",
 StyleBox["A", "Input"],
 " matrices. "
}], "Text"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell["Short digression:", "Subsubsection"],

Cell[TextData[{
 " It should therefore be possible to simultaneously diagonalize all of them. \
All have identical spectra, of which the spectrum of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "1"], TraditionalForm]]],
 " is (as we also saw early on) typical: "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  SubscriptBox["A", "1"], "]"}]], "Input",
 CellLabel->"In[52]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[52]="]
}, Open  ]],

Cell["One can create a total of ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"8", "*", "7", "*", "6", "*", "5"}], 
  RowBox[{"4", "!"}]]], "Input",
 CellLabel->"In[53]:="],

Cell[BoxData["70"], "Output",
 CellLabel->"Out[53]="]
}, Open  ]],

Cell[TextData[{
 "diagonal 8\[Times]8 matrices that have four ",
 StyleBox["+1", "Input"],
 "s distributed on the diagonal (and the remaining slots filled with ",
 StyleBox["-1", "Input"],
 "s). Our population of diagonalized ",
 StyleBox["A", "Input"],
 "/",
 StyleBox["B", "Input"],
 "/",
 StyleBox["C", "Input"],
 " matrices would be drawn from that population, leaving 64 players on the \
bench. It would be fun/instructive to work out the details, but I won't. ",
 StyleBox["End of digression.", "Subsubsection",
  FontSize->12]
}], "Text"],

Cell[BoxData["\[IndentingNewLine]"], "Input"],

Cell["\<\
From the matrices describing operations that were previously performed \
sequentially on the respective members of the particle trio let us now \
construct the products\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["A", "1"], ".", 
    SubscriptBox["B", "2"], ".", 
    SubscriptBox["C", "2"]}], ")"}], ",", 
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["A", "2"], ".", 
    SubscriptBox["B", "1"], ".", 
    SubscriptBox["C", "2"]}], ")"}], ",", 
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["A", "2"], ".", 
    SubscriptBox["B", "2"], ".", 
    SubscriptBox["C", "1"]}], ")"}]}]], "Input"],

Cell["\<\
These describe measurement operations that would be performed wholistically \
on the composite trio. We are not surprised to have\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["A", "1"], ".", 
      SubscriptBox["B", "2"], ".", 
      SubscriptBox["C", "2"]}], ")"}], ",", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["A", "2"], ".", 
      SubscriptBox["B", "1"], ".", 
      SubscriptBox["C", "2"]}], ")"}]}], "]"}], "\[Equal]", 
  "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["A", "2"], ".", 
      SubscriptBox["B", "1"], ".", 
      SubscriptBox["C", "2"]}], ")"}], ",", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["A", "2"], ".", 
      SubscriptBox["B", "2"], ".", 
      SubscriptBox["C", "1"]}], ")"}]}], "]"}], "\[Equal]", 
  "Null8"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Com", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["A", "2"], ".", 
      SubscriptBox["B", "2"], ".", 
      SubscriptBox["C", "1"]}], ")"}], ",", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["A", "1"], ".", 
      SubscriptBox["B", "2"], ".", 
      SubscriptBox["C", "2"]}], ")"}]}], "]"}], "\[Equal]", 
  "Null8"}]}], "Input",
 CellLabel->"In[55]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[55]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[56]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[57]="]
}, Open  ]],

Cell["and", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["A", "1"], ".", 
   SubscriptBox["B", "2"], ".", 
   SubscriptBox["C", "2"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["A", "2"], ".", 
   SubscriptBox["B", "1"], ".", 
   SubscriptBox["C", "2"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["A", "2"], ".", 
   SubscriptBox["B", "2"], ".", 
   SubscriptBox["C", "1"]}], "]"}]}], "Input",
 CellLabel->"In[58]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[58]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[59]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellLabel->"Out[60]="]
}, Open  ]],

Cell["Looking to", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvectors", "[", 
  RowBox[{
   SubscriptBox["A", "1"], ".", 
   SubscriptBox["B", "2"], ".", 
   SubscriptBox["C", "2"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvectors", "[", 
  RowBox[{
   SubscriptBox["A", "2"], ".", 
   SubscriptBox["B", "1"], ".", 
   SubscriptBox["C", "2"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvectors", "[", 
  RowBox[{
   SubscriptBox["A", "2"], ".", 
   SubscriptBox["B", "2"], ".", 
   SubscriptBox["C", "1"]}], "]"}]}], "Input",
 CellLabel->"In[61]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[61]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[62]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[63]="]
}, Open  ]],

Cell["we discover that ", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalPhi]", "=", 
   RowBox[{"(", GridBox[{
      {
       FractionBox["1", 
        SqrtBox["2"]]},
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {
       FractionBox["1", 
        SqrtBox["2"]]}
     }], ")"}]}], ";"}]], "Input",
 CellLabel->"In[64]:="],

Cell["\<\
is the only simultaneous eigenvector with a negative unit eigenvalue, \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "1"], ".", 
     SubscriptBox["B", "2"], ".", 
     SubscriptBox["C", "2"]}], ")"}], ".", "\[CapitalPhi]"}], "\[Equal]", 
  RowBox[{"-", "\[CapitalPhi]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "2"], ".", 
     SubscriptBox["B", "1"], ".", 
     SubscriptBox["C", "2"]}], ")"}], ".", "\[CapitalPhi]"}], "\[Equal]", 
  RowBox[{"-", "\[CapitalPhi]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "2"], ".", 
     SubscriptBox["B", "2"], ".", 
     SubscriptBox["C", "1"]}], ")"}], ".", "\[CapitalPhi]"}], "\[Equal]", 
  RowBox[{"-", "\[CapitalPhi]"}]}]}], "Input",
 CellLabel->"In[65]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[65]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[66]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[67]="]
}, Open  ]],

Cell["while Mermin's ", "Text"],

Cell[BoxData[
 TagBox[
  RowBox[{"\[CapitalPsi]", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox["1", 
        SqrtBox["2"]]},
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox["2"]]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Input"],

Cell["\<\
is the only simultaneous eigenvector with positive unit eigenvalue:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "1"], ".", 
     SubscriptBox["B", "2"], ".", 
     SubscriptBox["C", "2"]}], ")"}], ".", "\[CapitalPsi]"}], "\[Equal]", 
  RowBox[{"+", "\[CapitalPsi]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "2"], ".", 
     SubscriptBox["B", "1"], ".", 
     SubscriptBox["C", "2"]}], ")"}], ".", "\[CapitalPsi]"}], "\[Equal]", 
  RowBox[{"+", "\[CapitalPsi]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "2"], ".", 
     SubscriptBox["B", "2"], ".", 
     SubscriptBox["C", "1"]}], ")"}], ".", "\[CapitalPsi]"}], "\[Equal]", 
  RowBox[{"+", "\[CapitalPsi]"}]}]}], "Input",
 CellLabel->"In[68]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[68]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[69]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[70]="]
}, Open  ]],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Short digression:", "Subsubsection"],

Cell["Having introduced", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"up", "=", 
   RowBox[{"(", GridBox[{
      {"1"},
      {"0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dn", "=", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"1"}
     }], ")"}]}], ";"}]}], "Input",
 CellLabel->"In[82]:="],

Cell["we earlier had", "Text"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\[CapitalPsi]", "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"up", "\[CircleTimes]", "up"}], ")"}], "\[CircleTimes]", 
      "up"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"dn", "\[CircleTimes]", "dn"}], ")"}], "\[CircleTimes]", 
      "dn"}]}], 
    SqrtBox["2"]]}],
  FontColor->GrayLevel[0.500008]]], "Input",
 CellLabel->"In[86]:="],

Cell["\<\
We should perhaps not be surprised, therefore, to discover that\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalPhi]", "\[Equal]", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"up", "\[CircleTimes]", "up"}], ")"}], "\[CircleTimes]", "up"}],
     "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"dn", "\[CircleTimes]", "dn"}], ")"}], "\[CircleTimes]", 
     "dn"}]}], 
   SqrtBox["2"]]}]], "Input",
 CellLabel->"In[88]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[88]="]
}, Open  ]],

Cell[TextData[{
 "The seeming implication is that we are talking here about a couple of \"",
 StyleBox["3-member Bell states",
  FontColor->RGBColor[1, 0, 0]],
 ".\" It would be nice to possess a more complete & systematic knowledge of \
such things."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of digression.", "Subsubsection"],

Cell[BoxData[""], "Input"],

Cell[TextData[{
 "This fact clarifies the origin of the \"odd number of Rs\" rule. For\
\[LongDash]whatever the initial state of the system\[LongDash]\n\t\[Bullet] \
",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "1"], TraditionalForm]]],
 " measurement produce ",
 StyleBox["\[PlusMinus]1", "Input"],
 " (which we called ",
 StyleBox["R", "Input"],
 "/",
 StyleBox["G", "Input"],
 ")\n\t\[Bullet] subsequent  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "2"], TraditionalForm]]],
 " measurement again produce ",
 StyleBox["\[PlusMinus]1", "Input"],
 "\n\t\[Bullet] subsequent  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "2"], TraditionalForm]]],
 " measurement again produce ",
 StyleBox["\[PlusMinus]1", "Input"],
 ".\nIf the initial state is Mermin's ",
 StyleBox["\[CapitalPsi]", "Input"],
 " then, however one picks the sign-options, it must (as just demonstrated) \
be the case that ",
 StyleBox["\n\t(\[PlusMinus]1)*(\[PlusMinus]1)*(\[PlusMinus]1) = +1", 
  "Input"]
}], "Text"],

Cell[TextData[{
 "Immediately, if one picks a ",
 StyleBox["-1", "Input"],
 " one must pick also another, so the number of ",
 StyleBox["+1", "Input"],
 "s (",
 StyleBox["R", "Input"],
 "s as Mermin calls them) can be only one or three, but is in both cases \
odd."
}], "Text"],

Cell[BoxData[""], "Input"],

Cell["Look finally to wholistic measurement the matrix", "Text"],

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   SubscriptBox["A", "1"], ".", 
   SubscriptBox["B", "1"], ".", 
   SubscriptBox["C", "1"]}], ")"}]], "Input"],

Cell["We find (note the sign flip) that", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "1"], ".", 
     SubscriptBox["B", "1"], ".", 
     SubscriptBox["C", "1"]}], ")"}], ".", "\[CapitalPsi]"}], "\[Equal]", 
  RowBox[{"-", "\[CapitalPsi]"}]}]], "Input",
 CellLabel->"In[71]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[71]="]
}, Open  ]],

Cell["This Mermin traces to the observation that", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "1"], ".", 
     SubscriptBox["B", "2"], ".", 
     SubscriptBox["C", "2"]}], ")"}], ".", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "2"], ".", 
     SubscriptBox["B", "1"], ".", 
     SubscriptBox["C", "2"]}], ")"}], ".", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "2"], ".", 
     SubscriptBox["B", "2"], ".", 
     SubscriptBox["C", "1"]}], ")"}]}], "\[Equal]", 
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "1"], ".", 
     SubscriptBox["B", "1"], ".", 
     SubscriptBox["C", "1"]}], ")"}]}]}]], "Input",
 CellLabel->"In[72]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[72]="]
}, Open  ]],

Cell["and which I trace back to the statements", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["A", "1"], ".", 
      SubscriptBox["B", "2"], ".", 
      SubscriptBox["C", "2"]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["A", "2"], ".", 
      SubscriptBox["B", "1"], ".", 
      SubscriptBox["C", "2"]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["A", "2"], ".", 
      SubscriptBox["B", "2"], ".", 
      SubscriptBox["C", "1"]}], ")"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Sigma]", "1"], "\[CircleTimes]", 
        SubscriptBox["\[Sigma]", "2"]}], ")"}], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "2"]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Sigma]", "2"], "\[CircleTimes]", 
        SubscriptBox["\[Sigma]", "1"]}], ")"}], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "2"]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Sigma]", "2"], "\[CircleTimes]", 
        SubscriptBox["\[Sigma]", "2"]}], ")"}], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "1"]}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Sigma]", "1"], "\[CircleTimes]", 
        SubscriptBox["\[Sigma]", "2"]}], ")"}], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "2"]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Sigma]", "2"], "\[CircleTimes]", 
        SubscriptBox["\[Sigma]", "1"]}], ")"}], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "2"]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Sigma]", "2"], "\[CircleTimes]", 
        SubscriptBox["\[Sigma]", "2"]}], ")"}], "\[CircleTimes]", 
      SubscriptBox["\[Sigma]", "1"]}], ")"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Sigma]", "1"], ".", 
        SubscriptBox["\[Sigma]", "2"], ".", 
        SubscriptBox["\[Sigma]", "2"]}], ")"}], "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Sigma]", "2"], ".", 
        SubscriptBox["\[Sigma]", "1"], ".", 
        SubscriptBox["\[Sigma]", "2"]}], ")"}]}], ")"}], "\[CircleTimes]", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Sigma]", "2"], ".", 
      SubscriptBox["\[Sigma]", "2"], ".", 
      SubscriptBox["\[Sigma]", "1"]}], ")"}]}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "1"], ".", 
   SubscriptBox["\[Sigma]", "2"], ".", 
   SubscriptBox["\[Sigma]", "2"]}], "\[Equal]", 
  SubscriptBox["\[Sigma]", "1"]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "2"], ".", 
   SubscriptBox["\[Sigma]", "1"], ".", 
   SubscriptBox["\[Sigma]", "2"]}], "\[Equal]", 
  RowBox[{"-", 
   SubscriptBox["\[Sigma]", "1"]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "2"], ".", 
   SubscriptBox["\[Sigma]", "2"], ".", 
   SubscriptBox["\[Sigma]", "1"]}], "\[Equal]", 
  SubscriptBox["\[Sigma]", "1"]}]}], "Input",
 CellLabel->"In[73]:="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[73]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[74]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[75]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[76]="],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[77]="]
}, Open  ]],

Cell["\<\
Which is interesting, but somewhat beside the point\[LongDash]the point being \
that to achieve\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "1"], ".", 
     SubscriptBox["B", "1"], ".", 
     SubscriptBox["C", "1"]}], ")"}], ".", "\[CapitalPsi]"}], "\[Equal]", 
  RowBox[{"-", "\[CapitalPsi]"}]}]], "Input",
 CellLabel->"In[71]:="],

Cell[TextData[{
 "the number of ",
 StyleBox["-1", "Input"],
 "s (",
 StyleBox["G", "Input"],
 "s) would have to be odd, ",
 StyleBox["forcing the number of ",
  FontVariations->{"Underline"->True}],
 StyleBox["+1", "Input",
  FontVariations->{"Underline"->True}],
 StyleBox["s (",
  FontVariations->{"Underline"->True}],
 StyleBox["R", "Input",
  FontVariations->{"Underline"->True}],
 StyleBox["s) to be ",
  FontVariations->{"Underline"->True}],
 StyleBox["even",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}],
 StyleBox[". ",
  FontSlant->"Italic"],
 "But such a condition is flatly disallowed by the exhaustive list of \
\"instruction sets\" that we, as EPR local realists, were forced by our \
initial set of observations to ascribe to particle triples. "
}], "Text"],

Cell[BoxData[""], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Addenda", "Subsection"],

Cell[TextData[{
 "I have (on the web) stumbled accidentally upon the information that, in a \
",
 StyleBox["LETTER TO THE EDITOR",
  FontSize->10],
 ", J. Savinien, J. Taron & R. Tarrach (\"Triviality of GHZ operators of \
higher spin,\" J. Phys. A: Math. Gen. ",
 StyleBox["33",
  FontWeight->"Bold"],
 ", No 48 (8 December 2000) L493 \[Dash] L495) establish that when one passes \
from spin 1/2 to higher spins 1, 3/2,\[Ellipsis] \"no new contradictions with \
local realism arise.\" One simply gets direct sum amplifications of the spin \
1/2 theory, which is revealed therefore to be essentially unique."
}], "Text"],

Cell[TextData[{
 "For a good short account of the meaning of \"local realism\" see \[Section]\
\[Section]15\[Dash]19 in Chapter 22 of David Bohm's ",
 StyleBox["Quantum Theory",
  FontSlant->"Italic"],
 ", which are reproduced as \"The paradox of Einstein, Rosen and Podolsky\" \
at page 356 in J. A. Wheeler & W. H. Zurek (editors), ",
 StyleBox["Quantum Theory and Measurement",
  FontSlant->"Italic"],
 " (1983)."
}], "Text"],

Cell[TextData[{
 "G. Greenstein & A.G. Zajonc,",
 StyleBox[" ",
  FontSlant->"Italic"],
 "on pages 177\[Dash]183 in ",
 StyleBox["The Quantum Challenge: Modern Research on the Foundations of \
Quantum Mechanics ",
  FontSlant->"Italic"],
 "(2006), describe ",
 StyleBox["experimental realizations",
  FontWeight->"Bold"],
 " of GHZ entanglement. The work was done by Zeilinger ",
 StyleBox["et al",
  FontSlant->"Italic"],
 " in 1999 and 2000."
}], "Text"],

Cell[TextData[{
 "This subject was taken up again in Chapter 6, \[Section]E of Mirman's ",
 StyleBox["Lecture Notes on Quantum Computation",
  FontSlant->"Italic"],
 " (2006). And in several of the essays reprinted in the Quantum Theory \
section of ",
 StyleBox["Boojums All the Way Through",
  FontSlant->"Italic"],
 " (1990). "
}], "Text"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1004, 803},
WindowMargins->{{1, Automatic}, {Automatic, 16}},
Magnification->1.25,
FrontEndVersion->"7.0 for Mac OS X PowerPC (32-bit) (November 11, 2008)",
StyleDefinitions->"TutorialBook.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 72, 2, 33, "Input"],
Cell[642, 26, 51, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[730, 32, 54, 0, 67, "Title"],
Cell[787, 34, 281, 5, 48, "Text"],
Cell[1071, 41, 111, 1, 59, "Input"],
Cell[1185, 44, 41, 0, 27, "Text"],
Cell[1229, 46, 1097, 31, 134, "Input"],
Cell[2329, 79, 778, 31, 219, "Input"],
Cell[3110, 112, 200, 7, 33, "Input"],
Cell[3313, 121, 515, 13, 208, "Input"],
Cell[3831, 136, 45, 0, 59, "Input"],
Cell[CellGroupData[{
Cell[3901, 140, 35, 0, 43, "Subsection"],
Cell[3939, 142, 2627, 42, 502, "Text"],
Cell[CellGroupData[{
Cell[6591, 188, 95, 1, 40, "Subsubsection"],
Cell[6689, 191, 409, 11, 69, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7147, 208, 48, 0, 43, "Subsection"],
Cell[7198, 210, 855, 19, 131, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8090, 234, 46, 0, 43, "Subsection"],
Cell[8139, 236, 343, 12, 48, "Text"],
Cell[8485, 250, 1758, 55, 159, "Input"],
Cell[10246, 307, 169, 3, 48, "Text"],
Cell[CellGroupData[{
Cell[10440, 314, 1909, 61, 309, "Input"],
Cell[12352, 377, 55, 1, 30, "Output"],
Cell[12410, 380, 55, 1, 30, "Output"],
Cell[12468, 383, 55, 1, 30, "Output"],
Cell[12526, 386, 55, 1, 30, "Output"],
Cell[12584, 389, 55, 1, 30, "Output"],
Cell[12642, 392, 55, 1, 30, "Output"],
Cell[12700, 395, 55, 1, 30, "Output"],
Cell[12758, 398, 55, 1, 30, "Output"],
Cell[12816, 401, 55, 1, 30, "Output"],
Cell[12874, 404, 55, 1, 30, "Output"],
Cell[12932, 407, 55, 1, 30, "Output"]
}, Open  ]],
Cell[13002, 411, 112, 3, 27, "Text"],
Cell[CellGroupData[{
Cell[13139, 418, 497, 16, 84, "Input"],
Cell[13639, 436, 57, 1, 30, "Output"],
Cell[13699, 439, 57, 1, 30, "Output"],
Cell[13759, 442, 57, 1, 30, "Output"]
}, Open  ]],
Cell[13831, 446, 749, 20, 73, "Text"],
Cell[CellGroupData[{
Cell[14605, 470, 547, 13, 159, "Input"],
Cell[15155, 485, 236, 8, 30, "Output"],
Cell[15394, 495, 236, 8, 30, "Output"],
Cell[15633, 505, 236, 8, 30, "Output"],
Cell[15872, 515, 236, 8, 30, "Output"],
Cell[16111, 525, 236, 8, 30, "Output"],
Cell[16350, 535, 236, 8, 30, "Output"]
}, Open  ]],
Cell[16601, 546, 45, 0, 59, "Input"],
Cell[CellGroupData[{
Cell[16671, 550, 268, 10, 40, "Subsubsection"],
Cell[CellGroupData[{
Cell[16964, 564, 306, 8, 84, "Input"],
Cell[17273, 574, 619, 18, 69, "Output"],
Cell[17895, 594, 116, 4, 30, "Output"],
Cell[18014, 600, 216, 8, 30, "Output"]
}, Open  ]],
Cell[18245, 611, 534, 24, 187, "Input"],
Cell[18782, 637, 62, 0, 27, "Text"],
Cell[18847, 639, 479, 17, 59, "Input"],
Cell[CellGroupData[{
Cell[19351, 660, 227, 7, 59, "Input"],
Cell[19581, 669, 719, 22, 89, "Output"],
Cell[20303, 693, 765, 24, 89, "Output"]
}, Open  ]],
Cell[21083, 720, 202, 7, 27, "Text"],
Cell[CellGroupData[{
Cell[21310, 731, 409, 16, 33, "Input"],
Cell[21722, 749, 55, 1, 30, "Output"]
}, Open  ]],
Cell[21792, 753, 127, 6, 27, "Text"],
Cell[CellGroupData[{
Cell[21944, 763, 306, 8, 84, "Input"],
Cell[22253, 773, 665, 19, 69, "Output"],
Cell[22921, 794, 116, 4, 30, "Output"],
Cell[23040, 800, 240, 8, 30, "Output"]
}, Open  ]],
Cell[23295, 811, 558, 24, 189, "Input"],
Cell[23856, 837, 66, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[23947, 841, 532, 16, 84, "Input"],
Cell[24482, 859, 97, 3, 30, "Output"],
Cell[24582, 864, 97, 3, 30, "Output"],
Cell[24682, 869, 97, 3, 30, "Output"]
}, Open  ]],
Cell[24794, 875, 563, 20, 59, "Input"],
Cell[CellGroupData[{
Cell[25382, 899, 228, 7, 59, "Input"],
Cell[25613, 908, 767, 23, 89, "Output"],
Cell[26383, 933, 767, 23, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27187, 961, 701, 26, 109, "Input"],
Cell[27891, 989, 620, 18, 69, "Output"],
Cell[28514, 1009, 620, 18, 69, "Output"],
Cell[29137, 1029, 620, 18, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29794, 1052, 410, 16, 33, "Input"],
Cell[30207, 1070, 56, 1, 30, "Output"]
}, Open  ]],
Cell[30278, 1074, 310, 9, 51, "Text"],
Cell[30591, 1085, 45, 0, 59, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30685, 1091, 114, 3, 43, "Subsection"],
Cell[30802, 1096, 20, 0, 27, "Text"],
Cell[30825, 1098, 1759, 55, 159, "Input"],
Cell[32587, 1155, 54, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[32666, 1159, 4072, 139, 159, "Input"],
Cell[36741, 1300, 56, 1, 30, "Output"],
Cell[36800, 1303, 56, 1, 30, "Output"],
Cell[36859, 1306, 56, 1, 30, "Output"],
Cell[36918, 1309, 56, 1, 30, "Output"],
Cell[36977, 1312, 56, 1, 30, "Output"],
Cell[37036, 1315, 56, 1, 30, "Output"]
}, Open  ]],
Cell[37107, 1319, 111, 3, 27, "Text"],
Cell[37221, 1324, 3953, 133, 334, "Input"],
Cell[CellGroupData[{
Cell[41199, 1461, 2312, 91, 159, "Input"],
Cell[43514, 1554, 56, 1, 30, "Output"],
Cell[43573, 1557, 56, 1, 30, "Output"],
Cell[43632, 1560, 56, 1, 30, "Output"],
Cell[43691, 1563, 56, 1, 30, "Output"],
Cell[43750, 1566, 56, 1, 30, "Output"],
Cell[43809, 1569, 56, 1, 30, "Output"]
}, Open  ]],
Cell[43880, 1573, 45, 0, 59, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43962, 1578, 59, 0, 43, "Subsection"],
Cell[44024, 1580, 24, 0, 27, "Text"],
Cell[44051, 1582, 290, 13, 111, "Input"],
Cell[44344, 1597, 140, 5, 27, "Text"],
Cell[CellGroupData[{
Cell[44509, 1606, 374, 13, 59, "Input"],
Cell[44886, 1621, 56, 1, 30, "Output"],
Cell[44945, 1624, 56, 1, 30, "Output"]
}, Open  ]],
Cell[45016, 1628, 116, 3, 27, "Text"],
Cell[45135, 1633, 399, 14, 71, "Input"],
Cell[CellGroupData[{
Cell[45559, 1651, 96, 2, 33, "Input"],
Cell[45658, 1655, 790, 29, 233, "Output"]
}, Open  ]],
Cell[46463, 1687, 329, 9, 52, "Text"],
Cell[CellGroupData[{
Cell[46817, 1700, 95, 1, 40, "Subsubsection"],
Cell[46915, 1703, 400, 8, 69, "Text"],
Cell[47318, 1713, 62, 1, 33, "Input"],
Cell[47383, 1716, 449, 9, 73, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47881, 1731, 45, 0, 43, "Subsection"],
Cell[47929, 1733, 278, 8, 52, "Text"],
Cell[48210, 1743, 427, 11, 209, "Input"],
Cell[48640, 1756, 477, 19, 30, "Text"],
Cell[49120, 1777, 130, 3, 27, "Text"],
Cell[49253, 1782, 278, 4, 209, "Input"],
Cell[49534, 1788, 521, 13, 51, "Text"],
Cell[50058, 1803, 45, 0, 59, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50140, 1808, 32, 0, 43, "Subsection"],
Cell[50175, 1810, 504, 15, 132, "Text"],
Cell[50682, 1827, 335, 12, 30, "Text"],
Cell[51020, 1841, 247, 3, 209, "Input"],
Cell[51270, 1846, 53, 0, 27, "Text"],
Cell[51326, 1848, 45, 0, 59, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51408, 1853, 70, 0, 43, "Subsection"],
Cell[51481, 1855, 200, 4, 48, "Text"],
Cell[51684, 1861, 1081, 32, 99, "Input"],
Cell[52768, 1895, 286, 5, 48, "Text"],
Cell[CellGroupData[{
Cell[53079, 1904, 109, 5, 47, "Subsubsection"],
Cell[53191, 1911, 57, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[53273, 1915, 161, 5, 33, "Input"],
Cell[53437, 1922, 73, 2, 52, "Output"]
}, Open  ]],
Cell[53525, 1927, 40, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[53590, 1931, 204, 6, 33, "Input"],
Cell[53797, 1939, 484, 17, 52, "Output"]
}, Open  ]],
Cell[54296, 1959, 43, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[54364, 1963, 352, 10, 33, "Input"],
Cell[54719, 1975, 53, 1, 30, "Output"]
}, Open  ]],
Cell[54787, 1979, 75, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[54887, 1983, 161, 5, 33, "Input"],
Cell[55051, 1990, 73, 2, 52, "Output"]
}, Open  ]],
Cell[55139, 1995, 35, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[55199, 1999, 204, 6, 33, "Input"],
Cell[55406, 2007, 484, 17, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55927, 2029, 352, 10, 33, "Input"],
Cell[56282, 2041, 53, 1, 30, "Output"]
}, Open  ]],
Cell[56350, 2045, 71, 0, 27, "Text"],
Cell[56424, 2047, 214, 7, 117, "Input"],
Cell[56641, 2056, 48, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[56714, 2060, 82, 2, 33, "Input"],
Cell[56799, 2064, 53, 1, 30, "Output"]
}, Open  ]],
Cell[56867, 2068, 45, 0, 59, "Input"],
Cell[56915, 2070, 136, 3, 27, "Text"],
Cell[CellGroupData[{
Cell[57076, 2077, 162, 5, 33, "Input"],
Cell[57241, 2084, 73, 2, 52, "Output"]
}, Open  ]],
Cell[57329, 2089, 35, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[57389, 2093, 206, 6, 33, "Input"],
Cell[57598, 2101, 964, 37, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58599, 2143, 354, 10, 33, "Input"],
Cell[58956, 2155, 53, 1, 30, "Output"]
}, Open  ]],
Cell[59024, 2159, 61, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[59110, 2163, 162, 5, 33, "Input"],
Cell[59275, 2170, 73, 2, 52, "Output"]
}, Open  ]],
Cell[59363, 2175, 35, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[59423, 2179, 206, 6, 33, "Input"],
Cell[59632, 2187, 1056, 41, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60725, 2233, 354, 10, 33, "Input"],
Cell[61082, 2245, 53, 1, 30, "Output"]
}, Open  ]],
Cell[61150, 2249, 45, 0, 59, "Input"],
Cell[61198, 2251, 113, 3, 27, "Text"],
Cell[CellGroupData[{
Cell[61336, 2258, 162, 5, 33, "Input"],
Cell[61501, 2265, 73, 2, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61611, 2272, 206, 6, 33, "Input"],
Cell[61820, 2280, 1010, 39, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62867, 2324, 354, 10, 33, "Input"],
Cell[63224, 2336, 53, 1, 30, "Output"]
}, Open  ]],
Cell[63292, 2340, 58, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[63375, 2344, 162, 5, 33, "Input"],
Cell[63540, 2351, 73, 2, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63650, 2358, 206, 6, 33, "Input"],
Cell[63859, 2366, 1010, 39, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64906, 2410, 354, 10, 33, "Input"],
Cell[65263, 2422, 53, 1, 30, "Output"]
}, Open  ]],
Cell[65331, 2426, 35, 0, 27, "Text"],
Cell[65369, 2428, 429, 13, 257, "Input"],
Cell[65801, 2443, 26, 0, 33, "Input"],
Cell[65830, 2445, 105, 3, 27, "Text"],
Cell[CellGroupData[{
Cell[65960, 2452, 163, 5, 33, "Input"],
Cell[66126, 2459, 53, 1, 30, "Output"]
}, Open  ]],
Cell[66194, 2463, 20, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[66239, 2467, 208, 6, 33, "Input"],
Cell[66450, 2475, 964, 37, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67451, 2517, 356, 10, 33, "Input"],
Cell[67810, 2529, 53, 1, 30, "Output"]
}, Open  ]],
Cell[67878, 2533, 246, 4, 48, "Text"],
Cell[CellGroupData[{
Cell[68149, 2541, 1449, 49, 234, "Input"],
Cell[69601, 2592, 53, 1, 30, "Output"],
Cell[69657, 2595, 53, 1, 30, "Output"],
Cell[69713, 2598, 53, 1, 30, "Output"],
Cell[69769, 2601, 53, 1, 30, "Output"],
Cell[69825, 2604, 53, 1, 30, "Output"],
Cell[69881, 2607, 53, 1, 30, "Output"],
Cell[69937, 2610, 53, 1, 30, "Output"],
Cell[69993, 2613, 53, 1, 30, "Output"]
}, Open  ]],
Cell[70061, 2617, 125, 3, 27, "Text"],
Cell[CellGroupData[{
Cell[70211, 2624, 626, 9, 209, "Input"],
Cell[70840, 2635, 73, 2, 52, "Output"],
Cell[70916, 2639, 53, 1, 30, "Output"],
Cell[70972, 2642, 53, 1, 30, "Output"],
Cell[71028, 2645, 73, 2, 52, "Output"],
Cell[71104, 2649, 53, 1, 30, "Output"],
Cell[71160, 2652, 73, 2, 52, "Output"],
Cell[71236, 2656, 73, 2, 52, "Output"],
Cell[71312, 2660, 53, 1, 30, "Output"]
}, Open  ]],
Cell[71380, 2664, 348, 7, 72, "Text"],
Cell[CellGroupData[{
Cell[71753, 2675, 12632, 372, 809, "Input"],
Cell[84388, 3049, 18008, 701, 366, 15421, 655, "GraphicsData", "PostScript", \
"Graphics"]
}, Open  ]],
Cell[102411, 3753, 138, 3, 27, "Text"],
Cell[102552, 3758, 123, 1, 109, "Input"],
Cell[102678, 3761, 524, 14, 73, "Text"],
Cell[103205, 3777, 115, 4, 33, "Input"],
Cell[103323, 3783, 72, 2, 27, "Text"],
Cell[103398, 3787, 233, 8, 59, "Input"],
Cell[103634, 3797, 289, 5, 48, "Text"],
Cell[103926, 3804, 398, 11, 109, "Input"],
Cell[104327, 3817, 45, 0, 59, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104421, 3823, 52, 0, 43, "Subsection"],
Cell[104476, 3825, 496, 8, 90, "Text"],
Cell[104975, 3835, 102, 4, 58, "Input"],
Cell[105080, 3841, 1236, 42, 179, "Text"],
Cell[106319, 3885, 229, 6, 25, "Text"],
Cell[106551, 3893, 157, 3, 27, "Text"],
Cell[106711, 3898, 26, 0, 33, "Input"],
Cell[106740, 3900, 825, 32, 429, "Input"],
Cell[107568, 3934, 26, 0, 33, "Input"],
Cell[107597, 3936, 624, 17, 69, "Text"],
Cell[108224, 3955, 45, 0, 59, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108306, 3960, 34, 0, 43, "Subsection"],
Cell[108343, 3962, 170, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[108538, 3971, 343, 10, 59, "Input"],
Cell[108884, 3983, 73, 2, 52, "Output"],
Cell[108960, 3987, 484, 17, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109481, 4009, 343, 10, 59, "Input"],
Cell[109827, 4021, 73, 2, 52, "Output"],
Cell[109903, 4025, 484, 17, 52, "Output"]
}, Open  ]],
Cell[110402, 4045, 133, 3, 27, "Text"],
Cell[CellGroupData[{
Cell[110560, 4052, 1447, 47, 284, "Input"],
Cell[112010, 4101, 73, 2, 52, "Output"],
Cell[112086, 4105, 962, 39, 57, "Output"],
Cell[113051, 4146, 73, 2, 52, "Output"],
Cell[113127, 4150, 962, 39, 57, "Output"],
Cell[114092, 4191, 73, 2, 52, "Output"],
Cell[114168, 4195, 962, 39, 57, "Output"],
Cell[115133, 4236, 73, 2, 52, "Output"],
Cell[115209, 4240, 962, 39, 57, "Output"]
}, Open  ]],
Cell[116186, 4282, 69, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[116280, 4286, 1446, 48, 209, "Input"],
Cell[117729, 4336, 53, 1, 30, "Output"],
Cell[117785, 4339, 53, 1, 30, "Output"],
Cell[117841, 4342, 53, 1, 30, "Output"],
Cell[117897, 4345, 53, 1, 30, "Output"],
Cell[117953, 4348, 53, 1, 30, "Output"],
Cell[118009, 4351, 53, 1, 30, "Output"],
Cell[118065, 4354, 53, 1, 30, "Output"],
Cell[118121, 4357, 53, 1, 30, "Output"]
}, Open  ]],
Cell[118189, 4361, 137, 3, 27, "Text"],
Cell[118329, 4366, 974, 25, 209, "Input"],
Cell[CellGroupData[{
Cell[119328, 4395, 96, 3, 33, "Input"],
Cell[119427, 4400, 73, 2, 52, "Output"],
Cell[119503, 4404, 73, 2, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119613, 4411, 96, 3, 33, "Input"],
Cell[119712, 4416, 73, 2, 52, "Output"]
}, Open  ]],
Cell[119800, 4421, 96, 3, 33, "Input"],
Cell[CellGroupData[{
Cell[119921, 4428, 96, 3, 33, "Input"],
Cell[120020, 4433, 73, 2, 52, "Output"]
}, Open  ]],
Cell[120108, 4438, 220, 4, 48, "Text"],
Cell[CellGroupData[{
Cell[120353, 4446, 13501, 394, 1034, "Input"],
Cell[133857, 4842, 28484, 1071, 454, 24307, 999, "GraphicsData", \
"PostScript", "Graphics"]
}, Open  ]],
Cell[162356, 5916, 26, 0, 33, "Input"],
Cell[162385, 5918, 324, 11, 55, "Text"],
Cell[162712, 5931, 391, 10, 48, "Text"],
Cell[163106, 5943, 26, 0, 33, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163169, 5948, 54, 0, 43, "Subsection"],
Cell[163226, 5950, 1134, 20, 173, "Text"],
Cell[164363, 5972, 26, 0, 33, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164426, 5977, 60, 0, 43, "Subsection"],
Cell[164489, 5979, 42, 0, 27, "Text"],
Cell[164534, 5981, 1909, 61, 309, "Input"],
Cell[166446, 6044, 314, 12, 30, "Text"],
Cell[166763, 6058, 26, 0, 33, "Input"],
Cell[CellGroupData[{
Cell[166814, 6062, 42, 0, 40, "Subsubsection"],
Cell[166859, 6064, 279, 7, 48, "Text"],
Cell[CellGroupData[{
Cell[167163, 6075, 110, 3, 33, "Input"],
Cell[167276, 6080, 236, 8, 30, "Output"]
}, Open  ]],
Cell[167527, 6091, 42, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[167594, 6095, 132, 4, 62, "Input"],
Cell[167729, 6101, 53, 1, 30, "Output"]
}, Open  ]],
Cell[167797, 6105, 545, 15, 76, "Text"],
Cell[168345, 6122, 45, 0, 59, "Input"],
Cell[168393, 6124, 192, 4, 48, "Text"],
Cell[168588, 6130, 446, 16, 33, "Input"],
Cell[169037, 6148, 153, 3, 27, "Text"],
Cell[CellGroupData[{
Cell[169215, 6155, 1213, 43, 84, "Input"],
Cell[170431, 6200, 55, 1, 30, "Output"],
Cell[170489, 6203, 55, 1, 30, "Output"],
Cell[170547, 6206, 55, 1, 30, "Output"]
}, Open  ]],
Cell[170617, 6210, 19, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[170661, 6214, 526, 16, 84, "Input"],
Cell[171190, 6232, 236, 8, 30, "Output"],
Cell[171429, 6242, 236, 8, 30, "Output"],
Cell[171668, 6252, 236, 8, 30, "Output"]
}, Open  ]],
Cell[171919, 6263, 26, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[171970, 6267, 529, 16, 84, "Input"],
Cell[172502, 6285, 1177, 35, 75, "Output"],
Cell[173682, 6322, 1174, 34, 75, "Output"],
Cell[174859, 6358, 1174, 34, 75, "Output"]
}, Open  ]],
Cell[176048, 6395, 33, 0, 27, "Text"],
Cell[176084, 6397, 332, 17, 242, "Input"],
Cell[176419, 6416, 94, 2, 27, "Text"],
Cell[CellGroupData[{
Cell[176538, 6422, 776, 25, 84, "Input"],
Cell[177317, 6449, 55, 1, 30, "Output"],
Cell[177375, 6452, 55, 1, 30, "Output"],
Cell[177433, 6455, 55, 1, 30, "Output"]
}, Open  ]],
Cell[177503, 6459, 31, 0, 27, "Text"],
Cell[177537, 6461, 812, 29, 242, "Input"],
Cell[178352, 6492, 91, 2, 27, "Text"],
Cell[CellGroupData[{
Cell[178468, 6498, 776, 25, 84, "Input"],
Cell[179247, 6525, 55, 1, 30, "Output"],
Cell[179305, 6528, 55, 1, 30, "Output"],
Cell[179363, 6531, 55, 1, 30, "Output"]
}, Open  ]],
Cell[179433, 6535, 26, 0, 33, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179496, 6540, 42, 0, 40, "Subsubsection"],
Cell[179541, 6542, 33, 0, 27, "Text"],
Cell[179577, 6544, 289, 13, 111, "Input"],
Cell[179869, 6559, 30, 0, 27, "Text"],
Cell[179902, 6561, 427, 15, 71, "Input"],
Cell[180332, 6578, 87, 2, 27, "Text"],
Cell[CellGroupData[{
Cell[180444, 6584, 375, 13, 71, "Input"],
Cell[180822, 6599, 55, 1, 30, "Output"]
}, Open  ]],
Cell[180892, 6603, 263, 6, 48, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181192, 6614, 43, 0, 40, "Subsubsection"],
Cell[181238, 6616, 26, 0, 33, "Input"],
Cell[181267, 6618, 1000, 31, 204, "Text"],
Cell[182270, 6651, 277, 9, 51, "Text"],
Cell[182550, 6662, 26, 0, 33, "Input"],
Cell[182579, 6664, 64, 0, 27, "Text"],
Cell[182646, 6666, 151, 5, 33, "Input"],
Cell[182800, 6673, 49, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[182874, 6677, 279, 9, 33, "Input"],
Cell[183156, 6688, 55, 1, 30, "Output"]
}, Open  ]],
Cell[183226, 6692, 58, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[183309, 6696, 667, 24, 33, "Input"],
Cell[183979, 6722, 55, 1, 30, "Output"]
}, Open  ]],
Cell[184049, 6726, 56, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[184130, 6730, 3342, 104, 234, "Input"],
Cell[187475, 6836, 55, 1, 30, "Output"],
Cell[187533, 6839, 55, 1, 30, "Output"],
Cell[187591, 6842, 55, 1, 30, "Output"],
Cell[187649, 6845, 55, 1, 30, "Output"],
Cell[187707, 6848, 55, 1, 30, "Output"]
}, Open  ]],
Cell[187777, 6852, 119, 3, 27, "Text"],
Cell[187899, 6857, 279, 9, 33, "Input"],
Cell[188181, 6868, 789, 24, 72, "Text"],
Cell[188973, 6894, 26, 0, 33, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189048, 6900, 29, 0, 43, "Subsection"],
Cell[189080, 6902, 620, 13, 90, "Text"],
Cell[189703, 6917, 428, 10, 69, "Text"],
Cell[190134, 6929, 456, 15, 69, "Text"],
Cell[190593, 6946, 342, 9, 48, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)


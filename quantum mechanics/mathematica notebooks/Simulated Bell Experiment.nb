(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    481002,      12002]
NotebookOptionsPosition[    457006,      11303]
NotebookOutlinePosition[    457398,      11320]
CellTagsIndexPosition[    457355,      11317]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"2", "-", "2"}]], "Input",
 CellChangeTimes->{{3.413850109999879*^9, 3.413850110493433*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.413850115988002*^9, 3.4138501424946547`*^9}, 
   3.413898704513249*^9, 3.414006599759939*^9}]
}, Open  ]],

Cell[TextData[{
 "NOTE: This notebook was written on, and is intended to be run on, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 6."
}], "Text",
 CellChangeTimes->{{3.4138502652927513`*^9, 3.413850309117133*^9}}],

Cell["We will need this resource", "Text",
 CellChangeTimes->{{3.414029044182045*^9, 3.4140290759476357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"P_", "\[CircleTimes]", "Q_"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", "P", ",", "Q"}], "]"}], ",", "i", ",", "j", 
           ",", "k"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{
            RowBox[{"Dimensions", "[", "P", "]"}], "\[LeftDoubleBracket]", 
            "2", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "P", "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "Q", "]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", "1"}], 
   "]"}]}]], "Input"],

Cell[TextData[{
 "which constructs Kronecker products of matrices ",
 StyleBox["P", "Input"],
 " and ",
 StyleBox["Q", "Input"],
 ", whatever might be their respective dimensions. Thus"
}], "Text",
 CellChangeTimes->{{3.414029157456195*^9, 3.414029197941856*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SubscriptBox["p", "11"], 
       SubscriptBox["p", "12"]},
      {
       SubscriptBox["p", "21"], 
       SubscriptBox["p", "22"]},
      {
       SubscriptBox["p", "31"], 
       SubscriptBox["p", "32"]}
     }], "\[NoBreak]", ")"}], "\[CircleTimes]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SubscriptBox["q", "11"]},
      {
       SubscriptBox["q", "21"]}
     }], "\[NoBreak]", ")"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.414029255612104*^9, 3.414029302597835*^9}, {
  3.4140293597480497`*^9, 3.414029385219296*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["p", "11"], " ", 
       SubscriptBox["q", "11"]}], 
      RowBox[{
       SubscriptBox["p", "12"], " ", 
       SubscriptBox["q", "11"]}]},
     {
      RowBox[{
       SubscriptBox["p", "11"], " ", 
       SubscriptBox["q", "21"]}], 
      RowBox[{
       SubscriptBox["p", "12"], " ", 
       SubscriptBox["q", "21"]}]},
     {
      RowBox[{
       SubscriptBox["p", "21"], " ", 
       SubscriptBox["q", "11"]}], 
      RowBox[{
       SubscriptBox["p", "22"], " ", 
       SubscriptBox["q", "11"]}]},
     {
      RowBox[{
       SubscriptBox["p", "21"], " ", 
       SubscriptBox["q", "21"]}], 
      RowBox[{
       SubscriptBox["p", "22"], " ", 
       SubscriptBox["q", "21"]}]},
     {
      RowBox[{
       SubscriptBox["p", "31"], " ", 
       SubscriptBox["q", "11"]}], 
      RowBox[{
       SubscriptBox["p", "32"], " ", 
       SubscriptBox["q", "11"]}]},
     {
      RowBox[{
       SubscriptBox["p", "31"], " ", 
       SubscriptBox["q", "21"]}], 
      RowBox[{
       SubscriptBox["p", "32"], " ", 
       SubscriptBox["q", "21"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.414029386708507*^9}]
}, Open  ]],

Cell[TextData[{
 "For a list of the most useful/characteristic properties of the Kronecker \
product, see page 24 in Chapter 1 of my ",
 StyleBox["Advanced Quantum Topics",
  FontSlant->"Italic"],
 " (2000). "
}], "Text",
 CellChangeTimes->{{3.414105737612056*^9, 3.414105785022821*^9}, {
  3.414105815617566*^9, 3.414105834639854*^9}}],

Cell[CellGroupData[{

Cell["Simulation of Quantum Measurement Processes", "Title",
 CellChangeTimes->{{3.4138501573162727`*^9, 3.41385016901094*^9}}],

Cell["\<\
Nicholas Wheeler
Reed College Physics Department
March 2008\
\>", "Text",
 CellChangeTimes->{{3.413850174797163*^9, 3.413850199379341*^9}}],

Cell[CellGroupData[{

Cell["Introduction.", "Subsection",
 CellChangeTimes->{{3.41385022861966*^9, 3.4138502350035477`*^9}, 
   3.4138505553209047`*^9}],

Cell[TextData[{
 "My objective in these exercises will be to demonstrate how ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 6 can be used to create data of precisely the sort that\[LongDash]in the \
absence of instrumental difficulties\[LongDash]would emerge from real-world \
quantum mechanical experiments. "
}], "Text",
 CellChangeTimes->{{3.41385024083134*^9, 3.413850256924034*^9}, {
  3.413850316068831*^9, 3.413850419887909*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.413850423339301*^9, 3.413850435353879*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Measurement of an observable, given that an isolated quantum system is in \
some prescribed state.\
\>", "Subsection",
 CellChangeTimes->{{3.413850500237521*^9, 3.413850551719853*^9}}],

Cell["\<\
Two-state quantum systems\[LongDash]though (like all finite-dimensional \
systems) incapable of accommodating relations of the form \
\>", "Text",
 CellChangeTimes->{{3.413850575949085*^9, 3.413850642258465*^9}, {
  3.4138507208971853`*^9, 3.413850731181198*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckX]", ".", "\[DoubleStruckP]"}], "-", 
   RowBox[{"\[DoubleStruckP]", ".", "\[DoubleStruckX]"}]}], "=", 
  RowBox[{"i", " ", "\[HBar]", " ", "\[DoubleStruckCapitalI]"}]}]], "Input",
 CellChangeTimes->{{3.4138506542014837`*^9, 3.413850709681405*^9}}],

Cell["\<\
\[LongDash]are famously well-adapted to the illustration of points of \
fundamental principle, which they expose in simplest-possible terms. We will \
make heavy use of that familiar fact. But for the purposes of this initial \
exercise the quantum theory of 3-state systems will better serve our needs. \
\>", "Text",
 CellChangeTimes->{{3.413850747594915*^9, 3.413850984447875*^9}, {
  3.413851022336467*^9, 3.4138510426485043`*^9}}],

Cell["\<\
To produce a random instance of a normalized complex 3-vector we proceed\
\>", "Text",
 CellChangeTimes->{{3.413851058101471*^9, 3.4138511586100082`*^9}, {
  3.41401097597045*^9, 3.4140110008307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Psi]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"u_", ",", "v_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Cos", "[", "v", "]"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "b"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Sin", "[", "v", "]"}]}]},
     {
      RowBox[{"Sin", "[", "u", "]"}]}
    }], "\[NoBreak]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"\[Psi]", "[", 
    RowBox[{
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.41400694437438*^9, 3.4140069483425283`*^9}, {
  3.414011012853586*^9, 3.414011044488639*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "0.5302863685480776`"}], "-", 
       RowBox[{"0.13997007422261326`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.08879013270274982`", "\[InvisibleSpace]", "-", 
       RowBox[{"0.14481431931759764`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"-", "0.8187489669669316`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.41401105184864*^9}]
}, Open  ]],

Cell["We confirm the normalization of the state", "Text",
 CellChangeTimes->{{3.41385168676598*^9, 3.413851698930159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "\[Psi]", "]"}], "]"}], ".", "\[Psi]"}], 
     ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
  "Chop"}]], "Input",
 CellChangeTimes->{{3.4138517024756002`*^9, 3.413851764944071*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.413851757950821*^9, 3.413851766677314*^9}, 
   3.413898725366761*^9, 3.414006742632494*^9, 3.414006980830945*^9, 
   3.4140086172443953`*^9, 3.414011075265997*^9}]
}, Open  ]],

Cell["\<\
and note that such a state can be prepared by filtering the output of a \
hermitian gun, the spectral resolution of which contains the projective term\
\>", "Text",
 CellChangeTimes->{{3.4138517918773327`*^9, 3.413851847844367*^9}, {
  3.414146523775805*^9, 3.414146561206842*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalG]", "=", 
   RowBox[{
    RowBox[{"\[Psi]", ".", 
     RowBox[{"Conjugate", "[", 
      RowBox[{"Transpose", "[", "\[Psi]", "]"}], "]"}]}], "//", "Chop"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.413851852711423*^9, 3.413851904289641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[DoubleStruckCapitalG]", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4138519105677423`*^9, 3.4138519264337387`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.3007952543457915`", 
      RowBox[{
       RowBox[{"-", "0.026814526010461755`"}], "-", 
       RowBox[{"0.08922102096933016`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.4341714164453841`", "\[InvisibleSpace]", "+", 
       RowBox[{"0.11460035367604934`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.026814526010461755`"}], "+", 
       RowBox[{"0.08922102096933016`", " ", "\[ImaginaryI]"}]}], 
      "0.028854874744791058`", 
      RowBox[{
       RowBox[{"-", "0.07269682942723318`"}], "+", 
       RowBox[{"0.11856657434330242`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.4341714164453841`", "\[InvisibleSpace]", "-", 
       RowBox[{"0.11460035367604934`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.07269682942723318`"}], "-", 
       RowBox[{"0.11856657434330242`", " ", "\[ImaginaryI]"}]}], 
      "0.6703498709094176`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.413851928733048*^9, 3.413898738695259*^9, 
  3.41400675230155*^9, 3.414006989650476*^9, 3.4140086231529818`*^9, 
  3.414011083417676*^9}]
}, Open  ]],

Cell["\<\
I linger to demonstrate that \[DoubleStruckCapitalG] is in fact a projection \
matrix\
\>", "Text",
 CellChangeTimes->{{3.413852135276396*^9, 3.4138521581775837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalG]", ".", "\[DoubleStruckCapitalG]"}], "-", 
    "\[DoubleStruckCapitalG]"}], "//", "Chop"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.413852079545733*^9, 3.413852116301282*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {"0", "0", "0"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.4138520914460363`*^9, 3.4138521179987373`*^9}, 
   3.413898742070101*^9, 3.414006756713233*^9, 3.414006995210556*^9, 
   3.41400862908624*^9, 3.414011087287237*^9}]
}, Open  ]],

Cell["that projects onto a 1-space", "Text",
 CellChangeTimes->{{3.413852220779516*^9, 3.413852227930028*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", "\[DoubleStruckCapitalG]", "]"}], "//", 
  "Chop"}]], "Input",
 CellChangeTimes->{{3.413852174045845*^9, 3.4138521925594797`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0000000000000002`", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.4138521868339376`*^9, 3.413852194352971*^9}, 
   3.413898747609357*^9, 3.414006764824861*^9, 3.414006997926153*^9, 
   3.4140086324904118`*^9, 3.414011090555874*^9}]
}, Open  ]],

Cell[TextData[{
 "which is in fact the ray defined by",
 StyleBox[" \[Psi]:", "Output"]
}], "Text",
 CellChangeTimes->{
  3.413852164473631*^9, {3.413852236267076*^9, 3.413852256243257*^9}, {
   3.413852289315727*^9, 3.4138522953391933`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalG]", ".", "\[Psi]"}], "-", "\[Psi]"}], "//",
    "Chop"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.413851938353901*^9, 3.413852030799788*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0"},
     {"0"},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.413851964147204*^9, 3.413852032095495*^9}, 
   3.4138987510770493`*^9, 3.4140067715794773`*^9, 3.4140070002317677`*^9, 
   3.414008635289068*^9, 3.414011092825739*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.413852905696712*^9, 3.4138529098077507`*^9}}],

Cell["\<\
Let \[DoubleStruckCapitalA] be a 3\[Cross]3 hermitian matrix the represents \
the action of an A-meter, and let us agree to work in the eigenbasis of \
\[DoubleStruckCapitalA].
Let us (without loss of generality) agree, moreover, that the eigenvalues of \
\[DoubleStruckCapitalA] are {-1, 0, +1}. We then have\
\>", "Text",
 CellChangeTimes->{{3.413852917127852*^9, 3.4138530829995737`*^9}, 
   3.4141465947045517`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", 
       RowBox[{"-", "1"}]}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.413853087299417*^9, 3.413853131631378*^9}, 
   3.413853406930757*^9}],

Cell[TextData[{
 "The spectral resolution of \[DoubleStruckCapitalA] is ",
 Cell[BoxData[
  RowBox[{"\[DoubleStruckCapitalA]", "\[Equal]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"+", "1"}], ")"}], 
     SubscriptBox["\[DoubleStruckCapitalP]", "+"]}], "+", 
    RowBox[{
     RowBox[{"(", "0", ")"}], 
     SubscriptBox["\[DoubleStruckCapitalP]", "0"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], 
     SubscriptBox["\[DoubleStruckCapitalP]", "-"]}]}]}]],
  CellChangeTimes->{{3.413853176732999*^9, 3.413853250904717*^9}}],
 "with"
}], "Text",
 CellChangeTimes->{{3.413853150083983*^9, 3.413853169161148*^9}, {
  3.413853373977743*^9, 3.413853379676179*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalP]", "+"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalP]", "0"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0"},
      {"0", "1", "0"},
      {"0", "0", "0"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalP]", "-"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.413853274147996*^9, 3.4138533626660748`*^9}, {
  3.413853416536188*^9, 3.4138534196326323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[DoubleStruckCapitalA]", "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"+", "1"}], ")"}], 
    SubscriptBox["\[DoubleStruckCapitalP]", "+"]}], "+", 
   RowBox[{
    RowBox[{"(", "0", ")"}], 
    SubscriptBox["\[DoubleStruckCapitalP]", "0"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    SubscriptBox["\[DoubleStruckCapitalP]", "-"]}]}]}]], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.4138534266517677`*^9, 3.413898768686661*^9, 3.414006792283641*^9, 
   3.414007014872546*^9, {3.414010718160359*^9, 3.4140107255207977`*^9}, 
   3.414011120444953*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.41385344474269*^9, 3.413853450840225*^9}}],

Cell["\<\
When \[Psi] is presented to the A-meter, it\
\>", "Text",
 CellChangeTimes->{{3.4138534682469254`*^9, 3.413853489613995*^9}}],

Cell[TextData[{
 "   \[Bullet] announces \[ImplicitPlus]+1 with probatility ",
 Cell[BoxData[
  SubscriptBox["prob", "+"]],
  CellChangeTimes->{{3.413853551947686*^9, 3.413853661469458*^9}}],
 ", else\n   \[Bullet] announces  0  with probatility ",
 Cell[BoxData[
  SubscriptBox["prob", "0"]],
  CellChangeTimes->{{3.413853551947686*^9, 3.413853661469458*^9}}],
 ", else\n   \[Bullet] announces -1  with probatility ",
 Cell[BoxData[
  SubscriptBox["prob", "-"]],
  CellChangeTimes->{{3.413853551947686*^9, 3.413853661469458*^9}}],
 "  "
}], "Text",
 CellChangeTimes->{{3.413853506763485*^9, 3.413853540276917*^9}, {
  3.413853718711421*^9, 3.413853856783801*^9}}],

Cell["where", "Text",
 CellChangeTimes->{{3.413853851526856*^9, 3.413853851993772*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["prob", "+"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalP]", "+"], ".", "\[Psi]"}], 
         "]"}], "]"}], ".", 
       SubscriptBox["\[DoubleStruckCapitalP]", "+"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["prob", "0"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalP]", "0"], ".", "\[Psi]"}], 
         "]"}], "]"}], ".", 
       SubscriptBox["\[DoubleStruckCapitalP]", "0"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["prob", "-"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalP]", "-"], ".", "\[Psi]"}], 
         "]"}], "]"}], ".", 
       SubscriptBox["\[DoubleStruckCapitalP]", "-"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}]}], "Input",
 CellChangeTimes->{{3.413853551947686*^9, 3.413853661469458*^9}, {
  3.4138538654113083`*^9, 3.4138539139745893`*^9}}],

Cell[BoxData["0.3007952543457915`"], "Output",
 CellChangeTimes->{{3.413853896991736*^9, 3.413853918094483*^9}, 
   3.413855385285068*^9, 3.41389877704461*^9, 3.414006808289979*^9, 
   3.414007024803123*^9, 3.4140086470706987`*^9, 3.414011128989922*^9}],

Cell[BoxData["0.028854874744791058`"], "Output",
 CellChangeTimes->{{3.413853896991736*^9, 3.413853918094483*^9}, 
   3.413855385285068*^9, 3.41389877704461*^9, 3.414006808289979*^9, 
   3.414007024803123*^9, 3.4140086470706987`*^9, 3.414011129013442*^9}],

Cell[BoxData["0.6703498709094176`"], "Output",
 CellChangeTimes->{{3.413853896991736*^9, 3.413853918094483*^9}, 
   3.413855385285068*^9, 3.41389877704461*^9, 3.414006808289979*^9, 
   3.414007024803123*^9, 3.4140086470706987`*^9, 3.414011129120224*^9}]
}, Open  ]],

Cell["Of  course", "Text",
 CellChangeTimes->{{3.413853975595112*^9, 3.4138539784699*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["prob", "+"], "+", 
   SubscriptBox["prob", "0"], "+", 
   SubscriptBox["prob", "-"]}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.413853930054737*^9, 3.413853963354185*^9}}],

Cell[BoxData["1.0000000000000002`"], "Output",
 CellChangeTimes->{3.41385396618076*^9, 3.413898785593657*^9, 
  3.414007038409919*^9, 3.4140086594392757`*^9, 3.414011134156822*^9}]
}, Open  ]],

Cell["In those respective cases the A-meter creates the state ", "Text",
 CellChangeTimes->{{3.413854011390942*^9, 3.4138540367744293`*^9}, {
  3.41389744748746*^9, 3.413897448325729*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1"},
      {"0"},
      {"0"}
     }], "\[NoBreak]", ")"}], "else", " ", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0"},
      {"1"},
      {"0"}
     }], "\[NoBreak]", ")"}], " ", "else", " ", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0"},
      {"0"},
      {"1"}
     }], "\[NoBreak]", ")"}]}],
  FontColor->GrayLevel[0.5]]], "Input",
 CellChangeTimes->{{3.413854063938126*^9, 3.413854108812055*^9}}],

Cell[TextData[{
 "The following construction\[LongDash]in which it is intended that ",
 StyleBox["x", "Input"],
 " will be assigned a random value: ",
 StyleBox["0 \[LessSlantEqual] x \[LessSlantEqual] 1", "Input"],
 " \[LongDash]designed to simulate the result of a solitary A-measurement:"
}], "Text",
 CellChangeTimes->{{3.413854718246985*^9, 3.413854763394252*^9}, {
  3.414011207513198*^9, 3.414011296868142*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MeasureA", "[", "x_", "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"0", "\[LessSlantEqual]", "x", "<", 
     SubscriptBox["prob", "+"]}], ",", " ", 
    RowBox[{"+", "1"}], ",", " ", 
    RowBox[{
     SubscriptBox["prob", "+"], "\[LessSlantEqual]", "x", "<", 
     RowBox[{
      SubscriptBox["prob", "+"], "+", 
      SubscriptBox["prob", "0"]}]}], ",", " ", "0", ",", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["prob", "+"], "+", 
      SubscriptBox["prob", "0"]}], "\[LessSlantEqual]", "x", 
     "\[LessSlantEqual]", "1"}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4138548066886187`*^9, 3.41385501894571*^9}, {
  3.4140064583562517`*^9, 3.4140064636153584`*^9}}],

Cell["\<\
To simulate a short series of such A-measurements, we proceed\
\>", "Text",
 CellChangeTimes->{{3.414011325757647*^9, 3.414011348354272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestRunA1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"MeasureA", "[", 
     RowBox[{"Random", "[", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.413855101271512*^9, 3.413855201447139*^9}, {
  3.413855395316296*^9, 3.413855425418432*^9}, {3.4140064724853354`*^9, 
  3.414006473770954*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.413855206246038*^9, {3.413855403571801*^9, 3.41385542640703*^9}, 
   3.413855539452779*^9, 3.4138988450600853`*^9, 3.414007054526479*^9, 
   3.41400868628372*^9, 3.414011358785293*^9}]
}, Open  ]],

Cell["\<\
Looking for more reliable statistics, we spend a long afternoon in the lab, \
and create\
\>", "Text",
 CellChangeTimes->{{3.413855459292924*^9, 3.413855486101096*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TestRunA2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"MeasureA", "[", 
      RowBox[{"Random", "[", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.413855496425753*^9, 3.41385550300357*^9}, 
   3.413855533181673*^9, {3.414006505109809*^9, 3.414006506216346*^9}}],

Cell["Here is a summary of our data:", "Text",
 CellChangeTimes->{{3.413855518282621*^9, 3.413855525037834*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Count", "[", 
  RowBox[{"TestRunA2", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"TestRunA2", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"TestRunA2", ",", 
   RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.413855553197287*^9, 3.413855597716838*^9}}],

Cell[BoxData["283"], "Output",
 CellChangeTimes->{3.4138555998031816`*^9, 3.413898864220875*^9, 
  3.4140070706489897`*^9, 3.414008701434495*^9, 3.414011381724262*^9, 
  3.4140116482287893`*^9, 3.4140117516510553`*^9, 3.41401182362997*^9}],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{3.4138555998031816`*^9, 3.413898864220875*^9, 
  3.4140070706489897`*^9, 3.414008701434495*^9, 3.414011381724262*^9, 
  3.4140116482287893`*^9, 3.4140117516510553`*^9, 3.414011823664578*^9}],

Cell[BoxData["689"], "Output",
 CellChangeTimes->{3.4138555998031816`*^9, 3.413898864220875*^9, 
  3.4140070706489897`*^9, 3.414008701434495*^9, 3.414011381724262*^9, 
  3.4140116482287893`*^9, 3.4140117516510553`*^9, 3.414011823681514*^9}]
}, Open  ]],

Cell["\<\
The average of the meter readings produced by that particular series of \
measurements is given by\
\>", "Text",
 CellChangeTimes->{{3.4138557002600937`*^9, 3.413855702910186*^9}, {
  3.413897493154594*^9, 3.413897498866269*^9}, {3.413899277037572*^9, 
  3.413899298628192*^9}, {3.413905964014216*^9, 3.413906031326741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MeasuredMean", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"TestRunA2", ",", "1"}], "]"}], "-", 
     RowBox[{"Count", "[", 
      RowBox[{"TestRunA2", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "1000"], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.413855648549149*^9, 3.4138557217760983`*^9}, {
  3.413897504495714*^9, 3.413897504996673*^9}, {3.4138989034351*^9, 
  3.413898908998642*^9}, {3.4138992647569027`*^9, 3.413899267088952*^9}, {
  3.413905354892179*^9, 3.4139053572425137`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.406`"}]], "Output",
 CellChangeTimes->{{3.413855708950861*^9, 3.413855723265264*^9}, 
   3.413898870313664*^9, 3.4138989151178503`*^9, 3.413899325012247*^9, 
   3.413905362966832*^9, 3.414007081131929*^9, 3.414008714055004*^9, 
   3.414011410063205*^9, 3.414011758471559*^9, 3.4140118327836027`*^9}]
}, Open  ]],

Cell[TextData[{
 "What confidence should we invest in our \"averaged meter reading\"? To \
answer that question, one should\[LongDash]according to John R. Taylor, ",
 StyleBox["An Introduction to Error Analysis",
  FontSlant->"Italic"],
 " (1982) \[Section]4.4 and "
}], "Text",
 CellChangeTimes->{{3.413857628512439*^9, 3.413857696480472*^9}, {
  3.4138983769011393`*^9, 3.413898455791669*^9}, {3.413898495929266*^9, 
  3.413898502428784*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Standard deviation of the mean\>\"", ",", 
   "\"\<http://www.statsdirect.com/help/basic_descriptive_statistics/standard_\
deviation.htm\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.4138618176936398`*^9, 3.413861834981574*^9}, {
  3.413861871995841*^9, 3.413861883683182*^9}, {3.413898546609391*^9, 
  3.4138985769965487`*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"\<\"Standard deviation of the mean\"\>", True->
    StyleBox["\<\"Standard deviation of the mean\"\>", "HyperlinkActive"]}, 
    Dynamic[
     CurrentValue["MouseOver"]],
    BaselinePosition->Baseline,
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://www.statsdirect.com/help/basic_descriptive_statistics/\
standard_deviation.htm"], None},
   ButtonNote->
    "http://www.statsdirect.com/help/basic_descriptive_statistics/standard_\
deviation.htm"],
  Annotation[#, 
   "http://www.statsdirect.com/help/basic_descriptive_statistics/standard_\
deviation.htm", "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.4138618902591677`*^9, 3.4138985884799213`*^9}]
}, Open  ]],

Cell["\[LongDash]look to the construction", "Text",
 CellChangeTimes->{{3.413898614146304*^9, 3.413898618909601*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SDM", "=", 
  FractionBox[
   SqrtBox[
    FractionBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "1000"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "TestRunA2", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
         "-", "MeasuredMean"}], ")"}], "2"]}], 
     RowBox[{"1000", "-", "1"}]]], 
   SqrtBox["1000"]]}]], "Input",
 CellChangeTimes->{{3.413857106357452*^9, 3.41385715245229*^9}, {
   3.413857190429411*^9, 3.413857268175296*^9}, {3.4138573818022614`*^9, 
   3.413857393449943*^9}, {3.4138575169658422`*^9, 3.4138575519259977`*^9}, {
   3.4138982953851557`*^9, 3.413898306612615*^9}, 3.413898625488772*^9, {
   3.4138989395457363`*^9, 3.413898943125867*^9}, {3.413899313626133*^9, 
   3.413899317663028*^9}, {3.413905380046802*^9, 3.41390538481835*^9}}],

Cell[BoxData["0.028424847791535982`"], "Output",
 CellChangeTimes->{
  3.413857274260091*^9, 3.413857408344352*^9, {3.413857538352043*^9, 
   3.413857553106215*^9}, 3.413898980388585*^9, 3.413899329795993*^9, 
   3.413905390416806*^9, 3.414007094906432*^9, 3.414008862958281*^9, 
   3.4140118633306637`*^9}]
}, Open  ]],

Cell["\<\
The following construction provides graphic indication of how our measured \
mean compares with the theoretically predicted mean\
\>", "Text",
 CellChangeTimes->{{3.4139055312196302`*^9, 3.41390561948767*^9}, 
   3.413906131062723*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictedMean", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", "\[Psi]", "]"}], "]"}], ".", 
       "\[DoubleStruckCapitalA]", ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.413856019744711*^9, 3.413856083828*^9}, {
  3.413905334852903*^9, 3.413905339667266*^9}, {3.414012538020132*^9, 
  3.4140125564099817`*^9}, {3.414012595474347*^9, 3.414012624941759*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.36955461656362604`"}]], "Output",
 CellChangeTimes->{{3.41385607538282*^9, 3.4138560851535807`*^9}, 
   3.413898924522252*^9, 3.413905368948042*^9, 3.4140070999857483`*^9, 
   3.41400888328196*^9, 3.41401074544623*^9, 3.4140119248823967`*^9, 
   3.414012559853697*^9, 3.4140126263556433`*^9}]
}, Open  ]],

Cell["\<\
and of how much confidence we can invest in the experimental result:\
\>", "Text",
 CellChangeTimes->{{3.413906144018483*^9, 3.413906154846959*^9}, 
   3.413906215975041*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeFigure", "[", 
   RowBox[{"m_", ",", "\[Sigma]_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Sigma]", 
       SqrtBox[
        RowBox[{"2", "\[Pi]"}]]}]], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"x", "-", "m"}], "\[Sigma]"], ")"}], "2"]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", "\[Sigma]"}]}], ")"}]}], ",", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", "\[Sigma]"}]}], ")"}]}], "}"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "Red"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["3", 
        RowBox[{"2", "\[Sigma]", 
         SqrtBox[
          RowBox[{"2", "\[Pi]"}]]}]]}], "}"}]}], ",", " ", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "\[Alpha]", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Comparison of \!\(\*
StyleBox[\"measured\",
FontColor->RGBColor[0, 0, 1]]\) and \!\(\*
StyleBox[\"predicted\",
FontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\" \",
FontColor->RGBColor[1, 0, 0]]\)\!\(\*
StyleBox[\"means\",
FontColor->GrayLevel[0]]\)\>\"", ",", "  ", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.413905712101157*^9, 3.413905718503717*^9}, {
   3.414007188645084*^9, 3.414007205633807*^9}, {3.4140072365138693`*^9, 
   3.414007310068017*^9}, {3.414007357907205*^9, 3.414007387877902*^9}, {
   3.414011991133692*^9, 3.414011996014317*^9}, {3.414012039182555*^9, 
   3.41401204737329*^9}, {3.414012168275529*^9, 3.4140121907117853`*^9}, {
   3.414012226323966*^9, 3.4140122705800734`*^9}, {3.414012318191856*^9, 
   3.414012354245398*^9}, {3.414012401367868*^9, 3.414012430334464*^9}, 
   3.414012472263671*^9, {3.414012513940003*^9, 3.414012514459145*^9}, {
   3.414012709707559*^9, 3.414012712494555*^9}, {3.4140134500123568`*^9, 
   3.4140134595606747`*^9}, {3.4140134916886168`*^9, 3.414013498755196*^9}, {
   3.414013534812158*^9, 3.414013540153213*^9}, {3.414021191001923*^9, 
   3.414021222841617*^9}, {3.414021277883553*^9, 3.4140212998129187`*^9}, {
   3.4140213944791613`*^9, 3.4140214380486603`*^9}, {3.414021468244763*^9, 
   3.4140215167386227`*^9}, {3.4140216078463163`*^9, 3.414021678066383*^9}, {
   3.4140217428480453`*^9, 3.414021790708912*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MakeFigure", "[", 
  RowBox[{"MeasuredMean", ",", "SDM", ",", " ", "PredictedMean"}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
E6C10A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{-0.406, {-0.36955461656362604`, 
      RGBColor[1, 0, 0]}}, {}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Comparison of \
\\!\\(\\*\\nStyleBox[\\\"measured\\\",\\nFontColor->RGBColor[0, 0, 1]]\\) and \
\\!\\(\\*\\nStyleBox[\\\"predicted\\\",\\nFontColor->RGBColor[1, 0, 0]]\\)\\!\
\\(\\*\\nStyleBox[\\\" \\\",\\nFontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*\\nStyleBox[\\\"means\\\",\\nFontColor->GrayLevel[0]]\\)\"", 
     FontFamily -> "Helvetica", FontSize -> 14, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{-1.056849695583072, 1.056849695583072}, {
    0, 21.052475812388963`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic},
  Ticks->{{{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {-0.36955461656362604`, 
      FormBox[
       RowBox[{"-", "0.36955461656362604`"}], TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}, {}}]], "Output",
 CellChangeTimes->{
  3.41390576705483*^9, 3.4140071567831373`*^9, 3.41400732356894*^9, {
   3.41400737541428*^9, 3.414007395282319*^9}, 3.4140107839314632`*^9, 
   3.41401193917376*^9, 3.414012007559269*^9, 3.4140120528177156`*^9, {
   3.414012177114242*^9, 3.414012196788124*^9}, {3.414012233740965*^9, 
   3.414012277322673*^9}, 3.4140123651900377`*^9, 3.414012440823403*^9, 
   3.414012483358802*^9, 3.41401251931903*^9, 3.4140127193809443`*^9, 
   3.414013471301221*^9, 3.414013506088766*^9, 3.4140213110935373`*^9, 
   3.414021444904848*^9, 3.414021499662438*^9, 3.414021529690098*^9, 
   3.414021686538199*^9, 3.414021717280097*^9, 3.414021800606786*^9}]
}, Open  ]],

Cell["\<\
Finally, I place all state-construction commands and all state-dependent \
commands within a single cell, so that a fresh series of N   measurements (I \
have set N = 1000, but the value of N is very easily adjusted) can be \
simulated at a single keystroke:\
\>", "Text",
 CellChangeTimes->{{3.414023208283785*^9, 3.414023360652164*^9}, {
  3.414028645559558*^9, 3.414028660270656*^9}, {3.414028735360424*^9, 
  3.414028780714231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Psi]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"u_", ",", "v_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Cos", "[", "v", "]"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "b"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Sin", "[", "v", "]"}]}]},
     {
      RowBox[{"Sin", "[", "u", "]"}]}
    }], "\[NoBreak]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"\[Psi]", "[", 
    RowBox[{
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["prob", "+"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalP]", "+"], ".", "\[Psi]"}], 
         "]"}], "]"}], ".", 
       SubscriptBox["\[DoubleStruckCapitalP]", "+"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["prob", "0"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalP]", "0"], ".", "\[Psi]"}], 
         "]"}], "]"}], ".", 
       SubscriptBox["\[DoubleStruckCapitalP]", "0"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["prob", "-"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalP]", "-"], ".", "\[Psi]"}], 
         "]"}], "]"}], ".", 
       SubscriptBox["\[DoubleStruckCapitalP]", "-"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NewRun", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"MeasureA", "[", 
      RowBox[{"Random", "[", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"NewRun", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"NewRun", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"NewRun", ",", 
   RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MeasuredMean", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"NewRun", ",", "1"}], "]"}], "-", 
     RowBox[{"Count", "[", 
      RowBox[{"NewRun", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"PredictedMean", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", "\[Psi]", "]"}], "]"}], ".", 
       "\[DoubleStruckCapitalA]", ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"SDM", "=", 
  FractionBox[
   SqrtBox[
    FractionBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "1000"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "TestRunA2", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
         "-", "MeasuredMean"}], ")"}], "2"]}], 
     RowBox[{"1000", "-", "1"}]]], 
   SqrtBox["1000"]]}], "\[IndentingNewLine]", 
 RowBox[{"MakeFigure", "[", 
  RowBox[{"MeasuredMean", ",", "SDM", ",", " ", "PredictedMean"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.41400694437438*^9, 3.4140069483425283`*^9}, {
   3.414011012853586*^9, 3.414011044488639*^9}, {3.4140219266179123`*^9, 
   3.4140219276593943`*^9}, {3.414021967473817*^9, 3.4140219791282578`*^9}, {
   3.41402201438733*^9, 3.4140220431983023`*^9}, {3.414022077326556*^9, 
   3.414022139520749*^9}, {3.414022169934135*^9, 3.414022170709985*^9}, {
   3.41402220266987*^9, 3.4140222276557503`*^9}, {3.414022258192471*^9, 
   3.4140222666122303`*^9}, {3.414022429238549*^9, 3.4140224428707867`*^9}, {
   3.414022502544621*^9, 3.414022515464879*^9}, 3.414025977163888*^9, 
   3.41402611911104*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.4286992311395555`", "\[InvisibleSpace]", "-", 
       RowBox[{"0.5997881203250427`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.5944214598544665`"}], "+", 
       RowBox[{"0.2990400980321795`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"-", "0.1170868385886966`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.41402623364288*^9}],

Cell[BoxData["0.5435288200626939`"], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.414026233787265*^9}],

Cell[BoxData["0.4427618521666106`"], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.414026233882411*^9}],

Cell[BoxData["0.013709327770695492`"], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.41402623394775*^9}],

Cell[BoxData["539"], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.414026234015932*^9}],

Cell[BoxData["449"], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.414026234095912*^9}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.414026234164505*^9}],

Cell[BoxData["0.527`"], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.414026234215452*^9}],

Cell[BoxData["0.5298194922919984`"], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.414026234265162*^9}],

Cell[BoxData["0.04097965754288751`"], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.41402623433146*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
M0DYuyv5PpUbdem0ec1z7SoQDn4sOvsKorfQ+oHP2UuwTGGYI3blJHpjvdUU
1+gLy9RVNjOaMqjj8E+98uwVWGY4yZXJp4Ta/1SPsBK/C8us8YOXD9RRO1XW
P2ZyHbDM9S+O9QeKXjN+3ya8qAbLAi6GPbVnUWtfj9NDp3tgWXSUKjLbGLUk
PIu77NQMy5I6DXoBZuillHeS2vS0sCxX8pTC3go1f8Lv8PTWD1hWFtCo1b6O
XkwpMmAknTvL6hG7fmI30fPfVAQciqtgGflVqkrphhrnynCuSzvAso6j2+aS
F2rQfwODYemEZf0+yQ8tD9Fzet+/6Zz8CcummMXb+QGo7p8GkSLtKVg2L8gR
Dw9FtfHPYuMDSM3BFU6budsxqBZ16fm318xg2TaY66VhEooWDbJKDxXCsuPP
wSsyGeiZrIithOvTsHz7ahwHfS6qPvXsluQTUn4e7YZ9a+9Q1euBIVHbjLDs
rUoV3fMRVRHGi1OzX4blh68a9IsrUCXeGvOglh1Y9md6ShlfgyqcS6G6WLQA
yyGPNb7fbUDlznJq8/Meh+UIwu5js3ZU2vSiqvNaNSzHXSpVV+5DT73qvlnr
VwfLSQ1uO+wjqPgZVMGo8CssZ8hLFu9OoWIs1PNTIwKwnJ256DqygIoIyru3
qurDch5NzqkqIir4NZWaMjAMlgvv2yykbaB8CesSff3hsFw8z5X98BfKXROx
l6pZC8sVpoM21v9QTvnbZbxDvLD8tTqOC0OJsi1eLPVy74fl75KGgwJ0KMvQ
5+1HETGw3JxMFXvIjDLteiZe+vAcljvJGwxnuFD63F+nxgi9sNzn8ZTquyBK
m+fQzP8gEJaHJzUack+iVHtUtQ5SZ2B58tzu0yBplDLuRB1FXCssz5aXajoq
ohQ37Rj+DpPG40Tcfumqo2Q+r2sHVUjrrcRKlomjyD9veb3HlvdheePPogeV
LvLHkq9gMkwTln8550jhjZC96CqnnuhfsPx3yGapzQzZpc+wVmYmByK5Fldu
gRWy1auUWCFQDESqD4PXIq8jG93Fd27jq4BIzxvH43oTWT/2I6b4SQ4QWcIM
h43dEGLXaH1SxTYQOXeonsvdQ/CrdlSH9P1A5B8eKhnWRZbEz+1xpJ4BomjV
q74nnMh8sf51j5YSIEqme26cxCOzgaZOVS42QDz9CJi6PiM/JKIKOjs5gahy
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  GridLines->{{0.527, {0.5298194922919984, 
      RGBColor[1, 0, 0]}}, {}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Comparison of \
\\!\\(\\*\\nStyleBox[\\\"measured\\\",\\nFontColor->RGBColor[0, 0, 1]]\\) and \
\\!\\(\\*\\nStyleBox[\\\"predicted\\\",\\nFontColor->RGBColor[1, 0, 0]]\\)\\!\
\\(\\*\\nStyleBox[\\\" \\\",\\nFontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*\\nStyleBox[\\\"means\\\",\\nFontColor->GrayLevel[0]]\\)\"", 
     FontFamily -> "Helvetica", FontSize -> 14, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{-1.081959315085775, 1.081959315085775}, {
    0, 14.602694519247166`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic},
  Ticks->{{{-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {0.5298194922919984, 
      FormBox["0.5298194922919984`", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}, {}}]], "Output",
 CellChangeTimes->{
  3.414022313027663*^9, {3.4140223527336397`*^9, 3.414022380103067*^9}, 
   3.4140224484228153`*^9, {3.414022524425234*^9, 3.414022546057156*^9}, 
   3.414023384861423*^9, 3.414023443018354*^9, 3.414026003541375*^9, 
   3.4140261270974417`*^9, 3.4140262344163427`*^9}]
}, Open  ]],

Cell["\<\
It is instructive to execute the preceding command repeatedly.\
\>", "Text",
 CellChangeTimes->{{3.414028807653013*^9, 3.4140288561936398`*^9}, 
   3.4141468089118347`*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.414028893050951*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bohm's realization of the EPR experiment.", "Subsection",
 CellChangeTimes->{{3.413909752489772*^9, 3.413909774176265*^9}}],

Cell[TextData[{
 "The original EPR paper (\"Can quantum-mechanical description of reality be \
considered complete?\", Phys. Rev. ",
 StyleBox["47",
  FontWeight->"Bold"],
 ", 777-780 (1935)) ran to not quite four pages, contained only 18 numbered \
equations, and spoke only in the broadest of terms about quantum mechanical \
particulars. Bohr's prompt \"refutation\" (same title, Phys. Rev. 48, 696-702 \
(1935)) contained no numbered equations, and adopted a language even farther \
removed from computational/observational particulars. The subject was first \
brought into sharp focus by David Bohm, in \[Section]\[Section] 15-19, \
Chapter 22 of his ",
 StyleBox["Quantum Theory",
  FontSlant->"Italic"],
 " (1951). It was Bohm who asked what might be the experience of Alice and \
Bob if they were to examine the widely separated components of a composite \
system assembled from a pair of spin one-half particles. I look here to the \
simulated particulars of the simplest of what have by now become a rich \
assortment of \"Alice & Bob experiments.\""
}], "Text",
 CellChangeTimes->{{3.413910418349862*^9, 3.41391056762325*^9}, {
  3.413910717751257*^9, 3.4139107277255487`*^9}, {3.413910768427249*^9, 
  3.413910893483482*^9}, {3.4139109806061*^9, 3.413910990125359*^9}, {
  3.413911041166498*^9, 3.4139110792160177`*^9}, {3.4139111122302713`*^9, 
  3.413911238558269*^9}, {3.413911282763588*^9, 3.413911408747736*^9}, {
  3.413911445569583*^9, 3.413911486719069*^9}, {3.413911603335965*^9, 
  3.4139116248629913`*^9}, {3.4139116733789062`*^9, 3.4139117153130703`*^9}, {
  3.414028929484185*^9, 3.414028931339419*^9}, {3.414146865460734*^9, 
  3.414146868000749*^9}}],

Cell["\<\
Imagine it to be the case that two 2-state systems, though now widely \
separated (one is in Alice's lab, the other in Bob's\[LongDash]far away), \
were born and remain components of a single composite system, the quantum \
state of which can be described as a Kronecker product\
\>", "Text",
 CellChangeTimes->{{3.413911764605568*^9, 3.4139117677575397`*^9}, {
  3.413911802123476*^9, 3.413911879068844*^9}, {3.41391192527594*^9, 
  3.413911971873042*^9}, {3.4140294683752193`*^9, 3.41402952190001*^9}, {
  3.414029552900959*^9, 3.414029561257868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["\[Alpha]", "1"]},
      {
       SubscriptBox["\[Alpha]", "2"]}
     }], ")"}], "\[CircleTimes]", 
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["\[Beta]", "1"]},
      {
       SubscriptBox["\[Beta]", "2"]}
     }], ")"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.413912015526752*^9, 3.413912059925995*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["\[Alpha]", "1"], " ", 
       SubscriptBox["\[Beta]", "1"]}]},
     {
      RowBox[{
       SubscriptBox["\[Alpha]", "1"], " ", 
       SubscriptBox["\[Beta]", "2"]}]},
     {
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], " ", 
       SubscriptBox["\[Beta]", "1"]}]},
     {
      RowBox[{
       SubscriptBox["\[Alpha]", "2"], " ", 
       SubscriptBox["\[Beta]", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.41391206243937*^9, 3.414007717100934*^9}]
}, Open  ]],

Cell[TextData[{
 "in disentangled cases, but must in the general case be considered to be \
entangled, ",
 StyleBox["i.e",
  FontSlant->"Italic"],
 "., to have the form ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      SubscriptBox["\[Psi]", "1"]},
     {
      SubscriptBox["\[Psi]", "2"]},
     {
      SubscriptBox["\[Psi]", "3"]},
     {
      SubscriptBox["\[Psi]", "4"]}
    }], ")"}]],
  CellChangeTimes->{{3.41391213205114*^9, 3.413912178183475*^9}}],
 "but to resist Kronecker-factorization."
}], "Text",
 CellChangeTimes->{{3.4139121005349903`*^9, 3.413912112960312*^9}, {
  3.413912206507276*^9, 3.413912221202198*^9}, {3.413912260952362*^9, 
  3.413912261415997*^9}, {3.41400773685014*^9, 3.414007756262025*^9}, {
  3.4140295394462423`*^9, 3.4140295415196667`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4139124297603807`*^9, 3.413912435989729*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Construction of a random 4-component state vector:", "Subsubtitle",
 CellChangeTimes->{{3.413912341463214*^9, 3.413912419751214*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Psi]", ",", "u", ",", "v", ",", "w", ",", "a", ",", "b", ",", "c"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.413912966473763*^9, 3.4139130027798843`*^9}}],

Cell[TextData[{
 "To construct a random instance of a complex 4-vector of unit length we can \
(if we agree to discard a quantum mechanically irrelevant over-all phase \
factor ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]], TraditionalForm]]],
 ") proceed"
}], "Text",
 CellChangeTimes->{{3.413912726714026*^9, 3.413912729194353*^9}, {
  3.413912780391337*^9, 3.4139127990061293`*^9}, {3.413912842547409*^9, 
  3.4139128961042957`*^9}, {3.414029590379191*^9, 3.414029603251738*^9}, {
  3.414029770417457*^9, 3.4140298188380632`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Psi]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"u_", ",", "v_", ",", "w_", ",", "a_", ",", "b_", ",", "c_"}], 
   "]"}], ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Cos", "[", "v", "]"}], 
       RowBox[{"Cos", "[", "w", "]"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "b"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Cos", "[", "v", "]"}], 
       RowBox[{"Sin", "[", "w", "]"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "c"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Sin", "[", "v", "]"}]}]},
     {
      RowBox[{"Sin", "[", "u", "]"}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"\[Psi]", "[", 
    RowBox[{
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.414029823667253*^9, 3.414029873099669*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "0.01903657106467396`"}], "+", 
       RowBox[{"0.032086130879527976`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.05534036951285069`"}], "-", 
       RowBox[{"0.04193837153732925`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.02917991759862893`"}], "+", 
       RowBox[{"0.023300506424593193`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"-", "0.9961888999941498`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.414029883331307*^9, 3.414029889088286*^9}}]
}, Open  ]],

Cell["\<\
We verify that the state just described does indeed have unit norm:\
\>", "Text",
 CellChangeTimes->{{3.413915323507284*^9, 3.413915360328652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "\[Psi]", "]"}], "]"}], ".", "\[Psi]"}], 
     ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
  "Chop"}]], "Input",
 CellChangeTimes->{{3.4139131428420677`*^9, 3.413913220422736*^9}, {
  3.4140299140348186`*^9, 3.414029921024706*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.413913173047489*^9, 3.4139132259911118`*^9}, 
   3.4139991925203*^9, 3.413999294659553*^9, 3.414007825620722*^9, 
   3.41402992647169*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.413915374708186*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Representation of Alice/Bob's measurement devices:", "Subsubtitle",
 CellChangeTimes->{{3.413915381099666*^9, 3.413915419748993*^9}}],

Cell[TextData[{
 "In 2-state theory, all measurement devices (\"meters\") can be represented \
by traceless 2\[Cross]2 hermitian matrices. All such matrices can be \
developed  ",
 Cell[BoxData[
  RowBox[{"\[DoubleStruckCapitalM]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["m", "1"], 
     SubscriptBox["\[Sigma]", "1"]}], "+", 
    RowBox[{
     SubscriptBox["m", "2"], 
     SubscriptBox["\[Sigma]", "2"]}], "+", 
    RowBox[{
     SubscriptBox["m", "3"], 
     SubscriptBox["\[Sigma]", "3"]}]}]}]],
  CellChangeTimes->{{3.413915881883904*^9, 3.413915936511941*^9}}],
 ", where"
}], "Text",
 CellChangeTimes->{{3.413915803808799*^9, 3.413915877032982*^9}, {
  3.413916123524922*^9, 3.4139161324586067`*^9}, {3.413916174462091*^9, 
  3.413916177545677*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalI]", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "1"], "=", 
   RowBox[{"(", GridBox[{
      {"0", "1"},
      {"1", "0"}
     }], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "2"], "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{"-", "\[ImaginaryI]"}]},
      {"\[ImaginaryI]", "0"}
     }], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "3"], "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.41348194709151*^9, 3.4135701491953983`*^9, {3.413746417166439*^9, 
   3.4137464656647873`*^9}, {3.413746514803623*^9, 3.413746516157897*^9}, {
   3.4137466524489803`*^9, 3.413746698539109*^9}, {3.413915967571025*^9, 
   3.413915971751753*^9}, {3.413916205173562*^9, 3.413916218896497*^9}}],

Cell[TextData[{
 "and ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      SubscriptBox["m", "1"]},
     {
      SubscriptBox["m", "2"]},
     {
      SubscriptBox["m", "3"]}
    }], ")"}]],
  CellChangeTimes->{{3.413915998639098*^9, 3.413916014024784*^9}}],
 " is a real 3-vector, and can without loss of generality be assumed to be a \
unit vector."
}], "Text",
 CellChangeTimes->{{3.413915988665949*^9, 3.413915990241856*^9}, {
  3.4139160263891478`*^9, 3.413916034215248*^9}, {3.413916078054397*^9, 
  3.413916093347664*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalM]", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["m", "1"], 
     SubscriptBox["\[Sigma]", "1"]}], "+", 
    RowBox[{
     SubscriptBox["m", "2"], 
     SubscriptBox["\[Sigma]", "2"]}], "+", 
    RowBox[{
     SubscriptBox["m", "3"], 
     SubscriptBox["\[Sigma]", "3"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalM]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.413916159443461*^9, 3.4139161832568417`*^9}, 
   3.413916258581048*^9, {3.4140299594700108`*^9, 3.4140299705177517`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["m", "3"], 
      RowBox[{
       SubscriptBox["m", "1"], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["m", "2"]}]}]},
     {
      RowBox[{
       SubscriptBox["m", "1"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["m", "2"]}]}], 
      RowBox[{"-", 
       SubscriptBox["m", "3"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4140299764979143`*^9}]
}, Open  ]],

Cell["The spectra of all such matrices are identical:", "Text",
 CellChangeTimes->{{3.4139163332492743`*^9, 3.413916343524218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", "\[DoubleStruckCapitalM]", "]"}], "/.", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["m", "1", "2"], "+", 
    SubsuperscriptBox["m", "2", "2"], "+", 
    SubsuperscriptBox["m", "3", "2"]}], "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.413916241106282*^9, 3.4139162482041817`*^9}, {
  3.413916292301162*^9, 3.413916311129218*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.413916250422737*^9, {3.4139162847063417`*^9, 3.4139163129107*^9}, 
   3.414007914260831*^9, 3.4140299918341293`*^9}]
}, Open  ]],

Cell[TextData[{
 "We will, for the purposes of the present discussion, ",
 StyleBox["assume that Alice and Bob are equipped with identical meters",
  FontVariations->{"Underline"->True}],
 ", identified by the vector  ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"0"},
     {"0"},
     {"1"}
    }], ")"}]],
  CellChangeTimes->{{3.41391651130783*^9, 3.413916533955072*^9}}],
 ":"
}], "Text",
 CellChangeTimes->{{3.413916379847419*^9, 3.413916419359614*^9}, {
  3.413916493288973*^9, 3.413916505018463*^9}, {3.413916545138932*^9, 
  3.413916564639942*^9}}],

Cell["\<\
Which is to say: both, when studying isolated/non-composite systems, use \
meters with the same matrix representation:\
\>", "Text",
 CellChangeTimes->{{3.414030543029385*^9, 3.414030614284114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckM]", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.413916577070167*^9, 3.413916609320766*^9}}],

Cell["\<\
But when Alice and Bob work as confederates in the study of composite pairs \
of 2-state systems the matrix representations of their respective  meters \
have to be adjusted, and become distinct:\
\>", "Text",
 CellChangeTimes->{{3.413916697967539*^9, 3.41391671203754*^9}, {
  3.413916811634465*^9, 3.413916849877199*^9}, {3.414030628888213*^9, 
  3.4140306662219973`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   RowBox[{
   "\[DoubleStruckM]", "\[CircleTimes]", "\[DoubleStruckCapitalI]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalB]", "=", 
   RowBox[{
   "\[DoubleStruckCapitalI]", "\[CircleTimes]", "\[DoubleStruckM]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.413916854741403*^9, 3.413916910611823*^9}}],

Cell["From", "Text",
 CellChangeTimes->{{3.413916992292983*^9, 3.413916992932164*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[DoubleStruckCapitalA]", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalB]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.4139169343570347`*^9, 3.4139169482164993`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.413916949331491*^9, 3.4140079383713903`*^9, 
  3.414030685589781*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.413916949331491*^9, 3.4140079383713903`*^9, 
  3.414030685746467*^9}]
}, Open  ]],

Cell[TextData[{
 "the spectra of Alice/Bob's meters become obvious: their meters continue to \
read \[PlusMinus]1, just as they did when used to study isolated 2-state \
systems. Also obvious are the following spectral resolutions ",
 Cell[BoxData[
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   RowBox[{
    SubscriptBox["\[DoubleStruckCapitalP]A", "+"], "-", 
    SubscriptBox["\[DoubleStruckCapitalP]A", "-"]}]}]],
  CellChangeTimes->{{3.41391803971238*^9, 3.41391819254909*^9}}],
 ", ",
 Cell[BoxData[
  RowBox[{"\[DoubleStruckCapitalB]", "=", 
   RowBox[{
    SubscriptBox["\[DoubleStruckCapitalP]B", "+"], "-", 
    SubscriptBox["\[DoubleStruckCapitalP]B", "-"]}]}]],
  CellChangeTimes->{{3.41391803971238*^9, 3.41391819254909*^9}}],
 " where the \[DoubleStruckCapitalP]-matrices project onto 2-dimensional \
subspaces of 4-space:"
}], "Text",
 CellChangeTimes->{{3.413917009986403*^9, 3.41391708465479*^9}, {
  3.413917993503172*^9, 3.413918018541389*^9}, {3.413918414448141*^9, 
  3.4139184768732233`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["PA", "+"], "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PA", "-"], "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", "1"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PB", "+"], "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["PB", "-"], "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "1"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]}], "Input",
 CellChangeTimes->{{3.4139182146539707`*^9, 3.413918381385607*^9}, {
  3.413918499874352*^9, 3.4139185413090267`*^9}, {3.413918983259347*^9, 
  3.413918998337634*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.413918544620192*^9, {3.4139190044895678`*^9, 3.413919012791967*^9}, 
   3.414007947663142*^9, 3.4140307208938913`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.413918544620192*^9, {3.4139190044895678`*^9, 3.413919012791967*^9}, 
   3.414007947663142*^9, 3.414030720992352*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.413918544620192*^9, {3.4139190044895678`*^9, 3.413919012791967*^9}, 
   3.414007947663142*^9, 3.414030721077814*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.413918544620192*^9, {3.4139190044895678`*^9, 3.413919012791967*^9}, 
   3.414007947663142*^9, 3.414030721160246*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.413917175693849*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experimental protocol:", "Subsubtitle",
 CellChangeTimes->{{3.413917180624991*^9, 3.413917187824498*^9}}],

Cell["\<\
The experimental set-up to be employed by Alice and Bob is diagrammed below:\
\>", "Text",
 CellChangeTimes->{{3.4139171985523643`*^9, 3.413917222322575*^9}, {
  3.414030736848425*^9, 3.414030761558764*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"+", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"+", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"+", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"3", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{
            RowBox[{"-", "3"}], "/", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"3", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"3", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{
            RowBox[{"-", "3"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{
            RowBox[{"-", "3"}], "/", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<p\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.1", ",", "0.5"}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<1-p\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.17", ",", 
        RowBox[{"-", "0.5"}]}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<q\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", "1.25"}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<1-q\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.17", ",", ".75"}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<r\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", 
        RowBox[{"-", ".75"}]}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<1-r\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.17", ",", 
        RowBox[{"-", "1.25"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<up up\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.3", ",", "1.50"}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<up dn\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.3", ",", "0.50"}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<dn up\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.3", ",", 
        RowBox[{"-", "0.50"}]}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<dn dn\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.3", ",", 
        RowBox[{"-", "1.50"}]}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<\[Psi]\>\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.13"}], ",", "0"}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Bohm's EPR Protocol\>\"", ",", " ", "Blue", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.413637538349887*^9, 3.413637547226012*^9}, 
   3.413637617087378*^9, {3.413637662529642*^9, 3.413637705685223*^9}, {
   3.413637753754814*^9, 3.413637755991803*^9}, {3.413637790995619*^9, 
   3.413637855105124*^9}, {3.413637898179089*^9, 3.413638164664483*^9}, {
   3.413638198866276*^9, 3.413638264532032*^9}, {3.413638302141829*^9, 
   3.41363830785117*^9}, {3.413638339236257*^9, 3.4136384152314587`*^9}, {
   3.4136385117325563`*^9, 3.4136385231764593`*^9}, {3.4136385558846416`*^9, 
   3.41363864513754*^9}, {3.41363869316455*^9, 3.413638724452886*^9}, {
   3.4136387579055357`*^9, 3.4136388025138206`*^9}, {3.413638853131144*^9, 
   3.4136389136121387`*^9}, {3.4136396387798443`*^9, 3.413639689499527*^9}, 
   3.4136397330626907`*^9, {3.4136399839110937`*^9, 3.413639989080943*^9}, {
   3.4136400267584543`*^9, 3.41364004869707*^9}, {3.413640091940304*^9, 
   3.413640111037648*^9}, {3.413640149087282*^9, 3.413640156646185*^9}, {
   3.4136401910128317`*^9, 3.413640195000134*^9}, {3.413640258298224*^9, 
   3.413640823248013*^9}, {3.413642338668324*^9, 3.4136424053911943`*^9}, {
   3.413917239715578*^9, 3.413917258363695*^9}, {3.413917341830743*^9, 
   3.413917349642231*^9}, {3.413917452863241*^9, 3.4139174542079687`*^9}, {
   3.413917484364935*^9, 3.41391749450484*^9}, {3.4140307880981503`*^9, 
   3.414030789849155*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Thickness[0.008], LineBox[{{0, 0}, {1, 0}}]}, 
   {RGBColor[1, 0, 0], Thickness[0.008], LineBox[{{1, -1}, {1, 1}}]}, 
   {Thickness[0.008], LineBox[{{1, 1}, {2, 1}}]}, 
   {Thickness[0.008], LineBox[{{1, -1}, {2, -1}}]}, 
   {RGBColor[0, 0, 1], Thickness[0.008], 
    LineBox[NCache[{{2, Rational[1, 2]}, {2, Rational[3, 2]}}, {{2, 0.5}, {
       2, 1.5}}]]}, 
   {RGBColor[0, 0, 1], Thickness[0.008], 
    LineBox[NCache[{{2, Rational[-1, 2]}, {2, Rational[-3, 2]}}, {{2, -0.5}, {
       2, -1.5}}]]}, 
   {Thickness[0.008], 
    LineBox[NCache[{{2, Rational[3, 2]}, {3, Rational[3, 2]}}, {{2, 1.5}, {
       3, 1.5}}]]}, 
   {Thickness[0.008], 
    LineBox[NCache[{{2, Rational[1, 2]}, {3, Rational[1, 2]}}, {{2, 0.5}, {
       3, 0.5}}]]}, 
   {Thickness[0.008], 
    LineBox[NCache[{{2, Rational[-1, 2]}, {3, Rational[-1, 2]}}, {{2, -0.5}, {
       3, -0.5}}]]}, 
   {Thickness[0.008], 
    LineBox[NCache[{{2, Rational[-3, 2]}, {3, Rational[-3, 2]}}, {{2, -1.5}, {
       3, -1.5}}]]}, InsetBox[
    StyleBox["\<\"p\"\>",
     StripOnInput->False,
     FontSize->12], {1.1, 0.5}], InsetBox[
    StyleBox["\<\"1-p\"\>",
     StripOnInput->False,
     FontSize->12], {1.17, -0.5}], InsetBox[
    StyleBox["\<\"q\"\>",
     StripOnInput->False,
     FontSize->12], {2.1, 1.25}], InsetBox[
    StyleBox["\<\"1-q\"\>",
     StripOnInput->False,
     FontSize->12], {2.17, 0.75}], InsetBox[
    StyleBox["\<\"r\"\>",
     StripOnInput->False,
     FontSize->12], {2.1, -0.75}], InsetBox[
    StyleBox["\<\"1-r\"\>",
     StripOnInput->False,
     FontSize->12], {2.17, -1.25}], InsetBox[
    StyleBox["\<\"up up\"\>",
     StripOnInput->False,
     FontSize->18], {3.3, 1.5}], InsetBox[
    StyleBox["\<\"up dn\"\>",
     StripOnInput->False,
     FontSize->18], {3.3, 0.5}], InsetBox[
    StyleBox["\<\"dn up\"\>",
     StripOnInput->False,
     FontSize->18], {3.3, -0.5}], InsetBox[
    StyleBox["\<\"dn dn\"\>",
     StripOnInput->False,
     FontSize->18], {3.3, -1.5}], InsetBox[
    StyleBox["\<\"\[Psi]\"\>",
     StripOnInput->False,
     FontSize->18], {-0.13, 0}]},
  PlotLabel->FormBox[
    StyleBox["\"Bohm's EPR Protocol\"", 
     RGBColor[0, 0, 1], FontFamily -> "Helvetica", FontSize -> 14, 
     StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{3.413917228518132*^9, 3.413917263702715*^9, 
  3.413917352868067*^9, 3.4139175053003883`*^9, 3.4140307951860037`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["REMARK",
  FontWeight->"Bold"],
 ": I will consider the {up, dn} and {+1, -1} notations to be equivalent.\n"
}], "Text",
 CellChangeTimes->{{3.413918633394473*^9, 3.413918693228755*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.413919872657447*^9, 3.413919882491891*^9}}],

Cell[TextData[{
 StyleBox["STAGE #1",
  FontSize->16,
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 ": The state ",
 Cell[BoxData[
  StyleBox["\[Psi]", "Input"]],
  CellChangeTimes->{{3.413917935401412*^9, 3.413917939262651*^9}}],
 " is presented to Alice. Her meter reads ",
 StyleBox["up", "Input"],
 " with probability "
}], "Text",
 CellChangeTimes->{{3.413917926382221*^9, 3.4139179641527967`*^9}, {
  3.4139186071227417`*^9, 3.413918612056821*^9}, {3.413918698956264*^9, 
  3.413918707403631*^9}, {3.413918864716095*^9, 3.413918864940125*^9}, {
  3.413919281892713*^9, 3.41391929307172*^9}, {3.4140308300835752`*^9, 
  3.414030831806815*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
       SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.413918722063055*^9, 3.4139187448660917`*^9}, {
  3.413918887152691*^9, 3.4139189227204638`*^9}, {3.414008070783586*^9, 
  3.4140080728633738`*^9}, {3.4140308526546183`*^9, 3.414030863514989*^9}}],

Cell[BoxData["0.006213294337740503`"], "Output",
 CellChangeTimes->{{3.4140080645071*^9, 3.414008077930437*^9}, 
   3.4140308718620663`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["and creates (which Alice ships on to Bob) the \
(normalized) state",
 FontSlant->"Plain"]], "Text",
 CellChangeTimes->{{3.413918760625113*^9, 3.413918769423181*^9}, {
  3.413919143112689*^9, 3.413919151175795*^9}, {3.413919200637582*^9, 
  3.4139192067804203`*^9}, {3.414030889483266*^9, 3.4140308930970573`*^9}},
 FontSlant->"Italic"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Au", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["PA", "+"], ".", "\[Psi]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Conjugate", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
          SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
    "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.413918777367381*^9, 3.413918803889655*^9}, {
   3.413918939933649*^9, 3.413918969174921*^9}, {3.413997760377865*^9, 
   3.413997762454093*^9}, 3.414008104136608*^9, {3.4140081571856537`*^9, 
   3.414008159089899*^9}, {3.414030912436561*^9, 3.414030919704699*^9}}],

Cell[TextData[{
 "Else (with probability ",
 StyleBox["1 - p", "Input"],
 ") it reads ",
 StyleBox["dn", "Input"],
 ", signifying that Alice's meter has created/shipped the state"
}], "Text",
 CellChangeTimes->{{3.413919062503408*^9, 3.413919103042594*^9}, {
  3.413919160439324*^9, 3.4139191639349194`*^9}, {3.414030949574861*^9, 
  3.414030976483203*^9}, {3.414031019923584*^9, 3.414031073980543*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ad", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["PA", "-"], ".", "\[Psi]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Conjugate", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             SubscriptBox["PA", "-"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
          SubscriptBox["PA", "-"], ".", "\[Psi]"}], ")"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
    "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.413919179876627*^9, 3.4139191915933*^9}, {
  3.4139977664459543`*^9, 3.4139977671178703`*^9}, {3.414008136349148*^9, 
  3.4140081645780478`*^9}, {3.4140311113264723`*^9, 3.414031117750578*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Au", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Ad", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.413919859328244*^9, 3.413919862965192*^9}, {
  3.4140081424183073`*^9, 3.41400814275786*^9}, {3.414008178071906*^9, 
  3.414008184800518*^9}, {3.414031138657219*^9, 3.41403114828321*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "0.2415059086534884`"}], "+", 
       RowBox[{"0.4070580866117694`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.7020710914279202`"}], "-", 
       RowBox[{"0.5320477354435661`", " ", "\[ImaginaryI]"}]}]},
     {"0"},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.414008144453582*^9, 3.414008188952173*^9, 3.414031092579131*^9, {
   3.414031126622198*^9, 3.4140311515748*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0"},
     {"0"},
     {
      RowBox[{
       RowBox[{"-", "0.029270993940549883`"}], "+", 
       RowBox[{"0.023373231951760456`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"-", "0.9992982042122669`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.414008144453582*^9, 3.414008188952173*^9, 3.414031092579131*^9, {
   3.414031126622198*^9, 3.4140311516927567`*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["STAGE #2",
  FontSize->16,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 ": If Bob receives ",
 Cell[BoxData[
  FormBox[
   StyleBox["Au", "Input"], TraditionalForm]]],
 " then his meter reads ",
 StyleBox["up", "Input"],
 " with probability "
}], "Text",
 CellChangeTimes->{{3.4139193163296757`*^9, 3.413919386089142*^9}, {
  3.414031164405402*^9, 3.414031166152789*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           SubscriptBox["PB", "+"], ".", "Au"}], "]"}], "]"}], ".", 
        SubscriptBox["PB", "+"], ".", "Au"}], ")"}], "\[LeftDoubleBracket]", 
      "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}], "//", "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.413919408023123*^9, 3.413919465397229*^9}, {
   3.413997778836485*^9, 3.41399778661963*^9}, 3.41400822410005*^9}],

Cell[TextData[{
 "else (with probability ",
 StyleBox["1 - q", "Input"],
 ") it reads ",
 StyleBox["dn", "Input"],
 ". If, on the other hand, Bob receives ",
 Cell[BoxData[
  FormBox[
   StyleBox["Ad", "Input"], TraditionalForm]]],
 " then his meter reads ",
 StyleBox["up", "Input"],
 " with probability "
}], "Text",
 CellChangeTimes->{{3.413919483141119*^9, 3.4139196029386044`*^9}, 
   3.413944403928899*^9, {3.414031183958946*^9, 3.414031195349695*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           SubscriptBox["PB", "+"], ".", "Ad"}], "]"}], "]"}], ".", 
        SubscriptBox["PB", "+"], ".", "Ad"}], ")"}], "\[LeftDoubleBracket]", 
      "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}], "//", "Chop"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4139196065632353`*^9, 3.4139196081974077`*^9}, {
   3.4139196477219267`*^9, 3.413919678298377*^9}, {3.413997792299603*^9, 
   3.413997797595117*^9}, 3.414008227350891*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"q", "\[IndentingNewLine]", "r"}], "Input",
 CellChangeTimes->{{3.4140082397365627`*^9, 3.414008240839367*^9}}],

Cell[BoxData["0.22402138979058184`"], "Output",
 CellChangeTimes->{3.414008241995133*^9, 3.414031261026729*^9}],

Cell[BoxData["0.0014030990581385039`"], "Output",
 CellChangeTimes->{3.414008241995133*^9, 3.414031261158573*^9}]
}, Open  ]],

Cell[TextData[{
 "else (with probability ",
 StyleBox["1 - r", "Input"],
 ") it reads ",
 StyleBox["dn", "Input"],
 ". We have no interest in the states prepared/exported by Bob's meter."
}], "Text",
 CellChangeTimes->{
  3.413919634645893*^9, {3.4139196893834753`*^9, 3.4139197125971823`*^9}, 
   3.413944423505431*^9, {3.414031237472103*^9, 3.414031239631563*^9}, {
   3.4141470852808437`*^9, 3.414147087084484*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.413919728614243*^9}],

Cell["\<\
From the figure we are led to the following doubly contingent construction, \
where 0 \[LessSlantEqual] x, y, z \[LessSlantEqual] 1 are understood to be \
independent random numbers. \
\>", "Text",
 CellChangeTimes->{{3.4139926475453*^9, 3.413992753814868*^9}, {
  3.4139944085760107`*^9, 3.413994413151067*^9}, {3.414031289285776*^9, 
  3.4140312979520407`*^9}}],

Cell[BoxData[
 RowBox[{"Which", "[", 
  RowBox[{
   RowBox[{"0", "\[LessSlantEqual]", "x", "<", "p"}], ",", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"0", "\[LessSlantEqual]", "y", "<", "q"}], ",", 
     RowBox[{"{", 
      RowBox[{"up", ",", "up"}], "}"}], ",", 
     RowBox[{"q", "\[LessSlantEqual]", "y", "\[LessSlantEqual]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"up", ",", "dn"}], "}"}]}], "]"}], ",", 
   RowBox[{"p", "\[LessSlantEqual]", "x", "\[LessSlantEqual]", "1"}], ",", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"0", "\[LessSlantEqual]", "z", "<", "r"}], ",", 
     RowBox[{"{", 
      RowBox[{"dn", ",", "up"}], "}"}], ",", 
     RowBox[{"r", "\[LessSlantEqual]", "z", "\[LessSlantEqual]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"dn", ",", "up"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4139207939726467`*^9, 3.41392092115344*^9}, {
   3.413944453759989*^9, 3.413944460074357*^9}, 3.4139926332506*^9, 
   3.413994393024835*^9}],

Cell["\<\
 The values assumed by the probabilities p, q, r are contingent only upon the \
value assigned to the state \[Psi] that has been presented to Alice. \
\>", "Text",
 CellChangeTimes->{{3.413992802109586*^9, 3.413992887827539*^9}, 
   3.413994425156247*^9, {3.4139944997812147`*^9, 3.413994545676078*^9}, 
   3.414031315816328*^9, {3.414031346638299*^9, 3.414031409444614*^9}, 
   3.4140316075130997`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AliceBobProtocol", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"0", "\[LessSlantEqual]", "x", "<", "p"}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"0", "\[LessSlantEqual]", "y", "<", "q"}], ",", "upup", ",", 
      RowBox[{"q", "\[LessSlantEqual]", "y", "\[LessSlantEqual]", "1"}], ",", 
      "updn"}], "]"}], ",", 
    RowBox[{"p", "\[LessSlantEqual]", "x", "\[LessSlantEqual]", "1"}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"0", "\[LessSlantEqual]", "z", "<", "r"}], ",", "dnup", ",", 
      RowBox[{"r", "\[LessSlantEqual]", "z", "\[LessSlantEqual]", "1"}], ",", 
      "dndn"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.414031714663007*^9, 3.414031716845861*^9}, {
   3.414031766195657*^9, 3.414031783956246*^9}, 3.414032671486292*^9, {
   3.414033128397004*^9, 3.414033130755932*^9}}],

Cell["\<\
The following table records the results obtained from 1000 repetitions of the \
experiment:\
\>", "Text",
 CellChangeTimes->{{3.413995088835088*^9, 3.413995145294053*^9}, 
   3.414147122791374*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AliceBobResults", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"AliceBobProtocol", "[", 
     RowBox[{
      RowBox[{"Random", "[", "]"}], ",", 
      RowBox[{"Random", "[", "]"}], ",", 
      RowBox[{"Random", "[", "]"}], ",", "\[Psi]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.413994261290807*^9, 3.4139942820112534`*^9}, {
   3.4139951604165697`*^9, 3.4139951957900267`*^9}, {3.414031726726536*^9, 
   3.4140317284091253`*^9}, 3.414033142800353*^9, {3.414033178449822*^9, 
   3.414033182238817*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "upup", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "upup", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "upup", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "updn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "updn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "upup", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "upup", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "upup", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "upup", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "upup", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "updn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "upup", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "updn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "updn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "upup", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "upup", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "upup", ",", "updn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "updn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "updn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "updn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "upup", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "updn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "upup", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "upup", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "updn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", 
   "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn", 
   ",", "dndn", ",", "dndn", ",", "dndn", ",", "dndn"}], "}"}]], "Output",
 CellChangeTimes->{3.413995211327478*^9, 3.4139992473312798`*^9, 
  3.4139993585322866`*^9, 3.414008441143592*^9, 3.414031693018999*^9, 
  3.414031738461842*^9, 3.4140317951459208`*^9, 3.414032683384632*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.413995260009163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Statistical analysis of such data", "Subsubtitle",
 CellChangeTimes->{{3.4139952649053097`*^9, 3.41399527827783*^9}, 
   3.413995679879801*^9}],

Cell["We assemble the raw data", "Text",
 CellChangeTimes->{{3.413995691574641*^9, 3.413995697747726*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Count", "[", 
  RowBox[{"AliceBobResults", ",", "upup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"AliceBobResults", ",", "updn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"AliceBobResults", ",", "dnup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"AliceBobResults", ",", "dndn"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4139952948808517`*^9, 3.4139953441886063`*^9}, {
  3.414033199772389*^9, 3.4140332092667427`*^9}}],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.413995314074139*^9, 3.41399535110876*^9, 
  3.4139992582522287`*^9, 3.413999369209092*^9, 3.4140084723620367`*^9, 
  3.414031835131833*^9, 3.414032691898758*^9}],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{3.413995314074139*^9, 3.41399535110876*^9, 
  3.4139992582522287`*^9, 3.413999369209092*^9, 3.4140084723620367`*^9, 
  3.414031835131833*^9, 3.4140326920281143`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.413995314074139*^9, 3.41399535110876*^9, 
  3.4139992582522287`*^9, 3.413999369209092*^9, 3.4140084723620367`*^9, 
  3.414031835131833*^9, 3.414032692044074*^9}],

Cell[BoxData["974"], "Output",
 CellChangeTimes->{3.413995314074139*^9, 3.41399535110876*^9, 
  3.4139992582522287`*^9, 3.413999369209092*^9, 3.4140084723620367`*^9, 
  3.414031835131833*^9, 3.4140326920604*^9}]
}, Open  ]],

Cell["and, to check the accuracy of the numbers, compute", "Text",
 CellChangeTimes->{{3.413995712257533*^9, 3.41399576016811*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Count", "[", 
   RowBox[{"AliceBobResults", ",", "upup"}], "]"}], "+", 
  RowBox[{"Count", "[", 
   RowBox[{"AliceBobResults", ",", "updn"}], "]"}], "+", 
  RowBox[{"Count", "[", 
   RowBox[{"AliceBobResults", ",", "dnup"}], "]"}], "+", 
  RowBox[{"Count", "[", 
   RowBox[{"AliceBobResults", ",", "dndn"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4139954551358557`*^9, 3.413995473756898*^9}, {
  3.414033220847186*^9, 3.414033244362863*^9}}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{3.4139954761881027`*^9, 3.4139993769768047`*^9, 
  3.4140084833602743`*^9, 3.414031852584422*^9, 3.414032700129813*^9}]
}, Open  ]],

Cell[TextData[{
 "Interpreting ",
 StyleBox["frequency",
  FontSlant->"Italic"],
 " of occurance to provide an estimate of the ",
 StyleBox["probability",
  FontSlant->"Italic"],
 " of occurance, we construct"
}], "Text",
 CellChangeTimes->{{3.4139957830844*^9, 3.4139958376594276`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["P", "upup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "upup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "updn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "updn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dnup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dnup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dndn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dndn"}], "]"}], "1000"], "//", 
   "N"}]}]}], "Input",
 CellChangeTimes->{{3.4139953678767357`*^9, 3.4139954375925617`*^9}, {
  3.413995490513185*^9, 3.413995500714796*^9}, {3.413996378503932*^9, 
  3.413996402360394*^9}, {3.4140332569901667`*^9, 3.414033267969552*^9}}],

Cell[BoxData["0.015`"], "Output",
 CellChangeTimes->{
  3.4139955069626017`*^9, {3.4139963846941*^9, 3.413996406701522*^9}, 
   3.413999387084614*^9, 3.414008495471047*^9, 3.414031868414749*^9, 
   3.414032704060404*^9}],

Cell[BoxData["0.011`"], "Output",
 CellChangeTimes->{
  3.4139955069626017`*^9, {3.4139963846941*^9, 3.413996406701522*^9}, 
   3.413999387084614*^9, 3.414008495471047*^9, 3.414031868414749*^9, 
   3.414032704178361*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.4139955069626017`*^9, {3.4139963846941*^9, 3.413996406701522*^9}, 
   3.413999387084614*^9, 3.414008495471047*^9, 3.414031868414749*^9, 
   3.414032704287813*^9}],

Cell[BoxData["0.974`"], "Output",
 CellChangeTimes->{
  3.4139955069626017`*^9, {3.4139963846941*^9, 3.413996406701522*^9}, 
   3.413999387084614*^9, 3.414008495471047*^9, 3.414031868414749*^9, 
   3.414032704351818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["P", "upup"], "+", 
  SubscriptBox["P", "updn"], "+", 
  SubscriptBox["P", "dnup"], "+", 
  SubscriptBox["P", "dndn"]}]], "Input",
 CellChangeTimes->{{3.413995520914784*^9, 3.413995540928362*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.4139955456420717`*^9, 3.413996393004908*^9, 
  3.4139993929666843`*^9, 3.414008500699037*^9, 3.414031874777258*^9, 
  3.414032709734147*^9}]
}, Open  ]],

Cell["\<\
We have interest in the degree to which Alice's/Bob's meter readings are \
correlated.  If x and y are (possibly interdependent) random variables, then \
Pearson's correlation coefficient \
\>", "Text",
 CellChangeTimes->{{3.4139964176161957`*^9, 3.413996443348876*^9}, {
  3.413996606634013*^9, 3.413996616594376*^9}, {3.413996692525607*^9, 
  3.413996697497703*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Correlation Coefficient\>\"", ",", 
   "\"\<http://www.vias.org/tmdatanaleng/cc_corr_coeff.html\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.413593436342058*^9, 3.4135934703802023`*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"\<\"Correlation Coefficient\"\>", True->
    StyleBox["\<\"Correlation Coefficient\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaselinePosition->Baseline,
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://www.vias.org/tmdatanaleng/cc_corr_coeff.html"], None},
   ButtonNote->"http://www.vias.org/tmdatanaleng/cc_corr_coeff.html"],
  Annotation[#, "http://www.vias.org/tmdatanaleng/cc_corr_coeff.html", 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.413593476375641*^9}]
}, Open  ]],

Cell["is defined", "Text",
 CellChangeTimes->{{3.4139966424542227`*^9, 3.413996644208363*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"average", " ", "of", " ", "product"}], "-", 
   RowBox[{"product", " ", "of", " ", "averages"}]}], 
  SqrtBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       SuperscriptBox["x", "2"], "\[RightAngleBracket]"}], "-", 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", "x", "\[RightAngleBracket]"}], "2"]}], 
     ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       SuperscriptBox["y", "2"], "\[RightAngleBracket]"}], "-", 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", "y", "\[RightAngleBracket]"}], "2"]}], 
     ")"}]}]]]], "Input",
 CellChangeTimes->{{3.4137328353492823`*^9, 3.4137330008000593`*^9}, {
  3.4139972576947107`*^9, 3.41399728613307*^9}}],

Cell[TextData[{
 "In the present context, we interpret ",
 StyleBox["updn", "Input"],
 " to mean ",
 StyleBox["(+1)(-1)", "Input"],
 ", etc., and so arrive at the construction"
}], "Text",
 CellChangeTimes->{{3.413996788364633*^9, 3.413996842292495*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CorrelationCoefficient", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "w_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "w"}], ")"}], "-", 
       RowBox[{"(", 
        RowBox[{"y", "+", "z"}], ")"}]}], ")"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "+", "y"}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{"z", "+", "w"}], ")"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "+", "z"}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{"y", "+", "w"}], ")"}]}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "+", "y"}], ")"}], "-", 
           RowBox[{"(", 
            RowBox[{"z", "+", "w"}], ")"}]}], ")"}], "2"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "+", "z"}], ")"}], "-", 
           RowBox[{"(", 
            RowBox[{"y", "+", "w"}], ")"}]}], ")"}], "2"]}], ")"}]}]], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.41399686034186*^9, 3.4139971683845463`*^9}, {
  3.413997269722312*^9, 3.413997295487273*^9}, {3.413998478680283*^9, 
  3.413998552545269*^9}, {3.413998704589903*^9, 3.413998848679727*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CorrelationCoefficient", "[", 
  RowBox[{
   SubscriptBox["P", "upup"], ",", 
   SubscriptBox["P", "updn"], ",", 
   SubscriptBox["P", "dnup"], ",", 
   SubscriptBox["P", "dndn"]}], "]"}]], "Input"],

Cell[BoxData["0.7553014505084574`"], "Output",
 CellChangeTimes->{3.413999447850312*^9, 3.414008520892333*^9, 
  3.414031916641191*^9, 3.414032719720751*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.413997992792632*^9, 3.414033032862638*^9}],

Cell["\<\
Here I again conflate all relevant constructions/commands, so as to make it \
possible to simulate a run of 1000 Alice/Bob experiments with a single \
keystroke:\
\>", "Text",
 CellChangeTimes->{{3.414033538261136*^9, 3.41403364889467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Psi]", ",", "p", ",", "q", ",", "r", ",", " ", "Au", ",", " ", "Ad"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"u_", ",", "v_", ",", "w_", ",", "a_", ",", "b_", ",", "c_"}], 
   "]"}], ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Cos", "[", "v", "]"}], 
       RowBox[{"Cos", "[", "w", "]"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "b"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Cos", "[", "v", "]"}], 
       RowBox[{"Sin", "[", "w", "]"}]}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "c"}]], 
       RowBox[{"Cos", "[", "u", "]"}], 
       RowBox[{"Sin", "[", "v", "]"}]}]},
     {
      RowBox[{"Sin", "[", "u", "]"}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"\[Psi]", "[", 
    RowBox[{
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
       SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Au", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "+"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Ad", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "-"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "-"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "-"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"q", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Au"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Au"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"r", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Ad"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Ad"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AliceBobResults", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AliceBobProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "upup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "upup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "updn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "updn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dnup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dnup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dndn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dndn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"CorrelationCoefficient", "[", 
  RowBox[{
   SubscriptBox["P", "upup"], ",", 
   SubscriptBox["P", "updn"], ",", 
   SubscriptBox["P", "dnup"], ",", 
   SubscriptBox["P", "dndn"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.414031948215074*^9, 3.414032001631009*^9}, {
   3.414032827532874*^9, 3.414032895716659*^9}, {3.414033289176839*^9, 
   3.414033319747389*^9}, 3.414033427399625*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "0.30800105102588554`"}], "+", 
       RowBox[{"0.6487929271941298`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.16815685050346005`"}], "-", 
       RowBox[{"0.5093431753522678`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.29001315107481557`"}], "+", 
       RowBox[{"0.272867343454111`", " ", "\[ImaginaryI]"}]}]},
     {"0.1947605674170235`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.414033433874004*^9}],

Cell[BoxData["0.8035041064593516`"], "Output",
 CellChangeTimes->{3.4140334339821997`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3436039503337596`"}], "+", 
     RowBox[{"0.723789129907127`", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1875946783824979`"}], "-", 
     RowBox[{"0.5682199023141364`", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414033434061438*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6542458141398658`"}], "+", 
     RowBox[{"0.6155662824554577`", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", "0.4393638202952442`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414033434126461*^9}],

Cell[BoxData["0.6419343792566806`"], "Output",
 CellChangeTimes->{3.41403343419433*^9}],

Cell[BoxData["0.8069594334155683`"], "Output",
 CellChangeTimes->{3.4140334342943163`*^9}],

Cell[BoxData["0.513`"], "Output",
 CellChangeTimes->{3.4140334343603487`*^9}],

Cell[BoxData["0.282`"], "Output",
 CellChangeTimes->{3.414033434413044*^9}],

Cell[BoxData["0.171`"], "Output",
 CellChangeTimes->{3.41403343448416*^9}],

Cell[BoxData["0.034`"], "Output",
 CellChangeTimes->{3.414033434544486*^9}],

Cell[BoxData[
 RowBox[{"-", "0.16399723597544436`"}]], "Output",
 CellChangeTimes->{3.4140334346135817`*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.414067968930036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Special case: input state fully disentangled", "Subsubtitle",
 CellChangeTimes->{{3.414068028084577*^9, 3.4140680450238543`*^9}}],

Cell["\<\
The following command constructs at random a fully disentangled composite \
state and confirms its normalization:\
\>", "Text",
 CellChangeTimes->{{3.414070450051429*^9, 3.414070478690372*^9}, {
  3.414070533493135*^9, 3.414070560083879*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"disentangled", "[", 
   RowBox[{"u_", ",", "a_", ",", "v_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "a"}]], 
        RowBox[{"Cos", "[", "u", "]"}]}]},
      {
       RowBox[{"Sin", "[", "u", "]"}]}
     }], "\[NoBreak]", ")"}], "\[CircleTimes]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b"}]], 
        RowBox[{"Cos", "[", "v", "]"}]}]},
      {
       RowBox[{"Sin", "[", "v", "]"}]}
     }], "\[NoBreak]", ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"disentangled", "[", 
    RowBox[{
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "%", "]"}], "]"}], ".", "%"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
  "Chop"}]}], "Input",
 CellChangeTimes->{{3.414068077944532*^9, 3.414068095804097*^9}, {
  3.4140681361126347`*^9, 3.4140682158556423`*^9}, {3.414070382028626*^9, 
  3.414070415308687*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "0.5942616623081312`"}], "+", 
       RowBox[{"0.24407114171658043`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.36440455784447395`", "\[InvisibleSpace]", "+", 
       RowBox[{"0.47301070550320934`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.09273806571088052`", "\[InvisibleSpace]", "-", 
       RowBox[{"0.33941612661120824`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"-", "0.32703041044820275`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.414070424335371*^9, 3.4140704282192383`*^9}}],

Cell[BoxData["1.0000000000000002`"], "Output",
 CellChangeTimes->{{3.414070424335371*^9, 3.4140704283615713`*^9}}]
}, Open  ]],

Cell["\<\
The following command simulates the Alice/Bob data that would be generated if \
such a disentangled state were admitted as input:\
\>", "Text",
 CellChangeTimes->{{3.414070603593095*^9, 3.414070676725464*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Psi]", ",", "p", ",", "q", ",", "r", ",", " ", "Au", ",", " ", "Ad"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"disentangled", "[", 
   RowBox[{"u_", ",", "a_", ",", "v_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "a"}]], 
        RowBox[{"Cos", "[", "u", "]"}]}]},
      {
       RowBox[{"Sin", "[", "u", "]"}]}
     }], "\[NoBreak]", ")"}], "\[CircleTimes]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b"}]], 
        RowBox[{"Cos", "[", "v", "]"}]}]},
      {
       RowBox[{"Sin", "[", "v", "]"}]}
     }], "\[NoBreak]", ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"disentangled", "[", 
    RowBox[{
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
       SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Au", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "+"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Ad", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "-"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "-"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "-"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"q", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Au"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Au"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"r", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Ad"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Ad"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AliceBobResults", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AliceBobProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "upup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "upup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "updn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "updn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dnup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dnup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dndn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dndn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"CorrelationCoefficient", "[", 
  RowBox[{
   SubscriptBox["P", "upup"], ",", 
   SubscriptBox["P", "updn"], ",", 
   SubscriptBox["P", "dnup"], ",", 
   SubscriptBox["P", "dndn"]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4140687237262383`*^9, 3.41406877991549*^9}, {
  3.414068816905957*^9, 3.414068837660582*^9}, {3.414069226028016*^9, 
  3.414069236453623*^9}, {3.414070268243297*^9, 3.4140702939360933`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.02188833373245508`", "\[InvisibleSpace]", "+", 
       RowBox[{"0.29114470610427`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.3948315698017567`", "\[InvisibleSpace]", "-", 
       RowBox[{"0.059768569817424955`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.03853544335649333`", "\[InvisibleSpace]", "-", 
       RowBox[{"0.5114890975894179`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"-", "0.7015592157161195`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.41407069259763*^9}}],

Cell[BoxData["0.24470858949626498`"], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.414070692774233*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.044247434488091784`", "\[InvisibleSpace]", "+", 
     RowBox[{"0.5885512559963368`", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7981550460704775`", "\[InvisibleSpace]", "-", 
     RowBox[{"0.12082262221368377`", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.414070692795377*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.04434075535082645`", "\[InvisibleSpace]", "-", 
     RowBox[{"0.5885442326695266`", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.807248154910469`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.414070692832532*^9}}],

Cell[BoxData["0.3483504163936436`"], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.41407069284901*^9}}],

Cell[BoxData["0.3483504163936437`"], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.414070692864688*^9}}],

Cell[BoxData["0.088`"], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.4140706928826323`*^9}}],

Cell[BoxData["0.16`"], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.41407069289898*^9}}],

Cell[BoxData["0.253`"], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.414070692914068*^9}}],

Cell[BoxData["0.499`"], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.414070692929241*^9}}],

Cell[BoxData["0.01676457784117901`"], "Output",
 CellChangeTimes->{
  3.41406861371947*^9, 3.4140688469034567`*^9, 3.414069245889889*^9, {
   3.414070120074892*^9, 3.414070148497486*^9}, {3.4140702995557327`*^9, 
   3.4140703138628807`*^9}, {3.414070684709324*^9, 3.414070692945011*^9}}]
}, Open  ]],

Cell["\<\
It will be noticed the correlation coefficient turns out, on each repetition, \
to be quite small (typically of the order 0.01). The implication\[LongDash]as \
sharp as a finite data set can make it\[LongDash]is that Alice's and Bob's \
meter readings become statistically independent when the input state \[Psi] \
is disentangled.\
\>", "Text",
 CellChangeTimes->{{3.414071219976956*^9, 3.4140714445837393`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4140693174548492`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Special case: input state maximally entangled\[LongDash]\"spooky action at a \
distance\"\
\>", "Subsubtitle",
 CellChangeTimes->{{3.414069332345134*^9, 3.414069350644676*^9}, {
  3.414072856361643*^9, 3.4140728743295803`*^9}}],

Cell[TextData[{
 "Bohm supposed our reference to \"2-state systems\" to be a reference \
specifically to particles with spin ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]]],
 ". The quantum theory of such particles is embedded in the larger quantum \
theory of angular momentum, in which, for natural reasons, the \"singlet \
state\"  ",
 Cell[BoxData[
  StyleBox[
   FractionBox[
    RowBox[{"\[ShortUpArrow]", "\[ShortDownArrow]", 
     RowBox[{"-", 
      RowBox[{"\[ShortDownArrow]", "\[ShortUpArrow]"}]}]}], 
    SqrtBox["2"]], "Output"]],
  CellChangeTimes->{{3.414072370034747*^9, 3.4140724754832172`*^9}, {
   3.414072524648858*^9, 3.414072555054247*^9}}],
 " plays a prominent role. From"
}], "Text",
 CellChangeTimes->{{3.414072014291863*^9, 3.414072015697853*^9}, {
  3.414072088619228*^9, 3.414072226845127*^9}, {3.4140722875181093`*^9, 
  3.414072326334441*^9}, {3.414072570880508*^9, 3.414072579982025*^9}, {
  3.414072618796763*^9, 3.4140726195473413`*^9}, {3.4140728955196238`*^9, 
  3.414072900561379*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"UP", "=", 
   RowBox[{"(", GridBox[{
      {"1"},
      {"0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DN", "=", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"1"}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4135809126554127`*^9, 3.4135809523830967`*^9}}],

Cell["one constructs the so-called \"Bell states\"", "Text",
 CellChangeTimes->{{3.414072646403061*^9, 3.414072667052286*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Bell1", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"UP", "\[CircleTimes]", "UP"}], "+", 
    RowBox[{"DN", "\[CircleTimes]", "DN"}]}], 
   SqrtBox["2"]]}], "\[IndentingNewLine]", 
 RowBox[{"Bell2", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"UP", "\[CircleTimes]", "UP"}], "-", 
    RowBox[{"DN", "\[CircleTimes]", "DN"}]}], 
   SqrtBox["2"]]}], "\n", 
 RowBox[{"Bell3", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"UP", "\[CircleTimes]", "DN"}], "+", 
    RowBox[{"DN", "\[CircleTimes]", "UP"}]}], 
   SqrtBox["2"]]}], "\n", 
 RowBox[{"Bell4", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"UP", "\[CircleTimes]", "DN"}], "-", 
    RowBox[{"DN", "\[CircleTimes]", "UP"}]}], 
   SqrtBox["2"]]}]}], "Input",
 CellChangeTimes->{{3.413580681887218*^9, 3.413580751197649*^9}, {
  3.413580826198537*^9, 3.4135809083698063`*^9}, {3.414073099723564*^9, 
  3.414073105016508*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4140731093134203`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073109327046*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073109343789*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073109360202*^9}]
}, Open  ]],

Cell["\<\
which are distinguished for reasons having nothing specifically to do with \
angular momentum, but by the fact that they are (in a sense that I will not \
attempt here to make precise) \"maximally entangled.\" Evidently \"4th Bell \
state\" and  \"singlet state\"  refer to the same 4-dimensional object.

Suppose the state presented to Alice is the 1st Bell state. We then have \
\>", "Text",
 CellChangeTimes->{{3.414072710599098*^9, 3.414072789102675*^9}, 
   3.4140728195187883`*^9, {3.4140729332495403`*^9, 3.414073002778021*^9}, {
   3.414073034247176*^9, 3.4140730741334057`*^9}, {3.414147301252441*^9, 
   3.414147303151366*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Psi]", ",", "p", ",", "q", ",", "r", ",", " ", "Au", ",", " ", "Ad"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "=", "Bell1"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
       SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Au", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "+"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Ad", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "-"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "-"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "-"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"q", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Au"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Au"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"r", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Ad"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Ad"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AliceBobResults", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AliceBobProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "upup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "upup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "updn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "updn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dnup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dnup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dndn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dndn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"CorrelationCoefficient", "[", 
  RowBox[{
   SubscriptBox["P", "upup"], ",", 
   SubscriptBox["P", "updn"], ",", 
   SubscriptBox["P", "dnup"], ",", 
   SubscriptBox["P", "dndn"]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.414069399641423*^9, 3.414069460732708*^9}, {
  3.414073145195723*^9, 3.4140731473444633`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.414073156714465*^9}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.414073156853903*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.414073156905553*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.414073156954824*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.4140731570048656`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.414073157055732*^9}],

Cell[BoxData["0.465`"], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.414073157119438*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.4140731571887417`*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.414073157239429*^9}],

Cell[BoxData["0.535`"], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.414073157288615*^9}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.4140694721801653`*^9, {3.4140695475635366`*^9, 3.4140695568859377`*^9}, 
   3.414070236666348*^9, 3.4140731573389397`*^9}]
}, Open  ]],

Cell[TextData[{
 "We see that ",
 StyleBox["updn", "Input"],
 " and ",
 StyleBox["dnup", "Input"],
 "  meter readings ",
 StyleBox["never",
  FontSlant->"Italic"],
 " appear. Though Bob's lab was arbitrarily distant from Alice's, when they \
compare data at the end of the day they find that their data is perfectly \
correlated: Alice's meter read ",
 StyleBox["up", "Input"],
 " and ",
 StyleBox["dn", "Input"],
 " with roughly equal frequency, but each time her meter read ",
 StyleBox["up", "Input"],
 " (else ",
 StyleBox["dn", "Input"],
 "), do did Bob's. Presentation of Bell2 to Alice leads to a similar \
situation:"
}], "Text",
 CellChangeTimes->{{3.4140731878748493`*^9, 3.414073211612603*^9}, {
  3.414073276110084*^9, 3.414073442969028*^9}, {3.4140735350903797`*^9, 
  3.414073550209793*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Psi]", ",", "p", ",", "q", ",", "r", ",", " ", "Au", ",", " ", "Ad"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "=", "Bell2"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
       SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Au", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "+"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Ad", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "-"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "-"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "-"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"q", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Au"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Au"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"r", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Ad"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Ad"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AliceBobResults", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AliceBobProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "upup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "upup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "updn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "updn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dnup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dnup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dndn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dndn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"CorrelationCoefficient", "[", 
  RowBox[{
   SubscriptBox["P", "upup"], ",", 
   SubscriptBox["P", "updn"], ",", 
   SubscriptBox["P", "dnup"], ",", 
   SubscriptBox["P", "dndn"]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.414069399641423*^9, 3.414069460732708*^9}, {
   3.414073145195723*^9, 3.4140731473444633`*^9}, 3.414073573954363*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073578427034*^9}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.4140735785502787`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073578646216*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073578695414*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.414073578746552*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.414073578797083*^9}],

Cell[BoxData["0.49`"], "Output",
 CellChangeTimes->{3.414073578862802*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.414073578929008*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.414073578978701*^9}],

Cell[BoxData["0.51`"], "Output",
 CellChangeTimes->{3.414073579028946*^9}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.4140735790795193`*^9}]
}, Open  ]],

Cell[TextData[{
 "while Bell3 and Bell4 lead to perfectly ",
 StyleBox["anti",
  FontSlant->"Italic"],
 "correlated data sets:"
}], "Text",
 CellChangeTimes->{{3.414073605612616*^9, 3.4140736312907753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Psi]", ",", "p", ",", "q", ",", "r", ",", " ", "Au", ",", " ", "Ad"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "=", "Bell3"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
       SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Au", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "+"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Ad", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "-"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "-"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "-"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"q", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Au"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Au"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"r", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Ad"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Ad"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AliceBobResults", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AliceBobProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "upup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "upup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "updn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "updn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dnup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dnup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dndn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dndn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"CorrelationCoefficient", "[", 
  RowBox[{
   SubscriptBox["P", "upup"], ",", 
   SubscriptBox["P", "updn"], ",", 
   SubscriptBox["P", "dnup"], ",", 
   SubscriptBox["P", "dndn"]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.414069399641423*^9, 3.414069460732708*^9}, {
   3.414073145195723*^9, 3.4140731473444633`*^9}, 3.4140736451105556`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073649238171*^9}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.414073649353778*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073649436078*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4140736494865627`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.414073649535684*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.414073649586361*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.4140736496503*^9}],

Cell[BoxData["0.464`"], "Output",
 CellChangeTimes->{3.414073649719041*^9}],

Cell[BoxData["0.536`"], "Output",
 CellChangeTimes->{3.414073649766794*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.414073649818935*^9}],

Cell[BoxData[
 RowBox[{"-", "1.`"}]], "Output",
 CellChangeTimes->{3.4140736498693647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Psi]", ",", "p", ",", "q", ",", "r", ",", " ", "Au", ",", " ", "Ad"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "=", "Bell4"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
       SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Au", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "+"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "+"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "+"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"Ad", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox["PA", "-"], ".", "\[Psi]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Conjugate", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            SubscriptBox["PA", "-"], ".", "\[Psi]"}], "]"}], "]"}], ".", 
         SubscriptBox["PA", "-"], ".", "\[Psi]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"q", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Au"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Au"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"r", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          SubscriptBox["PB", "+"], ".", "Ad"}], "]"}], "]"}], ".", 
       SubscriptBox["PB", "+"], ".", "Ad"}], ")"}], "\[LeftDoubleBracket]", 
     "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "//", "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AliceBobResults", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"AliceBobProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "upup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "upup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "updn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "updn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dnup"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dnup"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "dndn"], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{"AliceBobResults", ",", "dndn"}], "]"}], "1000"], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{"CorrelationCoefficient", "[", 
  RowBox[{
   SubscriptBox["P", "upup"], ",", 
   SubscriptBox["P", "updn"], ",", 
   SubscriptBox["P", "dnup"], ",", 
   SubscriptBox["P", "dndn"]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.414069399641423*^9, 3.414069460732708*^9}, {
   3.414073145195723*^9, 3.4140731473444633`*^9}, 3.414073659292161*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073667818569*^9}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.414073667892363*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073668009377*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1"}], "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414073668058627*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.414073668108124*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.414073668158269*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.414073668221669*^9}],

Cell[BoxData["0.46`"], "Output",
 CellChangeTimes->{3.4140736682914543`*^9}],

Cell[BoxData["0.54`"], "Output",
 CellChangeTimes->{3.414073668342379*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.414073668391819*^9}],

Cell[BoxData[
 RowBox[{"-", "1.`"}]], "Output",
 CellChangeTimes->{3.414073668442659*^9}]
}, Open  ]],

Cell[TextData[{
 "It is striking that the (anti)correlation is perfect: it is not that the \
\"forbidden\" data sets seldom occur, they ",
 StyleBox["never",
  FontSlant->"Italic"],
 " occur."
}], "Text",
 CellChangeTimes->{{3.414074313528397*^9, 3.414074373830606*^9}}],

Cell[TextData[{
 "EPR, dismissing \"spooky action at a distance\" as  physical impossibility, \
argued that up/dn instructions had to have been written into the particles at \
the moment of their inception, by means of \"hidden variables\" of which \
orthodox quantum mechanics took no account. They concluded that orthodox \
quantum mechanics was an ",
 StyleBox["incomplete",
  FontSlant->"Italic"],
 " physical theory. EPR appeared in 1935, but de Broglie had come on \
different grounds to a similar conclusion already in the late 1920s. Which \
may account for the fact that already in his ",
 StyleBox["Mathematical Foundations of Quantum Mechanics",
  FontSlant->"Italic"],
 " (1932) von Neumann had supplied a \"proof\" that no deterministic hidden \
variable theory could account for the essential elements of quantum \
statistics.  "
}], "Text",
 CellChangeTimes->{{3.414074397081422*^9, 3.4140745570568867`*^9}, {
   3.414074587921945*^9, 3.4140746349704857`*^9}, 3.4140748756503353`*^9, {
   3.414074971590117*^9, 3.414075012624107*^9}, {3.414075160529159*^9, 
   3.4140752754757853`*^9}, {3.414075307697528*^9, 3.414075325021614*^9}, {
   3.414075374293912*^9, 3.414075416375287*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.414075425085964*^9}],

Cell[CellGroupData[{

Cell["Simulated quantum violation of Bell's inequality.", "Subsection",
 CellChangeTimes->{{3.41407546704709*^9, 3.414075493247582*^9}}],

Cell["\<\
It was apparently John Bell who first noticed and drew attention to the fact \
that von Neumann's \"proof\"\[LongDash]though it had for thirty years been \
universally accorded a central place in quantum mythology\[LongDash]contained \
a fatal flaw. He himself initiated the line of theoretical/experimental \
activity that is responsible for the present almost universally shared \
conviction that hidden-variable theories cannot succeed, that quantum \
mechanics is as strange as\[LongDash]even strange than\[LongDash]it seems. \
Which is ironic, for he himself was intuitively predisposed to favor hidden \
variable theories, and insisted until the end of his life that a sufficiently \
refined hidden variable theory might well lie in the future of quantum \
mechanics. \
\>", "Text",
 CellChangeTimes->{{3.414084842838471*^9, 3.414084874996869*^9}, {
   3.414085244082836*^9, 3.41408531751441*^9}, {3.414085378132526*^9, 
   3.4140853902986717`*^9}, {3.414085473510191*^9, 3.414085488188383*^9}, {
   3.4140855275352077`*^9, 3.414085609624772*^9}, {3.414085641033701*^9, 
   3.4140856881372213`*^9}, 3.4140857215227947`*^9, {3.414085765946516*^9, 
   3.41408590841166*^9}}],

Cell[TextData[{
 "Bell adopted Bohm's Alice/Bob set-up, but with this difference: Alice was \
equipped with ",
 StyleBox["two",
  FontSlant->"Italic"],
 " meters (\[DoubleStruckA] and \[DoubleStruckC]), and so was Bob (\
\[DoubleStruckB] and \[DoubleStruckC]). And Bohm's assumption that \
\[DoubleStruckA] = \[DoubleStruckB] was abandoned. The \
meters\[LongDash]represented by 2\[Cross]2 hermitian matrices\[LongDash]have \
\[Sigma]-coordinates"
}], "Text",
 CellChangeTimes->{{3.414104363915606*^9, 3.414104517763986*^9}, {
  3.4141046764941196`*^9, 3.414104735912423*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["a", "1"]},
      {
       SubscriptBox["a", "2"]},
      {
       SubscriptBox["a", "3"]}
     }], ")"}]}], ",", " ", 
  RowBox[{"b", "=", 
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["b", "1"]},
      {
       SubscriptBox["b", "2"]},
      {
       SubscriptBox["b", "3"]}
     }], ")"}]}], ",", " ", 
  RowBox[{"c", "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        SubscriptBox["c", "1"]},
       {
        SubscriptBox["c", "2"]},
       {
        SubscriptBox["c", "3"]}
      }], ")"}], "   ", ":", "   ", 
    RowBox[{"real", " ", "unit", " ", "vectors"}]}]}]}]], "Input",
 CellChangeTimes->{{3.414104741823151*^9, 3.414104834062714*^9}}],

Cell[TextData[{
 "Bell demonstrated that if Alice and Bob use there ",
 StyleBox["a", "Input"],
 " and ",
 StyleBox["b", "Input"],
 " meters, and if  ",
 StyleBox["P[a, b]", "Output"],
 "  denotes the ",
 StyleBox["averaged product",
  FontVariations->{"Underline"->True}],
 " of their meter readings (at this point it becomes most natural to assume \
that there meters read not \"up/dn\" but \[PlusMinus]1), then all hidden \
variable theories lead, under certain very weak hypotheses, to the \
expectation that "
}], "Text",
 CellChangeTimes->{{3.4141048756034117`*^9, 3.414104893505974*^9}, {
  3.4141049661382313`*^9, 3.4141049721060553`*^9}, {3.4141050208441343`*^9, 
  3.4141050865959806`*^9}, {3.414105137023026*^9, 3.414105172821826*^9}, {
  3.414105228890373*^9, 3.414105231120343*^9}, {3.414105288879609*^9, 
  3.414105344928245*^9}, {3.414105387936944*^9, 3.414105443672414*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "-", 
     RowBox[{"P", "[", 
      RowBox[{"a", ",", "c"}], "]"}]}], "]"}], "-", 
   RowBox[{"P", "[", 
    RowBox[{"b", ",", "c"}], "]"}]}], "\[LessSlantEqual]", "1"}]], "Input",
 CellChangeTimes->{{3.4141049996426153`*^9, 3.414105002832026*^9}, {
   3.414105476337*^9, 3.414105559881021*^9}, 3.4141068322265167`*^9, {
   3.414106870954035*^9, 3.4141069106777782`*^9}, {3.4141069874712973`*^9, 
   3.414106990772538*^9}}],

Cell[TextData[{
 "which is ",
 StyleBox["Bell's inequality",
  FontWeight->"Bold"],
 ". Bell also remarks without explicit demonstration (for the detailed \
argument see pages 66-68 in Chapter 2 of my ",
 StyleBox["Advanced Quantum Topics",
  FontSlant->"Italic"],
 " (2000) that if the state presented to Alice is the singlet state "
}], "Text",
 CellChangeTimes->{{3.41410559216896*^9, 3.414105601684266*^9}, {
   3.4141060528990593`*^9, 3.414106145404797*^9}, {3.414106186844708*^9, 
   3.414106197676693*^9}, {3.414106229149557*^9, 3.4141062892958307`*^9}, {
   3.414106367313863*^9, 3.414106379945038*^9}, 3.41410992287501*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[CapitalPsi]", "singlet"], "=", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], 
   RowBox[{"(", GridBox[{
      {"0"},
      {"1"},
      {
       RowBox[{"-", "1"}]},
      {"0"}
     }], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.41410629793038*^9, 3.414106342503127*^9}, {
  3.4141099371684113`*^9, 3.414109944609702*^9}, {3.4141102588264933`*^9, 
  3.414110261555695*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414109928667521*^9, 3.414110266554884*^9}]
}, Open  ]],

Cell["\<\
then orthodox quantum mechanics supplies this simple description of the \
expected value of the average product:\
\>", "Text",
 CellChangeTimes->{{3.414106467199788*^9, 3.4141065304906263`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"a", ",", "b"}], "]"}], "=", 
  RowBox[{"-", 
   RowBox[{"a", ".", "b"}]}]}]], "Input",
 CellChangeTimes->{{3.414106548652581*^9, 3.414106561095628*^9}}],

Cell["\<\
If quantum mechanics were consistent with the hidden variable hypothesis then \
one would expect to have\
\>", "Text",
 CellChangeTimes->{{3.4141067775100803`*^9, 3.4141068193675337`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"a", ".", 
     RowBox[{"(", 
      RowBox[{"b", "-", "c"}], ")"}]}], "]"}], "+", 
   RowBox[{"b", ".", "c"}]}], "\[LessSlantEqual]", "1"}]], "Input",
 CellChangeTimes->{{3.4141069345788507`*^9, 3.414107004884499*^9}}],

Cell["\<\
But it is possible to find unit 3-vectors that violate this inequality. For \
suppose the vectors lie all in the same plane: writing\
\>", "Text",
 CellChangeTimes->{{3.414107123218726*^9, 3.414107144938937*^9}, {
  3.4141071799806347`*^9, 3.414107227740625*^9}}],

Cell[BoxData[{
 RowBox[{"\[Beta]", "=", 
  RowBox[{"a", " ", "\[Angle]", " ", "b"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Gamma]", "=", 
  RowBox[{"a", " ", "\[Angle]", " ", "c"}]}]}], "Input",
 CellChangeTimes->{{3.41366001419903*^9, 3.4136600720936947`*^9}}],

Cell["one has", "Text",
 CellChangeTimes->{{3.414107265580079*^9, 3.414107266173687*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "-", "\[Beta]"}], "=", 
  RowBox[{"b", " ", "\[Angle]", " ", "c"}]}]], "Input"],

Cell["The expression on the left side of the equality has become", "Text",
 CellChangeTimes->{{3.414107568607155*^9, 3.414107579338266*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bell", "[", 
   RowBox[{"\[Beta]_", ",", "\[Gamma]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Beta]", "]"}], "-", 
     RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], "]"}], "+", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Gamma]", "-", "\[Beta]"}], "]"}]}]}]], "Input"],

Cell["which when plotted", "Text",
 CellChangeTimes->{{3.414107627179586*^9, 3.414107635386764*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Bell", "[", 
    RowBox[{"\[Beta]", ",", "\[Gamma]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
        RowBox[{"3", 
         RowBox[{"\[Pi]", "/", "2"}]}], ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
        RowBox[{"3", 
         RowBox[{"\[Pi]", "/", "2"}]}], ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.413660243665271*^9, 3.4136602836129007`*^9}, {
  3.413660497523921*^9, 3.413660572236946*^9}, {3.4136608606834793`*^9, 
  3.413660865968316*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
XFb1LvKKnnWcgkN+/I1/MV6MC/g/Lcd1qFD3j2BY6cgfnzz/EfHbf1b85sz9
epQf+IESf2xsFz6a8gset/HKo01vf1AumPPogB7F/x1I/K8zawvW6PJXMPfc
bO9+/dI04o4ffiAuoQjlh1yiZ/4ecJGTf+Nf2AfI72rf4tWshTgPXf0XGFdq
M+UX3JFzdeyeps0oP3CzTu93pfza3hlX1zSQk78vekM74pBH/iYO+UVO4kn3
xl850qc65htx57s3mTulGeQH7uhzRssHdVtBfuJ2XB0gP3H7vVphvrF/Ow9b
Yb5Rf7J+OS7g0CfGBRzyY1zAMV6MC7izTic2G/wL5pvaj/5f91n+cXHKD9zO
w96UH7hdX8VhH4hbu9GG48I6FvuDeUgc6xrjIi76x7iAQ36xA8Qdf3712nkR
lBO4tQ8RlBO4tXsVKCfsithDygkcdgb6BI7fhT6BWzkXc/4At+NqQjmJGz1s
oZzAoTfICTsh9plyAhe7x/UCHPYE+qS9l+8OfdIOifwYF3DGiTIu4JiHWBfA
7byN57iA23k+mPLDToh9pvyCw+5xXQCHPcH8AY51inGhf+gf4wIO+TEu4Bgv
xgXc2pknuV6Awy5BfvnvYJ8pP3DYPciv7a09gZywl9An5AQOeSAncMgPOV3t
HTu/k/PQ1b+zLwyn/PLfcR+B/MDFPlN+4LB7mG+w67AnkB849kHIDxxyQn7g
GBfkB2735Uacb8DtPl6M8w37v+z7lB+42GfKDxx2D3YAOOwM5htwrGuMC7jo
meMCDvkxLuAYL8YF3Ppdah/gr4mfRvmBi32m/MDFHlJ+4PAbMQ+By/ql/MSt
nik/cJ+c6peKv4RzJa+/2ol/81zY4jyfcvVTYNfeDvRz0N753YUVK/ainwPc
0XPJQtdz019BP0mlN/ZelyqGOM8VW46b3jue+7r62/ey1J37XUHi+P3badJm
eKd8EebHff4890u0/6dPwx6Hy95mntenH+5bvnExX6n++fq3Pmv7DvcPnj8f
WD/sj1plaX+Bn5t3et6U2YV1PUg/lyI/7l0hbz7GgRoXzLxSrGI3tkc/J5c2
y1V765v43u46hO3v16/COAf9WLwy5wf0YH83nP264gszXuiZ591/VpwVaHSL
evbFF9SnLx6h3oA7ejjz1Jh3aS+Ab8x6u2tS2XDmHYDH1xx6rl7j79ke59q7
aw6JCg9qPgLtrX6q6rqV+Wj6LzNNv6vGF6H5qX4b4oU0ac6d/yBc/SHEKfcy
37nYtTHzUPD/T71ap/qO36ur3Zdz4Qu5VufaOfoLjgvtrfzr1f5Ke9tPM34/
rA+sF8jvigvMeoGcrvb5wr9PYl4Sfv6FXKsWTdmyhvsozlVPvVq7dOmHizgu
bR+SfzrHhfa2ny20h/Tn7Tql/WccYdcp8xWu+CI0r7gP4jtA/8g/eOOIGrST
wDdmfbAmvsMZ5hkQF+yu2f/PSlXph/G8Mr7mmIO1PviU+Qe0t3pYxn0T8tj+
D3BcwMWeUA9YH744nbgvnlU/3M4r7vvA8R2xb2o/Vg/Qjz/uwH7kksfjz6P9
pch+XzS+qXEZ4whf3gztTy5t/l38e7HsB/07+93Z+dOmU/9ob/XcjfpH//Z3
g8zboL21kzm5r6F/azeacV9m3Y2xw/WZH3PFL2Y/wnfxn2/iu6R0jumKp37e
/aAX9Ql7D71BP644yNHDNI7Xf46J8briKWe/KMXx+ttjvCmd87rio9C+w/Gy
zsjuUxwvcNhhjNcVf5nviPGiPb475gn2N3xHzAfGU77544qzjD7RnueAgkNv
wDFvsR6B++Mg9G/XSyJxnlf64gjGg2bdNSKOcVn7k4PfyxVvmv0R3wvtrR34
l9/LJb/xx/C90B7+ANY1cNgx5GOBw16hPc4rYd/wHdHefq+5/I6w92LHmL9F
e3/+1huf/kL98PzRxBH1qR+NT0P7aYSeA0qcKPuLxpVyDoj9iOeD0t6Oa4vG
m9Ie9pnngL64Et+FcaLZd4rxuzA+NftUUebJEQ/Kfk37jHM02d85Lm1v90GM
C+2xb2KeY//E/IT8/rgScrraO/t+d65f+AviL3E/RTwofhHbw+8QP4rjRXv4
Gxgv/Cbxlyg/4ztZL1injCtlvcD+e+PN+ly/6B/fBfPHFVc68ycf7Rjai5/M
dQRc/GG2hz8o/jP1g/ZWD69RP/CLxR/mOkJ77DtYR+gf+xTWEdpjHcFOsu5S
7Dz0hvawG9Az2sPOoD1wWV/UJ+NBO59p94DL/OH69fbDuMMd53rsm18ezE/G
rd640hX/hvQfze/iOicKxSM850J7xC/Qv8bXZn+nnl3tPfbKF/9yXP74GudB
LvlD8SzH5TonMnGuyO+uVzft4Xf641b4Mb74l78HXPRDvSPOkvlJP9V7flFf
/TnfeQdw33kBv4srbx+Sk+uddYy+dYr6QLHD7Efz4TauRz+s0/Oea7hxc16A
75hS/pz1eD5/ALh/X/P7b+gH+y/8Mcx/lz9g9IZ5rn5FyD9vzP6x38GPZX2I
5iGd+OW21odo3tLR8yziLjsfwqk31BUgHsR89ubl/uB34bm//V3aMaxTxL/o
x5vvasx+eK4tcsJu+HGsC55TS54c89V7Hvqp5kdQh29xfhfWu0Yer5H6cBvu
+65zCoNjnvjjEfTj/+6wnynVH/r9UuxTrnMB53d5fqB1XIJDD6yXkLwc5oMv
Xxc4OPpowex3svFf2MmLkfcz/JsuM/Gbzz23cP6IesHM+5u81GncVuJXor99
v9KkAP/Gf4f2aedmG/jL6Fr4l+PKUC2q1dgsIxWP79Y5x+VItpf/Hzj65+/L
7+Jv4ug/e8wnBWrlyETckWdQjWVD2V7+f+J5Tw/d/mfWdPiXejiZtPyNV8NG
cXyJT9Xc26bSgGCm9PFv3Hsrlvi1XeVqFJi1LhixOO/auvVKBdavKfVp3/Vl
A9ejpkxLvH8hmG/bW5u+eWai6intpuhNpQryb/yO9M+/8S/z2yIf8IT4DUOf
7r4jmOfBuv0lrvSB/n+dN3Htw0/6Ng/myXczoeuOs4EbpSNPNx+6JS4hftPk
hW9EBnNHPX165U/vBJLiXttUJX2GuItp48v2bNgtmOvNtpcfjd4cuN2k08yc
o+rEXY+a+sr266eCOTt8l1wnpnLg36tjP7ueebSDT9k/fkHRYI5Bu+5/9frc
wMOhS9rsGLvD6WfTw/vjOwTDpzyR9tjTeYKpsl6afiDDE87vxlV5p9Pa4BM9
ZnQtvCM6mProgHHVXy9F/QPHfHD0sCb7mZf5HaX9K+Oc/W32m+mCWadfKHN4
9yW2T4jfeGFw68/RDv2xf8wr4Ogf8wH4xbS/fVslqSq+L+eho4eMzzT4DN+R
7e08fJE42tv5sIrzFvMF8wTzHzj6hx4wbyEPxov2WC/A0R7jwnjl/39MP6JX
6hPjRXv0D/0AR//4XbaX+SnfG98f3x3zA/MF8wTzCfML8wrzD/MR8xDzFfMX
8xbzG/Md8xzrAesD6wLrh+sJ6wjfEevJ2rEGxNHertNP+X2xvrGuZf3THsAO
4PuiPeYP5gNwmT+Qgzjkgb0C7pOH9udG+479ihSM4N+084Ljb54vtO/Y+Y/o
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
ifqin/L+ebFL75yUE/iZcyV6lZl3i/YL/azotbD6xEazKD/wk48eRbSrPRvy
Kx971ZJvxGQ4Bvm17ujwwIFdBtWG/HofavPFso3T74H8xE/VaZp+8oZk+jnI
D8zolu7i1HEzID/xXV8Ht0QFvoCc7MeZb6X2N1pGOZnfHvr5zSETu1JO+p/R
pd5dvPd7ysl7VR3udV2TJ5lykp9j93tjljSNpJzkIT9a7tKWrR0pJ/C/qy1Z
0rBZBuY9iE9M/jjT6fVY73oPq3+rRtWWVqP8/vv1kN+PQ34/Lvb2cZ5wGZc/
n49xPcYTLuPy94Nx+XnCMS7//XqMC/lSxz4fyz6+PMdFXpO3qjduei01x8X7
8kY/NTgu4FafW7CPKG70n53jZd1yVPbOlR61ojysxzTz5zfKA9yxV29eydee
8gCP/eHPmM/vXWT/rMv6Ofbm01XHUJ88/w+/PnNw58XUJ3DH3p7vuVrPGVmv
ZdZRXc5z8lGbdXec8sOfsev0V8oP3Kzrxio/6rsce3Wy0bDXYQ/Z/kR8noTF
DedzXPSjejZMXhnxm+a1UN9V8okbZV9sxnGxjqtaneSwxn0oP/sxdu8Fyk/+
ZGMnp1B+1Gv9lDdxafpKmyg/8DPnSn4S88ol+jnox9rnXzgu4Naef89xkQ9Z
7D/zYKjjqpG54+6tjTku4I4dHjEhZirlR77I7lNDKT/yVzO6Ffso84G7lB/4
rq9r7dl/JR/lJE+P2TdHU07yD5t9djjlZD2V2ZfjKCfvM26++NKF6fMoJ3l9
dreN2jByBuUEfuJo2Y5j5i+jnMCNH9LhItcd8ZA/U/s41x3vSxq/qCLl57nY
0M+vlLj0IeVnPB5dalCOqrkpP+9LdrgX+8KuO5TfVR/l+Dk/Un4X7vhFmSi/
C3f8qzjK7+HpzRhB+T3tx6TjvPL07/iNGJcrj2f8T4zLhTv+6gOOy13HtXZ1
DdpPHx8v/QT867PbgjcKXM6YvvK4G0e57yPeOv9TZO12vxXivr83aUW1Sn12
Bc4+elT67Ne56JfinPz8G/3yVFmdmv7n5tHH7iefmhS4+Ohh0tQjVynHpatj
70TXKhe4OeLLIeGpR1Ee4M7++Gq7nYP5u+ebxOQf89ulwM7e/+7KPOZl9pM8
N9uaq09NCiTXv1Gk5MrV7Ae43+/C+czGGW1W7GwQpH9ybeiSwzW3xoTW3ZY7
k5ez/3v7m/SdV65AIDmx2LNv99rH/oE7/lKtYmE72T/OWWZ0y5i6ZRnOw8C/
6eNHPn/pbtypmORGLTIs5+/e6jFjfsvoVWKvzqlfNGh3gcWT6gWS2zRYeWXb
OPWLUL9t/Tr1f6T9qYJbq15t1FD9H8nDxCYUKzpjxAHOH4kf40782vPl4JXZ
lOfB9Asdc3d9MWT/C1culE/9HxN3jhf/fxnlYX21108Opo0qk+rA3Yd+P5P9
nP0sX+VW5epSTvRzuPCZhCpvRVFO9LN9Zq/lBRf0pjwZFuc9Ej11D+NByMO8
jYlH3qc86be9dWLJgID47eq3oJ/rlSuULz9/OH/Xtg8GLjVqVvK3+vu4vpD/
Of/GJ8+1K7+A/skTp4de+Lfl4sC5sLCMoyaEqX9i429ZXwmUE/G1s75+fbVO
W8qZuW3PuLEPB0k/6WlnEE/b312kfojMR/hp+N3sf7WZGDnz7ZB9/r1JrO4X
2W5/Oz1m0P+cdfSgYN0X1rEf275RaD026ThivPoDa1+t+lmObTIfnlV/QM6P
Ns5o1fiFFQN1f5f2yfWvH53k+Ancl4ftf/rq2xftPF+r/ifOj2Z0e7LmuA+W
6L6c89qiHJtmOuvln5yjl9blvpbzmZIrW8zK8Zhfgf6TEyMvpgvLqvtpw/b5
W07IKOv6d91PJU8Ym/Byh02ls/N3JR/irIteC97b/4ru+3dWzd16+lmxJ5N1
P5X+nXX6edb2uu8zb1ojc9+zN07pvmnzLs78z3Ng4ybGm6y7OFz45OddNiZR
nrwLcn5xreZJZ/53+XHH5kjdB6UfZz3mbdMzA3+X9cYl05e8emQo5zP6cdbj
qpmFIyhPxIWRd17I+4Yz/8v/NOjIXMqDfObV8HUJ507+j/JE9JkzoNXw1GLP
T3J+Is9p7P+qG9wHI1JvDBv0z1rZL3Td4Xed9Ttp804932QeNfz6zbrzVH78
7s1qr7/TvMLbjHNtHrdS4MbGuV93/t9txrl235kZSLz7YcF5Dfcw/2Dbl5P+
hxBnvVX/ehWXf1eTcf3Pa8o/kblDUOR8l7jVX8PAzSbBpTGjFtH+I698dUmD
zeMPHaJdtf1UFD3Po/w27zta6i5qUP7TcbWqLn7150By23mJk87h/hL46raS
t9yL7yRvPOS0+eOOMk/SErf7rOMHlk7XotnUY7QjyDdfyvdb70W1i3BcyE+f
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
rOT/v1XcyPmbrC+Ng9CPnZ97NL6Q+mpb7/EJ9Yz2dp7zvjfrru25STJx3Ncw
9mFXbn6Xx/jYEXeAj93Uq+ymHsjHPqz4g+7Tlmm8g3e7jD3poXGTh499lcoj
7a1dOqP9SHtbn/NQ8/Oo8zR2b4nWCaDu3thVvZ/IeyKCs37gvW+2XGmbKOdT
E/RcHvl/Y7draDwl8ZG18x+mEDd11rhJ2zv7hcZfXv72HzgunEMm7zq2rfeN
tykPzgvs+d1h4jwv6LThf71KPEX7jPvXZh8f9pLiEu+YfbNMQ42b8C6Y2WfL
pxA3pdN8vvjtxj/56rqeX8j5gt3HNc7lvW/jD/yiOHhUuk9+uUOFXzTPL/1b
v7QWx8v6W+OHvKbnIxJfWP8tmTjqVK3/E6fnFIJbP2qNnvtLXGD9zB+4vtDe
+m8jNB5B/YCpk7yscZDgtt5yip6niP8Ce8JzAcQdxm8/xHXHeoAqKyZETM5K
Pbh41I1fynMQ8KIbfzg/5QFu/e3f9fwCdf7Gz6dfrfyBJn4pRNx3vo/f9dWd
tqGfzPjF1C0k0W/gPVlT55Cd/irrTk09xjTqC/6tqRs5uFHvu4KHTeYP/DfW
n//Wdftf+7sTVz8wtL4aUW+sP/+tW8ZBd7XejDzkxr4t5rrw841Dz+QntPVU
nCePvf8i7VnfZeroivK7kz9c6u5gx3iv1tTpTVE7L/uCrQ/cqHYPPFHGn8yi
9g318Ga81dXO0P6E/ORDnCeshxd9Aifvt4l3EtkP+Qy959oaV+79ttSw+CTq
Qe9dhurEvuC46C/tnXBl4c8jNP+Zwv1l7u+m/XDKo/fXQnnCFRq/Y/4beW7R
b7dx9B+BG+0Kny7eZDnlt3FoFvBj+/Bw8mYj7rP9bAtcmR57+OiAuuwf8V3i
sbiFXRJOcL7Bz3HaJ4d1r0w9W/yzkDyHOj5co/u1nIM7/YypV2Ay15Htr2ng
3IBn01YIZ15U5NkcuFRpaZleZWtTHpyX3fhmVvTi/L8SR3ya2Lh2XO1nbzPe
kXgt7uzsJ54v/MUHjI8k3nHwdLm+/j0Tvxfy8PZc/kv15yWugfxcR5Kfd+Rp
NeJmYeI2//8gJM+Py6Nuaz2GrO9zA6KabI/PS9zGI0uc8S57uUedruqfS3tb
z7CHONpb/Vckbusr9gaud8wbObZha/XDpR7j6t7e7T5M7qJ1qsjPm/Zt1N8W
/9a2/1DtgMwXyA8c3x3yY1zwt6EfzgfjZ1aCftSPsv6MfJecKfghs7Ruwe7j
8n3f/s+8YvuoM7q+ZP+1dVBah4x9XOa52gfJE8p80/aS97PzTevc5J6NzOf1
ut/Jvmnnc3Xdf2W+2++7V/dBaW/XY03Oc3uu3cCxV8sOLa1XlbjNs30X2gd/
WHomqPMQ9+D+Ofp1+PnFOm9lXvntPOYV1i9wzCvndxd3Sl1W40GZV/54UM9l
bHvGU2ZeJbI99QletX+Ozon8Sucz9OOPE6Efa/f0PEXrHEL6eUlxyYta/VSn
3sg/Y363AnGb/+kSuPlvkZ03Rl3R/JI5j24SSBrdc3nN6hN0noNfV/TMumLx
251+Jh3P+Y3icj7i9NMv3Q8deZ5LXtzVVcJvrpnmy7vqO6Fob+3k75IHZt2I
yPtOIOl08/iozhto/5kn9N0fAZ7cIqzDpf5VfXUO21n/AH/pv/lyox/jy0Vc
ivbHd9fr8tvahZSH+bp6cS/Ozj9f6xPA//brpodVWzZm/953XnZqHQL8q7ln
o+d++5DtvTy3l9geuNQDax2C5Ou2nM53+Mb5lpTTxR/7Sts+eyiny0/bX/ra
QV/9AN6vT8Xf9fp1b7O9l7eW8a+ft5b9kIdN6rTRnry1UteNfRD3R2zd+Ie0
n8zjzT3boXOTvb46Ab5rr+3Nef0GOdebrfdETD1kfcHnaP0AeCd+3XQ/7MnS
7N/Pcws/innCenGRcRl4XsD2tt6+mNYh4F0gqc9nXYHkCZ3v+OmIKc/Tj0L/
2zp/u+Vgdb3HgX7svYAntR5A/GpnXdSo3uMhf5f5Pd+9APLQrq68/n6DH4kz
L2TO33cTR72is04/zz9iM/cv5Cuc9bLkSP4Z9BuZ9/D9LnDIyfyS8sqeWVj8
tN4jkDyG1U+qFM6L39H7Ashj2O+i9wVw/91836f0nBf+vJlXexSXewQ2D1ZK
z2dlf7f3sBL1fNb//jjOZ335B57PKu6sxwPK/6b9OOt3n57bgofN5PEe6bkt
eFmlzpbnqpJnsPZBzx8Rd2zr/N2gpvU3sT38eXM/ru8yPVdFPsHaK8Xl/NTW
U3XTewFS9+jgV7Y8rK7nreBNNXaS/G6af7B2le0hj70neEfPZ/Eer9Rd8HxT
4ia7L1RTHi3E9dIe/oCnzr/xEvbjise7ba7amv248MbzLh7A/HfH6Q6+F/PW
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
LifyP09N3R/zZDj/pt87cNSc8Xue+z+mf1T1
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw9nXn8Rdd8rvfea0/riJoSN1QMMaSSmFVQdc1z5IoQpDHELDeKVIRSxCwx
j9ccYh5qrlaoIbhIpIiQhBhbVKiSlt5K9XnWu3P/+H3OOufss/baa32H9zv+
Dv3zo6726K7rhq5bz+K1dN18la7rD++66W5dt3yj68Z/7rrd/2J8PuN/ZXy9
rqvP5rrvMH4gn3+b392Y1yvw/UsYH8jrNXl/KcZ/zOsbufYWjH/N59/jVm9i
/G/8XZ37/Bev/87fNbjmT3m9kGu+z2++yevPmP8ejM/l8xvxujefPZfxjte9
+Hse40vw+j/47dOZ6yGs+T5c9y0+vyGvfL5MjFnX8mL+Lsn4Ory+njXclOsf
z3ueZ73Lts4rMs91+fwJzPMoXn/P3/F857Nchtc/4fXNXPMsxr/hvv/EdvHZ
cMPsV2H/hgcz5nmGF/DH7/rDmP/lXH8mv2XPhofy2X35uzfzsC89ezedxudP
ZMyc/b9w/R9y/alcz/rWffj+Njzyndnzc/j8K3zO/dd9GX+JMc899vx5dKcw
J9d2v+X9j5nrSYz/g7/9mf/mvH8y4//HfCczZu+ny3P9kYzZ+8m9uiffn8jr
h7j+QXzOWfTsf/2/fH4Gnz+T677OZ4fyekfu8Xw+34NX9rf8NZ8fxft/5DoX
w/ks7MH0c8Y/4BrWPbP//bv47GV8dzCf/yWvb+e79zD+37wy58L9Op5veT/X
L1z/Vq5/Eevh3gN70bPOAXodbs/4Lbzyu+HKjF/NntyP3z6A396a93/L39V4
z1kWfleuxHv2bIGOO+ZaWO9wV/64puf3w3N4fS9/7OHCWrvrMx97V6DFcjZ/
0E/9Bz6/P9/firVybXcMr3dindy3vyrrhEYG6HPgPhN0NV+Lzz/AmLXNv2D8
OsbQ7Mp+dR9nnr9gXsbDJ/iOM19+x+eP4BV6nKQ95p98Hmi8uzav/4e/PXKe
y2v4/lj+Hsd7nm2A//qjGf+EV3iy+xF/7h/z9Q9n/AesATrtfsiapUX4vNuT
15P4HBruoLsRfp48Q9Y6Qpf9Yxh7fuz5+MrQ/wj/rHfnOvZ1d1vG7OcEj+zY
r+FVXHPBNu8uPL3wu/kgxvDyCE/3f84ftNVJezfhFdkysr/18Rt/sY+VNXbw
yQI91E8zhkaX/8l9oMHuk4y5d5XHP8/4KawBOpwY727J+LJ8/kE+hy5W9w16
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
kIflIeTk8K/R3+PngwFH6LxAD4P7ge4t0NcADqqePecxwPfiwkHbWRkBXw7K
E//E0spV+H4FE1bWW8RD7OlO3zP8v0JLi/a78uBrsVe1I7Rfl8dE9wz3C68N
xhweFB+Qvjt1ifaO/oSq7xTZO9wi+7PWjb/2jW3SeEEahbb0Waz6T/SZwP8D
cmMnXuOMK/uxg/dH9GEFO+yuElm8QAM79nGE3yt/O/hjgu5X5SS6YdAfpm/h
JsFUYqv1U/H7rJ/m75Ob7BJLSL/y7fU3WYUeMBawqu+0Qa+VOd3PVTmljtbW
FMcemrMQ9xT2tuwfHCCuMP5gDGc0xgGvTejhqo2hDkTfrNfM5yPYuV47c6zy
yk9CG15X4MFBrHDb+LV6dJyxklXZgV7ccVbDCZt9fgyv+nC8Dhm4GgNBry8v
Dw7qjSldI36SiTOs0MSqj2KfXNPiL4/M++nI7VV75Mubj83n199z5c3ePyG4
Y1W3SvN/EX4bPx1sMupLh/6L5649pbyAlmeeyRiK+Ge9UvZS/NOwEGeoH34E
y6zqbe67yif6XtjrFTod9WmBMUbsqIJMH7SRkGej/h/07XhCaFkf8vjw3L/f
5q36/+HhFflTOXNx4IqsLW8PH/m+/lH2e1KGY1MUZLO4bTw12GlkH1d9StqD
yKSCHBnEYOq8a+R1EucbC/l26KFnHvGY8aFJ3Spuh6ZHaKxD343IpIn7dmDi
CRw2quPZs1Hb1bNFJi7uA5/1z4od2usv0l/Ds1ftBmlc+SK/YhPojxr1/3Pt
qK2rjQ8/j6xvFHsrV24eu8a59HGpD3uxsrhS2+Qlka3KDfG58nlEjxsLGG+z
2bPP3LD7n+Za7Z1mm5yU+bWVnGuVp8RO+ki8N+vUfzWKS92TO0SnVPZrRkbt
oNER+6w8d9Mz+h+wOTpsVX0Y+uSNJSjztUk65p7E5Oj70XjBDSKTmmzSXjaG
BO3N4lvszImznPfM5+7/8OXIOeXdqN+Ye43ww8o9xNsrsn78DJ9rTxsH1I92
TjDzclTmbvSgfc7aqvjqlVnvZIwH+us479EYkrYXPDSyz/re+7NiXyh7pYeK
fpn15Z2d6/3esfaGMrVHD+hbVx/5qu22skfdzWNn6evo9RO7J57hcbyii42/
qdebTn9o1rbIJ+ytsb8Wc7xL8Oy8BjPr1xKLFPXuNzcMrS355g3T3yHYe4Kn
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
V/agqM+MDrAvirLWfK0mbw8NX+jHcK5Wh2iOnDjIWmHjzW/P2M/MWXP+hktP
zfs2vmKeUQwsZrAOy1r5+sTsi7Xb7RmNY9pHpYuPyjr+pkOfF51Slc/i+eOy
r9b/t73VZydu0/9wu1zf6ljelWsWfbv6Bc09v1k+8/fiRmtZ2m+NQXB/fYWt
ZudjGYuN5jOCVe2B0XramKeLXph/nfFsfoP2n7lU6pFvh7+aj0A/2aO3a8wd
NIdQn/oXwlMNW+qPf0n8W46VbfZ2cK/a/c0ZHXKt+X7WJBV9gNon/xbcVi8d
epA25vM3vW98FxramVOuL5ez2tXYEvX9kW+FfZm/HhlS4IcZOblbYz9UeHpn
TrD1SfyN4l6wsj1XdpeIv6x+OPaKdotxmflHWduMHJ3Ui5/JuHJuM/y3g4/r
+Zs+FBex5tkcDPuAmHMMZqkfCZ+Yuy59uG/6OufTN/n7quSHth4Or4/cEtuL
+as0e+GWdyjNoD/EPGIf+1roM6rso32EzJG13mH5QfT5al77T0MX1mPJB86j
LpePrDkyt0C5qq0+W3tjPgSyuJoTqE1nLpn5Z9r/0J+5zQ2bmSdhnu4e3f+v
P9BH5Rnpl2gYAj6s0IG9jMzxXdGns3LbfdWPIw8ql7SPzIkHK+0eFPwtnUgv
xiyUBTPnbk62OtZcnp2xfGPF6MdZHYAOm5+R2If1veZf6DsTM+pL82zaGf0s
MRdjIvOn4wNqeAX+3Omf87y+m7ha40XXeedgl5kz30mX5ql+NL59/fzGO3bK
Dv3G8NxO7AkOsKbeeIEYboYnd9C1de/1Y4kT6auaPx6fv/EU40Q7Mar1aOdF
Fil3ZuNft4yccU/01bYYxceyX8oXx/U7mwxEFpoT6DVeW6En+w5UnrPaM8C8
yk+Hl+1lNW/+RunH+l39uK1OHnrb7ZO9sQ7OvEb7P8gzxoD0hc2fCL2Zs+5Z
zxsGnZ8Tf5q+tZnn3+lvuGRs+flWwaDzs7Nm62V3N4x/tdVvateZ869v0Foj
c030K4iJPJN/C8bTttV2NqddWpKup88Fv4kJzbXWJmw1f3fKd432zef2OX4e
vGq+gXJF/6p2eqv9uF3mNq5mTK1aT4CM2x252Vy/2Wysb2bccvrFnMiC+tLE
YlsMmWfVFzfDX7v7bnx8YdaxYG91r4rM0T/caoe/t9lTFwRP29vN/LP1BbHH
9a/Nr4xfvWjrG3c0dmpd2Nmxu4s9Zny+07rW10Z8a755yzs/KPa59rv2ur2D
9N3WAzdfhDG9UzY59MNgJ33F1jJJI/qKWy6xOv/MzG/PnBZ7UO6w5zv0oj2Y
lu/H32XcYnZu7VtoZHd4dIC1so2e9W9oK/BcrU/gtUKr+iyaP8Pc1F9Fh1b1
qDbdf0VOtpg39zMGbj1hswVco9jA33wpPtMWBzgoctbr5t/HplWvqpPt56Bv
oepf0MeibDL/QRo2T8oag/dnPn9rD7FWs6XNcNngbuu37CcmbVpvZ8+fi2tM
tbu19fSh6TdoOc/IOPs8qJ8rctT8sNa36aDkG1nHZG5R8zf+ensW89U/FZpq
9uOvM+/u3onf1L8Pnen395rpL+N/sK5JW1ba9r29HZQnyhWf11oT+6HYN09f
yQp/7qz7ly8/F370d86nb8neQU2vPDF4o2GW48NTnqU11S3X/ssbP/0iv2/1
vMjn1TiZuWzYIgt6aqf+MKfgctFhyiLpbXf5yHJ7BHnejR4vCrZo/r6XRf9a
27eT15Qh2jmfTezSGgP1bKuN+mp4Yad/iLO0t+HuAdFJ9iVYsD31JVQxwT3j
I2j0am4RsqjqV7X+bAiPmB+tbaZdZp1Iix/undiifmFxgHal9221Kodt9OYz
isXA/Qs61XiosU7jc+p11+BatFmL/uszk2th7oQ53a1Xm/vwi8RByhxZqiwS
x5krq/4pS+TwanzJupvfZq/d82r8xfq2NfpGO0hbS7nhs5pLIN9pX5gnMYM7
Wn+Wn4U+d+o168BOi31hrsCMvh/3yF43m1rZeHbW5JrFztY6ia38Tpmp3aH7
v+luZf4e0bPmwFgfXcUMD4ttqdwbxXvGXG4X2eP9vJe5f62G66fByeMlgqtH
8+BuH9ntutr6zswcXuM89vwx99N+IfrPW+8O8ZP5qmL5Gycfydwtc2PsZ2rO
uL3erLOy3mqC/3baZPqQX5wcM/tmKpPHl2UNrsU6KPPP7Qdk7Var4WJv6jvy
bK3n0je3PeK3O+UYZ2KfAXGT4rxDbxvjtsZffGt8Rx+3+M3aDWPfLX6tH8F1
LLHtWwzj1fH7N9vd2LR26JnBzNrexmhaPOeA/Fb/hnJQ+dDkonLkP2P72SNO
v5e9WHZ/luv08zS7+3XBs+ZAthoQ8ft9Nn5hf609N2YzWTPw0c3vyBzWLpoD
5VldnLct5tuZD/2n4U1zlozlmFdmnwT1XMtzVh6IzcXg6gRpZ5/kzpkvZ46W
uQvaJsoN7ShtJ/W1eWXmbJkDZnyl2awvDT5X7ipnxf/aKvbTWs1VAu/urC/W
nkQGzhdEviuPvV4bQd24fGKzc9S56MEdtDCZe2h+pvkFl0v+lD4mbaWyyRHl
Sbv+/rHZtC2Wm2f/lbfjFoOcucdqnekxsReq8tFank8F07R4uLjzrZE5yh5j
C0WMqK//gGB2rzH3ST/IzJmYx6Jvcbbu6SrxL8zidP0L1lRCm+Y9GNdqeRDu
k/YhmMTeX46tf1WOt5gnOMKabvOJzOMyn8p8KHOulHfStvJvp11rHRDz2EfM
ulj30Pmc1/mNbWvHK4uMpRo3nY9NjNN4grFUcwz0f4m9lL+tHlAb0HwrdfQX
Nr31gk2P6Zs6d7PxvxXa0wYwNq3fSqwlXYs9Wm9N6Kv5bvUJPz+/udh+13b3
rLTPtdPtqVSR4fYpXqS3Yza7mjPcmf/Lw1fOq2qfMNciDTw5/KoMUG41rHXm
5vc+JbZg1TbENlm0b80/Azct7wxPyBviFvt+2l/UtZsr3GoHkf31LRvGvGXk
ss/detZePb+VpyrYw36vyynRu+pfe7eZv6QPWputInPtxbyYr2L+nDafuV/6
qozjvTW8IY8Yj9TutmZ5RJeZ22be1XxIsJu5LGJJfaStZp89az0w4bf6nsQ4
Wo8sce+PNp7VHyIdanednxwm/eLiTTFew//wmPEAe9roG7J3kjV6rVfs4Ykt
eb11B+bymrtrHYF1B8Zg7MNsPZ59HqxHbX2J4Enz7QdofJUHzXExfwnZOj6t
a/3NJmN40tQB0ZfWdRsDt3+rtQZ+pi5tfbPFpNrZ5iaK85WNxiX4vXWxre+B
cdS9kstl7MLnss9163eN/mx1HeJNawi/Fvk8HZZYeOujyb7s4HH70Sy/2HL0
zUO2LucBkSH2d2h9EX/StT6ZLYfbPiLKK3PD9AnAO9aQW99q779FX7U0Zb6v
tVjaEx+KPrQP0XhWeNOcB3shWC9kbrnrsa7MOjLzg0Z5ec/wsv6GAd0ymXP4
ga7V6Frva42xtcbisUXf6Rdidy9PjW5s9rW+ZTGOesH9twdGie5rPXOgcfsF
2y9CW95+BfY3mKxz06+PPLOmcGe/AOigIn/sw2yuj3Uh9grQtjV/xFhGeVJs
YXvRWONi709zNcUz4hr7HtjrYOKe5kmWS2ROY/TKJPVei9s+Nzav8XdrRa0Z
tZ5a/DYpI/VX6wtnP81ZLY/n1Ri5fkXoz9oRewhoh7U+wOZvuHbsCGvDxTOT
dafG5d7WxTdlXOu6yfduffDgK+vTrDG3ln8SC5qDbd6y8Xvknj09xHv2ibIH
VOtxc5NgSX0Y9lUTyk7G7I2FQn/WQ9qPWNmp70z/lH6qZiea524NL+u1/3OL
GSG3rY/QhravsHRovYL9ilr9/tHRRcZsmsxSF4uLPhsdajqD+YVVWa9+u17s
ZnswGdeyv6K1xtZ/Tu8Obr7YprdvWOuhx7nY48u+A9artziddRvulb5na66U
68pa90nfmTYb81bsIGvY5d/JvEltmgNjo7caEmtrjJ+Jjfm99WT2ebDngzUP
2l6tb5u+r7ttukKsebXsgz04R/3+Q+SnuYLN/wkv29+j9Yv+SHJF9NNa893i
WKfFTjLXsflIxX/Gpc8K9rNPSOu3xhz2Hmk95HhWY/wtlnNAfCj6AcwpMz/G
PBfrR5v/6MbR+eI1/ZP2gbPHSOv/Ka5QFsov7Jc9W1pPXTGtvkXrv+FZ/ell
i8nbG806G/sNqr9ajjvPb05suXRsXtfQ+rSAve1hZV1gyzMxhmwNJrxqnbg1
6dYx2rvJniMT+qv1m9D3pa1uDwTozX5E1hRZW6StuizRHepu13Fx3c8yR++o
+0ZzEnaRdeq21veU/bMmveUavT7ytvVvgZ/tUdJq45jH3j4Nr+o7MX9QOcx+
tp7U0I79DVr/XPjK3tr6tVquoc8CrViLPikHtYHNF0bOtt56p8bXJ77Qr26/
UnuVtP576m3jGMpm/XgyzJWCPfTV6bO1d4c5Peb2uD/Wnls/bl61dT7WezYZ
Dk2Z86ROtE5fXaPO0c6WBydzvM3XMd8bnWrtsHXE1iv6PwDa/wIwx8McB3t6
sHZ70dhbZjKH7bjIef3Giznz9wuuaH2ztc2RT/ayVrcb/1FW6csy7m+eoT08
JzDOKh3qH2XN9t60V5t6UKzRen3ePFio5Z+dlxwn6WfVB3D52CjWbduXXr/s
bgmdWCtmnwz7+tlPQd7XHmn9is3XPz/y0F6SLe57WNZjLxp71EzgBXubtlof
6Nn+sK2nq35+1+P3yKzW6xV9oi+09eIWI4jRzL0RC+tX1K68azDb+KbYT5N2
qTjc2iPtrydEV9qb0Wd2f8zLXbdalIYfzMOS3q37mPjcfEXsXfvstN484oAz
Nt5ZY18YO7HPmfasa99xjv7/DmP39s7U7tG/JG23/ufqAf0+nGnr8wmtth4p
5gm+LRhaLC029r7KZPsmmj9obqXyceY76xb05xu/ajEt/cUnxybVNrV/Vuuj
hfzamd/xN9Gb7XrswpYbc+XYQdpD5htYg6FtZZyhIFuNQRgfKNBj89tfZ7NB
tEWvGhtWW7b1W2PO9evRx00vK/f04/0g9sKO57DntZjWPIr2vwaQD/5/kFZH
b72umOF3wZbK25aD8ZD4YZqfUD/i2XneVlN8eujdntP2XWr9l4wlaeeBZ+17
rX5sNiY41B5P9g+Q9uxbbm9J+5sZX3JvW16NMTJkZPNjHhlaMg6jz13/eOsr
88Jc02we82Csj9/FvvB7fWatHzL3sLererb5hI6IDnT/zY1uvYuRAfaFVT+a
u+Q1+rlajqAxEXSOMWL74dpvsfWc0AeCfjQ/sPWeML/jKbGD7EVpz0lr9e0l
O5hn8e7Yl8oN7YXROscnR0ZZy6O/Ub+jPTPtY2bPstYDnHObpFHxgv4e5mr/
X8b8GmjdfjfW2fj/MOxvac2//yvAvlX2nrKPg/2rjb1Wntf6oIYbrRExdxVa
ndiX0dxAeMCe0pP5J0fG/6bPwdola5j8fxjGE41p+n95zAOxH601RPoD9Qu2
OkZrBo7iGn0at9jsMvn9kont2GtOe0e7x16a9ur0fwWYw2lcqCIr7Ols/bu+
lHGLC/m/X+x7bC5SVS9Ae/ZMs++DtrUxC22f1vMczD4Zp9L+tu8Fz25fQWs3
/f8F9gOx14f9dJY75dmN5xoPaX3J997+zPkXd14YepnU33tFt9p7xv/j0GpL
xUbmYZu7y++Xu+d8tZHN77XXjT39Ws68NQ3Wfde8+r8MWhz8x5nf/wXQ6t3M
R/9AMPnkd+YlqVfl03PiC7ZnxoQes5+P8Q7rRq3rtMbTddrbwH4q/p8U9Zq9
0+xDLu61R5G5zdKvPVS046yNtleWsaeWJyA9qy/M2+f61iPxvfHz2JPEfg0z
GMJeJfY8sQeEfXyav0Rb7pWxNSbkqj1VxPxif3vomBdTD/9v/0RRag==
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtnHn8Rud45s9zzrOe2qqtJcJIE51JawmpFglSiiQqTEirnQhCLa2dasfo
DA3SIchULEGJtYm02lSliqjEEktsEdRSWxFCa0hJ7f1+z33++H1+73nPec/y
PPdy3dd9Pef4R5980KOmaZqnqWT+81eWaUrX4O+Maaqvnqbxv/h8Sz4/aJrW
n+f/h6dpeQHHvpjDT5qm9tN8vimf/x/Hfov9n2D/WXz3N3z3+/x9l99z3vlv
2fff2f5V9t2D757B5xdxvcrnn+HvZXx+Ft/dif0PZvs5fH4lf//B58Lv/47f
35u/j3D+F3LMy9nHd6Wz/2f5Y7ucxnf/n30/4fi/4thj2f4m2z9m+y/ZPoZj
nsCxT+EcPGP1ejdn/+357n/z+c/4+xW2f4Ptp/OZ6+R/ZftH/P51HH83/j7K
b8/ku1ew72Se+Ubs+wDf8Wy9sf8yPr+U/VwvP5T9/J/+jety7PpzbD+S/f+T
497M9nXZvhfbd+SYf+H3/43v78z5XsN33E99O/s573IU+6/N53vydwLbPEdi
Dvp7Gf8v8Nn5eyLnO5Df/Dq//wuO+T98voi/O7DN2C5O7xf5/eP5/Md8/zaO
vz7br2fHVWzzvOv12D6O/Yfz3Vs4v/u5zvINtq/kWjznwC6Wr7D9NbbfyTbH
Ljx35hnXAzgP87Dcmv0f5Lt38fe7fPZ+3s3n87lP7md6z2ZqU2VeKs8+Yy9L
4rsvsf+XeB5sZGacK+NXGevlFhx8Hp8fwR92tjAW073CHgbjtdyA3/DsHRvt
7E/cW2aMV+yqYmML9jm9bj/frTg3x8zMdf1lfn9X9nGN/AaOP4jrM98zzzH/
Vz5/h2fkudJPcexvsp+57tjVzLzlJ7GN3dXTOT8+sLyJ430mx+tQPmC79SEc
r20zJ/UPOP4QzoftTf/E79/HNs/RmOfp42wzJuu1uJ+78Psb890z+a3nuw3X
ez5/P+QYflexzfmv+cO/KnPVmOcJn8vYwsp99HPZx33lx7GNjXfsb8buMna/
XpPz/xrnZ14TY9YfyDbzsXD89NucC1/tjNPMfWXiwnp1nol5Sfyf8dPyeY7H
dxfiwYTv9euw/Ty2v8z2f+H3g3vivpersf1r4W/1/7LN+E1Hhf80bCdxrno8
578h//Hzheeejubz3fn7atjKxLzl+3F+5x57yKeHfbZPh39Xjl95hspcLxfz
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
jfm2V2hMN7arQSvP2K8vv4fNFcbRfuTGz6l9wM7sITZjhvWAOZAY07C1Rpyz
96CmTD5Je1DbKobZ5t/YKAYw990y4om+JeaRL93WzDg+Yn+uq6a1/DDwwnb8
GfHZnpf8QPte+Iacl9yXeEAtmz0QtUXNeuYREeOaMZ05tNZMxj7xnLmWsbWf
O6hZG/lALaU9AfVNVZ2INkUt0/U5tWVqYsWH8jnHB3cjJyw3LMcl1+Ualvae
0Kxk61N7k4ynGF2sbs9dfXJTSyZeN9eTU+VDHWs1uNa/anTztwKjyP9t/NRt
d7yi5tRYbA/a3KxmW37DWPTs4P8aOSrZ4/3JHs/VTJ4UOUA+Vk1vsd/v3OnD
xC+1fmoI7efIycnNud5ILaEYU6zpGqRt/QM2KRbXprQt7VEtmppG7cf7szdg
D1O+QX7TXkkydoNhOpjFtU32iLb8q7b1iXF/8g/dY9V/EBebeNz65PDgBMbu
r2rtrAG3/CFedfw+F/HPGt1a3b5fNQap5z02YoCxYNhXlE/BT9v9It/Y30j2
tsA9rkFRR6CeYHC/asizfJprVRg7+V216WrMN35HvOh+z3Vo5CN7T2IUscrG
F3mP4gXxuzrT7wYGUqvc5HJ/Ozg/+Ww1aa4jUYOrVm3TyP0kMK/2rT1P/KnZ
kz/RH40Naujkb+VQ5VKT2PXBew9CPuncwBfZdVtyMvYuzEnYqVpoezDq3bq2
oP5L2/tR5Fu5azGYWGyY77ERNXPjqfH8clUSPI17avIpO6el/Rsf5Jq1UW1V
/1WbvNjrxwbF4Nq2Pa72+Yifmz7K/KmGx7nFT12j0Ijz1qzWW0l71ufF9sYc
cGeXB7QvqiaT44f1HjlOXYf6jvGksPdNP3WjwLJyeHJ59uzk88WD5m5zjrnH
/KfWeJGfkD+Wu/toYLqNDyQ+yPWK+doa+E/uUbFaU2NkfXBCjElXz2Zdq37I
tWauj1CPJIbm2cexkd/VIlsTib+b3JoaUeyq/ZjvGHe5XTmw4RoB+YZfihzd
1MN47KmBWV0/KB5SO+EaF9e62AOsB0Q/z97gtt5Dfyc/yIfaT3MtwSJXcWrk
JHODvf31flHzW/svYJjG3AzXu7g+q+38kvos8Zu2yhisJ0cf1X7qeGbwY2oF
vKZ8VRPLnhY1+ZavL4hjPYfncr+5XH6x3Seef7lZ1OjW6oMcPO2aA+uNIbdx
/+jhmQ+VX8ihqx/q2Nmwn44tLi+KfNPsh4tx5LvBXcN60O9eEPay9fxcY/nI
iPfD2Mk4L17L/Pa64GocA8fCfpZj55qMUfee5D/HmDq2w1pd/GPsvEGcb7Fm
wP8btiFfqdZADt21H65/TGrMsG/XOrpmSh2+enz5Q/t/ro1YfDb7H2IJsKoa
euNLl6uST5Ub5zzd/Cmfx73br3P8rNUWcwlxWU5UblRNi/xiNxerF2As7L9Y
U1hbLGIt+y/k5UXNq9yrNvbouBc1KRv/+/tsk+ddo+Nanfb40C7IybseSX5V
LYKaBNfONXO3mq/DIv7KP6q1cE2La1u63Ahj6hpP13o632KfRb7d9WD2w7QZ
ue37xjP5bNbArndwvaHnlvOR+2mu9VADcvPd/9THuYbhFuGfzbV5B4SNqEdy
DaprUV0buR4X/utvXSPlWilrCGsJbXTzT2oJuXI1bq43097kItQ4qXUa1psP
CY5Mrsx+sthIXmirN+S2PhG868bPcT7XCYnBxeL2HOw9qCmXf9j0NNyzumnr
dfUDcjv2FI2vQyws1+L6R/JDu270wlzD6/oa9RGunVXzrfZbG9VW5ZTllrf1
YuLdOeLxpmn4etiIWgf1IWIJ1yWIN8dfBdax52Pvx35/wubUWKu11j7nk4Pz
kPto5hZjmtpkc/LDo9fjmqutfhFrusbG2G3N8croVbqGYsPTxuMT4pzqMbUX
j5WjkKtwTeem3z468J2aXPUjaoCtP9SDqB1VU6u2VrwiVzBbyxkjvbY1E7HY
9UlNvtCcYS4SM1i/ck/LiwOvNLGCMeKmkY+sn63dF/mouwW+8VjXVLm2yvW2
an3sybseadgvUPNyZuBV15sbu1xT7drq8dcRO+Q45TrNz8tLglOSW5ITkBvw
O/O1MdxYbgwe+GX/TvQ21ci6HlT85VqzLf78R8QLe/uTeOaD0ZO3N6/mWy1t
k8thvFyD7nqooTZUzQ2/a9yDnKXcpT1k17M19fvmOLHqN6ZNw5KviJiktmXT
MHw5YpqxTR/T11yP3MHYajTUNi7mGjGz6wvU0MtX2WMFZ9uLnbBJ14O0Z8Vv
1at219M5X9ixa8LEP96vWFvNsv1mx2PTM9tfcQ0FMT+5RuFz0VNTvyrWcA14
/fMdf7iWXa2x6zBcT3eHuD/v0/UH6aMR39ReZe7ZtTRiqnzJ3ms9MDB9sQep
NvDu0WPbem2fidpCzUG+9q4f+WbgUXFplh9SE2Ef9wO7nuTKaesxq69Rfyw3
7hpR14eLee035TcFFnb9i7Wx9bd1uPoya2v5A3kE9bWujZ3ZX+0RyZWq17NP
bo/AuT4yeohbL9HaET+yJs8XB88vFyrnYb8uGx/VJ35k74/YLz0y4nFVN2st
Jb9g/9eYZ+x2vYlry+ytqSe4ImKI68M2vZB8IH6vPnnr/4uBnxvxpp0T2MGe
5qbHvW/EF9fI2zNu+seTo1ey6VPJuXIxcuxy7Wq41XKrca3qybA/18qpcZUj
r48N7OYaYfvt9eTAmvZEtv7CGwKrqt1z/bwacLXgroG3X9GvHvakFnpbj3te
YD1jvLFejblac/mYKick3n9OYCqxlevptHUxguvnsvlGTK/+hZiYD4r4a82p
/i4bz+2Zq8HgXPkagd3F8Nt6LNez2GNX+8+4uf5ki6fMbXWcHF9BFfaRiZWb
/v+qyO9Zzfg1A/uKgYv6NGsv9YT29ewtfyjy58xYV3uSjw0s4ZrPIZdvr8Cc
xRjli/Ze9B8HBqxqcl4VXIo9Fnstcg5yD/Yg7EVYE817j8Feg+vZrd3VjPj+
BHtQcjn5nD3fnhW1kz0LexfW4Nbi9hDsJcihzGdHT0JuxfUMbqtp2d4fcWHk
BjUw1Xs8JbCQ/W/fJ2HPSa4rnx3xWQ553nsW9i7UH+lLauTVyrcLw/7VXBhP
jF/2Jl0jOawxXe96cGAu9Sft9dPW63HNpXzd9v4PY2qJaVKv47tK1DCrZZZv
VzvvGgnXShgv1Z+pyVO/0uUerHeslcnRcqhyqermrae3NazWOOqb1ctdM2pF
16i6VtX1Jq69lF9z/Ynr87TPSqx1vYjrJxI2qkZNrZrrn7V361PrVPWu+otr
iNSTt7dHvLBm32r3z0auUi+jbibfI+ZTjq6cudeHjH/+273Xaf0kh8D1iv11
9eOHBkZ0fWqzV80zqaFQS+H6DblN62fr6GZulAPgO9ePqBd3bf1MfZLVu6qt
c30Sdu37Tuyx2jvNb4zeq+8vkBtQ/+P7KbL7xSjGWsbUvrlcu5y660mzXLqa
QW1czuX0/Vl/NrgI1yMkcqNrqNXXZ3LG9JrIMa5X3fSG6pXnuGc5ebnh/Obo
7bqe2bXKrnn2/TSud0i3CTyRsYfmPnOWvZ4rA/O1FDFVLGg/2LVfaqraR/d6
Wzxi/XVIaHB8B4lrtNXmyKepiZZDlEu0/lSLao9tfDr4X9dg2cOxl+M6dbVv
ckauR9/46PNivoY9APkPdZFqn9WP2Md1zZ5h6fp7/+PTEf/6HXd+/x2Rf/qp
e//BfCTWe+re//hMxMd+1N4fwsbsuffjdn5dTYbY8pnBx6i5lqNv3wq+brtn
r//ZvX9mT1Mt0EP3fsq5UaN3+RFrI/Vx1g74QWOMZuxajYrr+9XTLWIocnQn
ptjTtbfrnG7r+62XXet7YthXc33h1yMn+34J6xe5BTkF39eg/m4hFvgOhf7j
qK/ktsypvi9i0+TLJ6r3s1cpv28Ol6t42M7n25MmLvUnBL+pZkmNX1NTqfYZ
m1Mj4/tOmloo6oYktyE+tbZ2bed9wh/lv13zLOcq97rVx5+NmniomeTcrpnx
nQlqhzb93wX7/f9o56fJB3Lm/d47nynnYe16r12Pd37gH7V2W86+JOKJaxPN
seZa1x/5Loy2a6dKi3zv+1/kfu3JjKP2eOeaD/muI3d+Wj2U3K853tpKvEmO
yUfv/M6Zgbd8N4frvOVG7QFkcs22Phvbdc21fLoam7KvP7a3ocatnhV4R+3b
tl7QmC32VBNsP0iOlXlz/W9jnGc5k+vv96uG7mkR84ccmFyDa4QeHP6/8f3e
EzbU7xf9WtdsmIOGY2Jv1FhAfFOfsdmG6/fwA9//tPFpH4744bsT5DNdsy8e
G5/a+Z7LA2Nu/WTHwJ79IcGPbfz7RyNe+q4INQauGTKeqT3Y1jcak7mu61fl
29T4qrlrzqHaxZOCI5UrlZ9Rm23PtL85coxr1sSD5h5jtnHQeOhawG0N3WMC
z7u2brMlc6xr/8Aw6p2XNXK8uX/TN+oT1oNy0szrQjzznTO+e0a+3d7ptq2e
9athK2oM1RpaX2/8jPzY4VEvuxZA/NA+sesDrgi8258efIR4Ulyp/kTNrVpv
3wmiFrfh54t8hNyRenJx+DN2viVFPeXaAPFI+1jUW74fQ834uH1wJHIl2qzv
d9j6A/Zn7OfLaahfMJ6ohbAH8+DIhWra5YPH+YHPxGnb+5jsjYnz1TqoH7R3
5tomezvX3jHvGVHTWtuOnw48aw9w06fYz/5q5MMux6d2CZt0zeewByJ3SBxQ
o6lW0/p745/Ut5mT7AffMeZMfbrvuxJLyJk6PtanrqfwHJteHZuvalLl3w6N
+t31GL6TadOnq+Wzf8+9u55ZDZNaJvXxrpXZ9OxqGFzPtkZ9L9dszadeTH7R
XpY52vef2H/1nTH2XO292v9VCzKrjbtJ6Ed8J4CaArUF9njkw7f+z6XBJ9j7
UBepPsTcq1ZZDsn3LWxruq1Z7HXfPPCgtYJj7Fgb44x11rC+T8j1gvZ61QSq
DRzXiXomcT7fv2J/wHem2BOwNzCuHfWPmjIeJ/QGlwde6XKA4JL5HYGpfJ+L
60PsTan5UPthv0zu1JpNvbM9TPsV27snnhL8hr04ezy+T8YYIZcuZ27skFPa
+Ee5JGOb2JP46DswfL+JfIFrH8T3zXc6uAYRbOo7fNS+23Oy96QPbHyDfMKt
o16Sy1PzZH8tGyvAIs3epmtXsbNt/Z7vCrlF5ORN3+67Kw4I7Kl2uxn7D4w6
Xu20HMbGr8rdmKvEnvK72FB+yX8CQD3xsQ==
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt1nXMJkUMBvB5v3d2ZwcNEMLBQQIkh0twCZ4Ah7u7hUMPh+AORyBwEDRI
gru7u7u7E4K766/Z+6PZ7bPtzLR92tn1x28/254ppRGyP2lSKtmzTSm/SF5K
qd4FWx62O/1SJpPBHiIfMrufPMAdXsP3CjbXsJm6ty9rwR+mT0mmgh0AW42s
178305Lp2DxCbuR7FVmrP0sZS06jn0Behdm32KPeQg/ZCnZOSp3zlrO9j4HN
ar2NYfPC3qJ/63z8Ry7mN4RdxG4x+NzsxN2tABNfOgu2BWxmGLt6Mz1kS9+s
XTYl9kpzwGYj79CfYGfd4b/2+IfvlXz3g1/Abn42ztNsDVuU7JbSwNlae7TW
rO+SVfnOQ7d+Y6/uUL7n8juFvG+NmeiTs7uJfgPZEHYizH7lcvrV/P6wrme3
PUwd0mXwHeC3wg4jEdsX9G3I7/S72dln8L19RxN71IjlPnYX8mXXfg47ie2c
sI/5/UJ+hb1NPvDdGu09cirO7k8Ym/ZNIt9JTsreZB3v8ts+SZ5i8xFMvEl+
Mo609PoJEevwBfrX9pCHbmd2G7BzxjbWDZtPiXjybWRH38ReIofyO/IabFe+
ONapc33QOz60f1v3L3ZLw39gdyZsSbbOWJ2/+wY2EbYI+7VhztjxGZGDdjl2
sa8YyyrWEXeLR80E2MswPsNpYKfCDoY9z/evPh9ZzvKXbJyrU6cRfMtzka9g
b7C90/vT5Ahx0Itn9xM7sbdLWU/s9RmiLiPO1Kprgzf1UXZiGD4Ls36LaxVH
ir7LwV18S8vQcbMWvsGPBfkexG9dGG5kZ2w38u12+rLkPOt9x+YQuDpU/hUP
snq3enAE56qc1VHe1bXdlu35dL1Y1am9gyzR57aOI5/Rg1fWTPYu+rqoc/6R
H04Mgo/yWfXDsGOHy40Z0Zkt9Vp2J5PZ+x4reNOt3PsYRSnjcHmF3Ujfy+2K
MPsV3OnEPgjObwJjU3ChRr/IUV6z51xwr6rFUL+08tDswi9ycB0bdczz9HOh
mFv1enrMHTMkLQ4zB8sZdD2RZ4SZZcX5y5g+R6098s/87iVym509O3fCgeJZ
g7c4l8WavJftYHKX1TcfDnsd5lnwMctJnh6m74vAO/NiGP0Ws1Zv1/fgl7CZ
2M+XmDPFDC2n0/EzzwCbgo4DNWapmZkX4huz6kD4b2L3Lat12pxuJpSYK87Z
yGtj7RrcPRIWs3wnmLi6o9jhZ6LnsMPbGrmf0McUsTWP0+Wotv19kOcjeq/g
aWf/AY414swxM9wbRa/mO/uZE7OnbN3nNfLbbEacr+J7dyws6qRmjXunO46d
uZ32gMlJ42xVjbq4N9Q0LwATa6evO3dNs28/76O+3erEjE9iynv5thJ9FuvJ
WTIPm+CRGVOfg+FyitriQP6PLpZufRhe5oXZmVFd9Otj3kPXY4PoaWvUKybd
M3hVBvTo1+N6PgWvWnWsx/N37w3MncZcajy74K48NuJozY+4iss+JLgcPbJq
H3dZu+dWcCzLbRMz1gwusYe1s/M35lK1bjG7svsp67sk/qI/S9wTejk7Y1qD
Hv26bn/vNu6gxmyoeqkzhxq5zuP7nHWj+/kecz7Hva6GFX+rfhnaP8cMi7jc
zdW/Q3M0OWbSmeOuNY+G9mz1YmOm1ZiJcX45bcyGFDHgXhcciFyZM0ncnX+H
ovY55tO4ng/Ft2qfoX5q2bRRX7GW4Iv7NeNO4x+i6scSvRAcGtvfS3E/lWH/
v9OIu/E/Us3l6t8lO3/WUwNc7/CzxL+Gf5NmVH8vlQ3+BxbIP3o=
         
         "]]}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j1PFFEUBuAzs7O7gB8ooEYxEkINxliRADZ2WG1hFCQGOjW6hQ34gQok
QEVCAb8ASispqeAXgCIoqFRWRiUE0MTEZ0Ixed5z5869M+dOpTrU+iQiEtds
RGHgOBd6cDeinKrPRKR/5Vq5Rf4nn5Y72MRutvEWr7E/ovaGNc7LD3nJuHsx
wgqneIfzvMdFDnKJVa5G1LiX7NlrRr3O5+rfERnjPV/wA19yg6P8yFfc5Gtu
RZSeefan/Ml7dBp/I3/mGLc5zh1O8Iv51k9/yV9le6T2LLxVf4so2i85Uj9V
71J/kkPvPK1eM/eHnL/fivxdfiy/430usI9zvM1JPbppjcvysPnLxnvlB9TP
MLd8lcbKrexiA9t5ilf06Lr9H3k2/6Z6ejbR7yxf0/lkzTQ3u8iTvMATPMc6
NtKZlvQs9R1RwwPjZ+UynXuUaO0oMj/zzJBep/tyQdb/1DmF/6ToHJI/+T/0
H3HvRGA=
       "]]}, {Line3DBox[CompressedData["
1:eJwVzUkyQwEUheGL8F7sIgMiCtHsQpVIjJNJFhCrMNFGV4UtmJhhkkiMKCsg
pppo1pDvDf4659x2a7tZaEXEGDYikvGI9A0DzOI2IrdDZ9DBO7ooRuRfI6bN
5Ov2dtVu+E3UUJXn9Cv0X26Y2eP/+Cd88CW1fUzIz/hUu5APkJPv8aV2KR/S
eff8Tfr8Ij2iC3hAD2Xc2bk2t84vmXmky3L2q41J/W96jCl+SE+Q8D/0FCn/
gl+7q/IZXXHD/zT7nd28Uj+nayMBjyp3
       "]], 
      Line3DBox[{1801, 2451, 2452, 1988, 2225, 2233, 2234, 2659, 2101, 2386, 
       1989, 2288, 1717, 2406, 2287, 1990, 2290, 2651, 2407, 2408, 2289, 2490,
        2541, 2292, 2409, 2410, 2291, 2507, 2542, 2102, 1942, 1802, 2600, 
       2091, 1943, 2103, 2603, 1991, 1944, 2104, 1992, 2476, 2581, 2105, 1993,
        2294, 2411, 2582, 2412, 2293, 1994, 2350, 2644, 1945, 1803, 2435, 
       2436, 1946, 1804, 2509, 2543, 2107, 1947, 2106, 2244, 2635, 1995, 2203,
        1948, 2108, 2604, 2100, 1949, 1805}], 
      Line3DBox[{1806, 1996, 2295, 2387, 2453, 2468, 2661, 2467, 2110, 2455, 
       2456, 2454, 1997, 2298, 2527, 2583, 2413, 2297, 1998, 2301, 1724, 2414,
        2300, 2491, 2544, 2304, 2415, 2416, 2303, 2639, 1999, 2306, 2417, 
       2418, 2204, 2625, 2111, 2356, 1950, 2205, 2626, 2112, 1951, 1807, 2477,
        2559, 1808, 2000, 2478, 2584, 2351, 2001, 2309, 2528, 2585, 2419, 
       2308, 2002, 2114, 1952, 2113, 2245, 2636, 2003, 2117, 1953, 2116, 2605,
        2109, 2463, 1954, 1809, 2545, 1955, 1810}], 
      Line3DBox[{1812, 2119, 2296, 2120, 2660, 2533, 1811, 2352, 2004, 2299, 
       2005, 2640, 1813, 2353, 2006, 2302, 2007, 2641, 1814, 2354, 1260, 2305,
        2008, 1815, 2355, 2586, 2009, 2307, 2010, 1816, 2358, 2587, 2011, 
       2357, 2012, 1817, 2606, 2121, 2122, 1818, 2471, 2472, 2663, 1819, 2437,
        2438, 2656, 1820, 2439, 2013, 2310, 2014, 2607, 1821, 2015, 2115, 
       2016, 2246, 1822, 2588, 2017, 2118, 2018, 2449, 1823, 2465, 2652, 2420,
        2464, 2421, 1824, 2546, 1956, 1825}], Line3DBox[CompressedData["
1:eJwVz78ug3EUxvEjkbx9q7dAQqtK0Xbyt5ORllRqkCBxAWx1HzZ2A9dQjL2Q
KooydLD6GL75nuc5503eX+vyfPYiIiawF5HkIzINNCOyO/KceT8iTfhAV9UV
5DXuc0bn07Qrz/M6HnVtTnUvKJo3IiZ/2XEywIJ50920+dU8xW98g1Oc2R3z
Nm7t3nmLh3zNJX5AB/e4cn+iX/SfLRzKNXkJH/Ku7I3pk7mnK+PT/P/mLyzb
1fHs7ohzuhFW5Bn+xg9W7cZ8h8ofnMkkEg==
       "]], 
      Line3DBox[{1841, 2032, 2033, 2628, 1840, 2134, 1408, 1842, 2129, 2206, 
       2562, 2510, 1843, 952, 2657, 2317, 2034, 1844, 786, 2647, 2318, 2035, 
       1845, 787, 2319, 870, 871, 1711, 576, 2226, 646, 1846, 985, 2448, 2141,
        2611, 1847, 2036, 2132, 578, 1848, 2133, 2207, 2563, 2511, 1849, 2424,
        2425, 1020, 1850, 2496, 2642, 2320, 2037, 1851, 953, 2366, 2038, 1852,
        2591, 2039, 2040, 1853}], 
      Line3DBox[{106, 417, 1093, 107, 418, 1094, 108, 1095, 109, 1096, 110, 
       1738, 913, 111, 1506, 522, 872, 112, 1520, 543, 113, 544, 1097, 114, 
       843, 422, 1098, 115, 957, 1099, 116, 1100, 117, 1101, 118, 1425, 424, 
       119, 1426, 425, 120}], 
      Line3DBox[{1867, 2368, 2369, 2145, 2253, 1544, 1866, 2044, 2144, 2612, 
       2498, 1865, 2569, 2480, 1864, 2568, 2479, 1863, 2531, 2567, 2440, 1862,
        2514, 2566, 2211, 2143, 1861, 1542, 2252, 2142, 2043, 1860, 2271, 
       2272, 2210, 2270, 1569, 1859, 2250, 2281, 2251, 2140, 2249, 2389, 2248,
        1858, 2279, 2400, 2280, 2139, 2525, 2610, 2444, 2388, 1857, 2138, 
       2209, 2629, 2513, 1856, 2512, 2565, 2208, 2137, 1855, 2497, 2564, 2136,
        2042, 1854, 1289, 2135, 2041, 2367}], 
      Line3DBox[{1868, 2370, 2371, 2147, 2235, 2613, 1958, 2146, 2045, 2148, 
       2614, 1959, 1869, 2548, 1960, 1870, 2549, 1961, 1871, 2529, 2550, 1962,
        2447, 2469, 2662, 2470, 2150, 1963, 2149, 1550, 2254, 2212, 1964, 
       2227, 2273, 2274, 2153, 2236, 1198, 2152, 2255, 2275, 2256, 2154, 2237,
        2401, 1965, 2228, 2390, 2392, 2391, 2155, 2524, 2615, 2402, 1966, 
       2321, 2156, 2157, 1967, 1872, 2515, 2551, 2213, 1968, 1873, 2499, 2552,
        2214, 1969, 2158, 1301, 2159, 1970, 2372}], 
      Line3DBox[{1874, 2046, 2481, 2592, 2160, 2047, 2323, 1739}], 
      Line3DBox[{1878, 1977, 2051, 2617, 2166, 1976, 1439, 1877, 1975, 2165, 
       2555, 2516, 2328, 917, 2329, 2050, 2326, 916, 2654, 2327, 2049, 2324, 
       915, 2325, 847, 978, 1773, 560, 2229, 846, 977, 976, 2445, 2151, 2616, 
       2163, 1974, 2215, 592, 2161, 1973, 2162, 2554, 2517, 1876, 1972, 2441, 
       2553, 2532, 1875, 1971, 2648, 2373, 2048, 2322, 914}], 
      Line3DBox[{1880, 2482, 2570, 1879, 2052, 2483, 2593, 2374, 2053, 2331, 
       1743, 2426, 2330, 2500, 2556, 2168, 1978, 2167, 2257, 1314, 2170, 1979,
        2169, 2618, 2164, 2466, 1980, 1881, 2658, 2442, 1981, 2443, 2054, 
       2332, 2393, 2459, 1029}], 
      Line3DBox[{1882, 1983, 2173, 2631, 2217, 1982, 2375, 2172, 2630, 2216, 
       2433, 2432, 2339, 1318, 2337, 2431, 2430, 2338, 2057, 2335, 2429, 1746,
        2336, 2056, 2333, 2428, 2594, 2427, 2334, 2055, 2460, 1011, 2171, 
       1792}], Line3DBox[{1884, 2484, 2571, 1883, 966, 1769, 967, 309, 1461, 
       461}], Line3DBox[{1887, 467, 1513, 529, 316, 1643, 730, 315, 1642, 728,
        314, 726, 1641, 313, 724, 1640, 312, 466, 1465, 465, 1886, 1984, 2557,
        1885, 924, 1749, 925, 311, 1463, 463, 310, 1320, 310}], 
      Line3DBox[{1889, 2485, 2572, 1888, 2176, 2177, 2620, 1890, 2058, 2174, 
       1329, 2258, 1891, 2501, 2619, 2175, 2059, 1892, 2376, 1332, 2340, 2060,
        1893, 2595, 2061, 2062, 1894, 2558, 1985, 1895, 2180, 2181, 2632, 
       1896, 2182, 2341, 2183, 2621, 1897, 2377, 2063, 2342, 1336, 1898, 2378,
        2064, 2343, 2065, 1899, 2379, 1337, 2344, 2066, 1900, 2380, 2596, 
       2067, 2345, 2068, 2461, 2403, 2404, 1692, 2462, 2069, 2381, 2070, 
       1901}], Line3DBox[{1903, 2185, 2186, 2622, 1902, 2071, 2178, 1557}], 
      Line3DBox[{1915, 2080, 2230, 604, 1716, 882, 881, 2349, 823, 1914, 2079,
        2348, 2649, 822, 1913, 2078, 2347, 970, 1912, 2519, 2574, 2219, 2184, 
       1911, 1485, 2191, 1910, 2633, 2077, 2076, 1909, 2075, 2074, 2597, 1908,
        2073, 2382, 969, 1907, 2072, 2346, 2643, 2502, 1906, 1025, 2434, 2655,
        2530, 1905, 2518, 2573, 2218, 2179, 1904, 602}], 
      Line3DBox[{1929, 2277, 2278, 2223, 2276, 1576, 1928, 2265, 2284, 2266, 
       2198, 2264, 2395, 2263, 1927, 2282, 2405, 2283, 2197, 2526, 2624, 2446,
        2394, 1926, 2196, 2222, 2195, 1925, 2521, 2580, 2221, 2194, 1924, 
       2504, 2579, 2193, 2084, 1923, 1351, 2192, 2083, 1922, 2261, 2262, 2190,
        2260, 1564, 1921, 2082, 2189, 2623, 2503, 1920, 2578, 2488, 1919, 
       2577, 2487, 1918, 2576, 2486, 1917, 2520, 2575, 2220, 2188, 1916, 2523,
        2637, 2259, 2187, 2081, 2199}]}, {
      Line3DBox[{1038, 1357, 1587, 1358, 2534, 1359, 1666, 1240, 1592, 1241, 
       2541, 1594, 1667, 1250, 1598, 1251, 2544, 1600, 1670, 1260, 1605, 1261,
        1607, 1673, 2645, 1269, 1613, 1270, 1617, 1759, 2657, 1280, 1680, 
       1281, 1504, 2629, 1410, 1411, 1096, 1197, 2549, 1105, 1762, 1763, 2553,
        1764, 1765, 1311, 1634, 1312, 2556, 1453, 1320, 1462, 1321, 1555, 
       1464, 2619, 1330, 1471, 1331, 1754, 2655, 1752, 1753, 1142, 2577, 1225,
        1150}], 
      Line3DBox[{1039, 1360, 1361, 2535, 1495, 1362, 1593, 1363, 2542, 1376, 
       1668, 1252, 1599, 2639, 1253, 1601, 1671, 1262, 2586, 1606, 1263, 1609,
        1674, 1271, 1616, 1272, 1619, 1681, 2647, 1282, 1624, 1283, 1700, 
       1412, 2610, 1701, 1760, 1291, 1780, 1292, 1779, 1738, 1736, 1737, 2550,
        1106, 1442, 1443, 2554, 1445, 1313, 1452, 1314, 1554, 1455, 1322, 
       1463, 1323, 1639, 1688, 1332, 1646, 1333, 1648, 2643, 1341, 1790, 1342,
        1143, 2578, 1226, 1151}], 
      Line3DBox[{1040, 1232, 1233, 2536, 1496, 1365, 2600, 1366, 1056, 1387, 
       1499, 2625, 1388, 1672, 777, 2587, 1608, 1264, 1610, 781, 2589, 1618, 
       1273, 1620, 787, 1625, 840, 841, 2389, 580, 1519, 859, 1506, 983, 1032,
        1031, 2662, 1429, 1305, 1444, 592, 1510, 1447, 1454, 2618, 1448, 1789,
        1023, 1749, 1748, 1127, 1334, 2595, 1647, 1335, 1693, 969, 1694, 1343,
        1483, 2623, 1349, 1350, 1152}], Line3DBox[CompressedData["
1:eJwN0C1IQ2EchfG/endBg3N9gtcPZAzMxrlskoFgEZcsuqBJs0m3NDTrwLjV
FatBTNr8CDLQImNtFsVfeHjOObz3vpe71ahnhxExgc2IpICniFwtYmZVfpa3
+YX3bGX5FZl+gDdblb0jKfGRvsbvOI5Iz3GBrn2Hm/ZTHuMH9+jYhjyJHqb0
M85hAYn+we5MF+UWL2NJHmEObT2PWXmAS9y6c52v7N/41Ov85Vt30Y+Y/uV9
3Ml/3HC+4twKP2ADj54pYl72b9IbXOPkH8CwKOY=
       "]], 
      Line3DBox[{8, 354, 2092, 23, 368, 2104, 38, 1807, 53, 1818, 68, 1832, 
       907, 83, 1846, 519, 981, 98, 1860, 542, 113, 545, 2227, 128, 650, 450, 
       977, 143, 964, 2443, 158, 1886, 173, 1895, 188, 1909, 485, 203, 1922, 
       500, 218}], 
      Line3DBox[{1043, 1236, 1159, 2601, 1044, 1245, 1595, 2582, 887, 1059, 
       1254, 1669, 2584, 1168, 1067, 1757, 2656, 1758, 1172, 1074, 1404, 2609,
        1405, 1178, 1082, 578, 1416, 1185, 1089, 2566, 1417, 1774, 987, 1098, 
       648, 1521, 559, 2401, 874, 873, 1630, 915, 1112, 1315, 1635, 2594, 920,
        1121, 1324, 1640, 927, 1130, 1474, 2621, 1475, 1215, 1137, 1485, 1220,
        1145, 2579, 1352, 1228, 1154}], 
      Line3DBox[{1045, 1160, 2537, 1046, 1246, 1165, 2644, 1060, 1255, 1602, 
       2585, 1726, 1727, 1068, 1265, 2607, 1397, 1173, 1075, 1537, 2561, 1274,
        1406, 1179, 1083, 2563, 1407, 1186, 1090, 2567, 1761, 1191, 1099, 
       1297, 1626, 1627, 1628, 2615, 1713, 1712, 1306, 1631, 1741, 2654, 1742,
        1113, 1316, 1636, 1746, 1747, 1122, 1325, 1641, 1750, 1751, 1131, 
       1336, 1649, 1650, 1651, 1138, 2574, 1476, 1695, 1221, 1146, 2580, 1486,
        1229, 1155}], 
      Line3DBox[{1047, 1161, 2538, 1048, 946, 2436, 947, 249, 2114, 379, 2115,
        257, 388, 2124, 265, 910, 2425, 909, 1091, 2568, 1192, 1100, 437, 
       2157, 438, 298, 2329, 712, 307, 2338, 721, 314, 729, 2343, 322, 739, 
       2347, 331, 536, 2222, 491, 1156}], 
      Line3DBox[{1049, 1162, 2539, 1050, 1379, 1380, 2543, 1382, 1256, 1391, 
       2636, 1257, 1536, 1393, 1266, 2588, 1398, 1267, 1611, 1678, 2646, 1275,
        1621, 1276, 1623, 2642, 1284, 1788, 1285, 1092, 2569, 1193, 1101, 
       1433, 1434, 2551, 1508, 1435, 1632, 1436, 2555, 1450, 1685, 1317, 1637,
        1318, 1638, 1686, 1326, 1642, 1327, 1644, 1689, 1337, 1652, 1338, 
       1654, 1696, 2649, 1347, 1656, 1348, 1703, 1487, 2624, 1704, 1770, 1353,
        1782, 1354, 1781, 1659}], 
      Line3DBox[{1051, 1369, 1370, 2540, 1372, 1247, 1381, 2635, 569, 1498, 
       1384, 1392, 2605, 1385, 1787, 1018, 2652, 1733, 1732, 1076, 1277, 2590,
        1622, 1278, 1682, 953, 1683, 1286, 1419, 2612, 1293, 1294, 1425, 1298,
        1299, 2552, 1509, 1438, 1439, 1114, 1457, 1511, 2630, 1458, 1687, 811,
        1643, 1328, 1645, 816, 2596, 1653, 1339, 1655, 823, 1657, 854, 855, 
       2395, 610, 1523, 1355, 1660}], 
      Line3DBox[{1052, 1237, 1371, 1533, 2602, 1532, 1497, 1373, 1383, 2604, 
       1374, 1061, 1169, 2545, 1069, 1174, 2546, 1077, 1180, 2547, 1084, 1287,
        2591, 1418, 1288, 1420, 1544, 1545, 1424, 1547, 1546, 1426, 1300, 
       1437, 1301, 1440, 1307, 1451, 2617, 1308, 1115, 1459, 1512, 2631, 1460,
        1123, 1466, 1513, 1467, 1690, 1691, 1715, 1692, 1477, 1785, 1786, 
       1755, 1702, 1522, 1558, 1716, 1559, 1488, 1561, 1575, 1560, 1516, 1576,
        1577, 1492, 1579, 1756, 1578, 1493}], Line3DBox[CompressedData["
1:eJwVzqtPgnEUxvEje303QKtB5oViUps2LGBTgyO6uQkW52DTYDCbnAYMJIOz
uTk3N4MmE2QLEf8AggYCFvVD+O65nPO77DYPio2ImMB2RHKOTsTkR0RawGxE
btyf4l3flTeoneQYb/IUreOFz9M9PPM5WsUTv+jMHWbkHXmNPsg/uPHONMb3
bOJed4UsX8It/+lMhf/DOtq6vq5Mz+RVtPgTnb+k3/jSLeGaf6UZs0M7R7L9
9BEr+jlc8gPzmvkI+/BWukx/zf0vueCH2NIvYJ7v/QNJwidP
       "]], 
      Line3DBox[{1148, 1223, 1481, 2575, 1140, 1217, 1480, 1340, 1557, 1133, 
       1211, 1469, 2620, 1468, 1125, 1206, 1769, 1768, 1117, 1203, 2593, 1684,
        1309, 1109, 1740, 1739, 1629, 1303, 1103, 2614, 1195, 1295, 1094, 
       1188, 1290, 2564, 1086, 1182, 1408, 1079, 1176, 1401, 2608, 1400, 1071,
        1729, 1728, 1603, 2640, 1258, 1063, 1723, 1722, 2583, 1596, 1248, 
       1054, 1718, 1717, 1590, 1238, 1705, 1706, 2598, 1526, 1525, 1517, 1230,
        1661}], 
      Line3DBox[{1149, 1224, 2576, 1141, 1218, 1472, 2573, 1134, 1212, 1470, 
       1329, 1556, 1126, 1207, 1461, 1319, 1118, 1744, 1743, 1633, 1310, 1110,
        2648, 1200, 1304, 1104, 2548, 1196, 1095, 1189, 1409, 2565, 1087, 
       1183, 1679, 1402, 2562, 1080, 1615, 1614, 1612, 1268, 2560, 1072, 1731,
        1730, 1604, 2641, 1259, 1064, 1725, 1724, 1597, 1249, 1055, 1720, 
       2651, 1719, 1591, 1239, 1707, 1708, 1589, 2638, 1588, 1586, 1231, 
       1662}], Line3DBox[CompressedData["
1:eJwN0C9Lw1EUxvEj3F1xSYW9AAUNFh2mNbH4B9MMWoSxIha3aFPLLILB4ppJ
sMiUFYswDAaTWH0FGwZXhBnmJ3w5z/Oc3z333F+1UZ87jogJ7ESkc7xHFD6x
QZ/glR5EFLfUdb6JF7ov21R7/BGeaeQhfvgauvRHxKTxeazfUct4wor+Hh7p
b70/3NMzWMa03i4e5CPcyBaxILNLupNd8YbnzK/hVnZhr1W1xVfQ5g9880a7
O13zh3by5rQEM6bsluZxqVdytk5/YRbmFLdlv9g3xz/KZzj9B2BIKTg=
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxcXHlcTk/7DqEsKUWU7BKhVKLomUKRJWQNWVMJaSeSlLJVKqWixZZUiJQ2
PdO+p32lfd9tbUi/Gc59vu/n9/4znzPnPDP3XHNd133P+L5pnz8x7xQPD89o
Hp4JBqQdw/UfIf8bOg0t6qXt4CDXJ7V26XrbXFxpfcgvtu096j4kbmHxQYHr
0pvgm+QggRujwoWrlAxQ+6pXC5a8zeBaqseetjAOxy37ApQFh7ahlvZwH2er
QI6pcyyPzMVS2q8VyO2g/devPbvGcV0pc+3ItoV0nIPrDyiTcV52SdSZcXxu
6EyaesmLzHu43yfDi8675KxoLcc/RTBRLyOai2h8v2//i/P3bY5Pu5Xl0mEp
VGmtq3xrTjb9Xuz1wBqOS/mOWy2/LRAZ//3y4tl0/GeqyrM45oskw6Z4/kIk
ntLoYGcaD09usTmX9Nv0/rAl/YFCXfwOpP91utgnXa6L8+nA/VK8ZJw3XvPn
nSfjhPV9WTSL69M5VBZtuJbMe3xVgHgZmVdM5cEYPm7U6KUTTk1+yQm4SuJr
QP/irMsEHAFXwBOXh03YL/vnBrSoU2P31a8OM3Ap39J1Y4MCOQ9Mm31f7VNF
PUrj9G1+fMbpA6OsDJ/G4JI32Zevf7VG3fE24719lO14/v0P11hcvnrw1BrU
tYi/snTqdZRmbF+TaX8R14w703I8Ug514t07t47fiIp/TQqIOaqLi39NFI93
Woy63msFjH9RTNZzxKh1ygHu9kNiFcFaFP9/LYnv7YlJvKTl69+3sY/GGdM9
aQUq2KhhHZJeiJo2J7vfVg1CrccmVvY/1UBYeoupLc8P1Hbjfsmh306oafkB
C7Hfazk2D9+jW/Z3UccM2Z8KBntQg2PM9tR5W/GH83dW5si0o/aeqkv31s9H
DYbH9H0T+XHbPGe9s/e0UM6jDUsNl6WixkrDQwOv2wiex5qnzFTl+KTWyMU0
fqdx7hDhfQ28BJ4CPwFHwJXFsy5T6tiQTgq0qNlq+P6Xr3dx9Rz5sUOcbago
7mLHPrk5qKP9qbOs51ScuTFQMe1YLMczwFbxomIj6j1jNBz6ZzvKKG/on2C0
B2eU1/nnunSinpqnBu4CV1DNuHPSX5LdcJqxXcg5mxGKv7BDcCHlZanSCT7Y
N8rPOz895QiOKcJtt/MIrhuTfu05T/GM2o1XIBJf1D23B6RdXPPYQorGGfeu
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
ZddOefy9Kai95A5iJS3f+v77SJo4uOnK+NaU1H1NP7rvSCWJGamkSXTqaEqJ
fuXEXqqk9l7E+GCn6YS9lz322qFG2XtZx4SBP/l72Y7mvGcksZfX+ciFCjSx
10WDtfpDSW35QYXZR3+QlJLKpstX2tL3b9Onn3MO4+OcNQfGLSWxSm93lsm+
ImnXlYb1OuFIanWGNy0L3kXZ+9r9Y1PTCXtfc65W9ubvaxWpVdPosyMp3boE
3iQVSyYuu3o4mZQ4qGTpJTjTxJ4pfl1XXSCFq03Seh69Qir9PMZ18AyhkT43
hvffdYRUekt01lRvzcdv336dF0rLX1U5/bx0m7xeskv5YdQNUnKslVJQ0jpa
OThn59eF+8izA0Y1pzeOJ8U27crnndUgIRsL3is67KQpyZ/ci76tIHU9r8yR
+nCNBqz/8Wr4GU/6OGlkitX8w3w82fdcF0qy9/T/2a9xDH2bUpj/efACUiMf
Ovy2yUlSkJv2dMf8ReR9vG38x92sfj5ofepNwlHq0+fFpT5GnQh7L66KqEnh
78UxXQ+mUvPPfr9Ha7J417WDlm2AAyls2/w45qMKLVwbsU8mgvWPhSO3O+0c
TYr7nc3e47ebXHRqvNpuw3JSbXTVZJtHPB8/P5+vu5xW+DZu13tjTKINpZMv
WR8gxRkbZVcNKqHVm8/tlr9lT+6P+m2c+NaYFKzZNDVhz0laLXNz6Cd5J3pl
v+OC1xOySWH36i1drrymiXVdqmxGT6TvjPdWj1QvInWy9sP196WSRB+NcQvn
ZdHnOzMt+1vb8/GBug7dm8jLAMmoyImHyT3z5FDTsd1Jvf2kw9+ebyAFvW/8
ruucSaOk3vQfGNaZjzMUlhfsIAUz8p9a0xzqOnvZpFklP0i1q5lTv9c/afn9
etvwZmMSa5y2XNNvMyk54aGjrmnA4lr0jK6+l8iZTi9Cez6OIQUBi47aDS6j
lV8/Gt1L2kDfvpyZbh3dTArXDFBf17uG5v6QjeoeGkIfHGkrt3OqB6lRb361
fP1MUqB95sYr/X3EyrXn0GVB9/l4y6QhVctIpnn31pm/h5IoRbtNkystSK2U
k3rZ1uekPPRLr/tzbUia1w2n+g2tSNG0se3mTGD1KvTzoTPdZ9A0r8DbnXpP
4duHbFC6QtnvGpjx5h5xnb2eGnUaz39X9pbsL/RlgISsxJUSes883mTowUe8
fAL17Irou7opB+KWJhHfD+1N1t5dSOqHZFr65D6gVm1y5Pv1GUkSB3//9FTb
g7fTVY9iM0hiXVc//4ZM8s54z4b+o3vx+yIt90OTsPs4Zsi4Y+TKfus5DTor
+X00lgvdRVi5ERflDHqmU1qN1IPJvNyOqOX2pE/ev7yzSDaJVo+Nenjs2F5S
cHplyZ4LhcT8S19141ZjKauHE22W3+f1MPzD2XDRzqHdQ3tvpv6PnBabmjwg
LP64uFRL8fjTec4NGXDm9f5y5m3+2h4h/PmEPuPODLkZQt42LUh2XzKZ1E1t
frG2y08asjGzMsghhKQkf9x5o3sb3h5Pdelyh7D22//Ldi367MCaw6v0lrL2
Kz9/5x32XuXbKK8nx57fDaXTF73uxeu/0wyFHiRa8mHfmsHRtKooNTyqaAop
CHK23qUcS54dSU7TTLekFUsmpOqmPmJxZuiOm1FulLXfDlvmydL38fZXqoxD
efsNWtawhiYZ/u4QdL+KFh3Ktp6f0+PP99nj94/RjAntL92c7ExTsi5OC50x
78/33G+n3tGYkYoJ56xdWVw0PLVA+TCPq92cbj4nbzJ2uPq2vkdvHf0t2zXg
Ne8vLqW/Zu9XhrNNP/RNpMX3dW5POfSOVETOUrXWt6CxSjFxvuU7aNr1rqGR
1+R4/MxNzd+r1VnxZdT0YDP+nfrgww2+/Du14al9YVo9+u4KVfL9QdMCTJ0y
lFbz7zJ9DKN0CT9O/IsYFoe7hkwaqcmPk7c4yJvF1eR142cuYXF1U9bVm2tY
XD3deY6eC4+rF1xvNLK42urVBN0Z/Pv+yH7qijyuSgx26c/i6k5H6+euPK6G
jrXN4XG1R7LvJxZX15h7f8nl90X/8DhK+e8NDVZi/aNE1lSvHfz3eq2UaMP6
tXnrmz9r8H7tWzfvznx8u9xvxlLWrzkFGHc8x/s1R5UX5bxe9Rw3+RTr14IK
XUuSWb9G9s5zyOL92p6eY64TqzZF+4+fNGf92veY+tVjeHtZv/K6BOvXFGvv
LfBj/Zqhy9Gw8D/l3/HIRdav+W2cMmQr69ey51qXu/J+bUWvplBWvy/uippw
k9V3L3sdr2t/6vkDizB2/yr23Y5yZv1axus21+/zfu2L4vdjPM7Lr19ymsV5
e5/2bbJ4PXkw9OsJFuffX2318BaP89mzzRR5nM9cv/0sNf+i0nag5Dge5yf7
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
Rt4OKv39cKsPKZ17P9u8ix/NLjIYXx0ZQnIyQ7dMsR9NKurGTbp38DqN9Ps+
NHGlHE2tOO3WEHaD1IZHdJK8SUlURejqHn4XaOrAIUvCR6mT2lQZGdXYBlpl
aTB7SySlr5rrDtn+UCaFPUx+yGQ/ILnX+q/1GpNHc0e1u6FXPJu9rw+advdI
FxJ4QM0r7W4PktQwf86ww7v5d/nvHw4q0YB+q9v+ql1K2PVPfHvixJ/rD/Vt
poljbNZelltGr8f8mnLZO5bU1XXasW6MG42qeFxVX+xOUgcOVr3TEMqvZ80h
e2P+O8c8cA9mv3tHQZcrk9jvfeD5co88eWW3zCm9swUtlU/LDV3kQ8q3yw13
c7/H5xnoOZt0YH+je3cY+YrPNzi/YYYaZeXvldlsQ1n5L/cdJ/+n/GePXEFv
KjnedVV+T9OKCk5FRsqS2rRq1SZzJRp1d1iRjRTbv7rul6lnDak96La71Zin
hO3v5KQnRdj+p6c5jP+z/7X7dYTtX7w3sg9h+/+oI+P+7E+Ux4jrht+B18/u
l15x7MIydr9CavKDPdn9Gi+r3MaC3y9ny1HL2f3ymPCj1VN+vxZcubaX3a8n
PsnaEex+DVZecqiel49hu8td+P3ylFu1h92vqmKHIT35/YqvDDCH55D78Bzy
GZ9D2H1UnrLyoyG7j3K71svk8fv4Jce8NYwrXoZxxeEwrljP7m+/U3NUdrH7
u8A0SHcsv78Zm7xXsPtrarpv52R2f2033FYK/VPPn97RY/fXNrpdaD27vz+u
7cxux++vdunyTuz+PvUZ0OzN7u8Q4ylKEvz6272Yfwnq8SWo1yFQnwPZ/V0e
6BS6mt3f9OhF38vZ/W27IMlrBtzXF3Cf28H9VWf3127KBPqB3d+gW+euKPD7
q3UnLJje8u4xQ+NqHU3c7vZ01cDfpK7gjdX85hX0Ra/R+37Pbktvy2+S67VO
g9SfzIhzm/KOvi4br6iS/IqkmqVGaha9I7UHYtRHLpTk53N8/U0N//Lz5nmW
vKABMbZR33pW0hft+902XBNH6t0HuXjtaUduebc7lZA6hSRud/c+t6qOn3fa
xNtDyYteGgrTqtXIbfndUY2TP/LzFgZVXWTX2e52zdfz7Drd5yqtvsj3152a
NYhdp0a3hW/7sevcWdHnQg++f3HF7hR2nRO9tWvbs+tM+5rXFMiu89X7Wx/X
8flzHp53nuFffp3WZmXL2HXaqJT8vMCuc0DI+vMD+HWal7m1ZdfZQyFj6Hp2
naf67TozlJ/XpHiUCrvO0buifwxi12n2YOb0YH7eN082/iKvyyYtnJt6k7Lz
1vosc+Tnjf3api2NTFDplL07lb7fsmW8wffHpM5WelrDok80TsV5zJ7lrL+Y
UxOwtU0RqZvo3f1X/Rh2nPHPLno9ZsdJfRBjc4iX8+DIyrHsOMM6Nr/5yo6z
WTX192p+HF2bqz3YcY5rLpbWZ8epSqtfVcGPI9vW7TF9EmvnsC/bmRYMmW9Y
qfedVNsMzu6+OAPGXdvCuOtxGHd9TWlT4RHZdSY053ytoe8XS1JjUC3rtdeP
vjFz9AjxsqRJH84W5GVWkdqM1cWqj2RowbiDPgERH2iwxqhniXfOkuo9P+x1
XJ7RzC0xvcKTXpDni7sOtdk9n9Qqmfs6SIyHeQ47YJ6Dq5jn4Hvr+I/r2eNo
isb+6nNx7UmdwanVc8uNwXvVBP81UXi52ZdUL09Q+8mev12XJryzIeULPmx6
sOEHSe6inNe0qRXN/S0z3mBvZ1Ll9ftgmEYwLb7dtu3SK/o01cDnVPmiOaQs
v8NtXa1PMA+hFuYhvIZ5CC/py9tx325360eiHbdtvNNqK6kfem2X/fx48GRd
wZfdAa6sF00eMKbbgId+JG2j8rO454/5fGDb5+XnSEHj767lxomk6FmDSvyF
fqTYJ1z1ovITumVoythLl27RpMEOHsp775O6e9HHpqlsI1n670y81k6hedbm
P9LCLpOKvLB09Tcpf80fiBTzB7L032a+vTaR5FlbDJs6/zTfv85tc8J/uLUJ
ZIuqi9+K4DLCzntb410aP6/Tm7ETadFM24sf4o1IksO8AGvpIlJx7vt6Z/0t
NOrXtelOcu9J5lHDPflain/mdcssHExLAts9lPA/RPMebs4bW1XM54037ilf
Tl7eTrC4Nq4njXa0eDE0YsyfcnPVfA/zBCRhnsAKmCcwkURGfNOb3V2CPpn8
PnhGb3v+Xa/o5LEC8vBs/uKRcwqId7v6qE2ph0h90YbDJ8/vpykPCnc5dzxM
i+2U7g/6MIuUa4y4OTjeBJzbHeDc6oNzm0yTu/SLj3DwIbm/pavbfv3I60Os
7EIpkv/eukuvrntpRsUKac3pA/h8+5yzeV9p/vN5U1Zom9CrtQr1uz7lkOqo
ZTn7q2xoQeOvkdujttKiZx/bhEw34vexT6ZPBS018AvRl1lE0/2L3Nq3H0tK
gofeM7tpSjO/d3KZKPeblk70uqP8iPC8AKW67YUkc8urO63CFejzxZ11zs1v
zdtF8uXACrq9bdG3AoVomtPQxsTl0WZS42IzaL/yMtZ+rS+a1C/l7bdmcchG
3n7dpE02s3aad+Tg9CDWTuvOd9f35d9rXr4f08ja6f5uZtN9WDv1nHPirR5v
p7Szdz1rLyrZqqyfKmzr1n2R5i3eXlZN3GLN2++YuyadWfsd3ceoyJ233ydh
MktZ+311bmWPONZ+O+fcffH6z3VO9VFk7fRIxdMnu1k7PdAlctFF3k6Hvz8R
zOr5L7Wb5z6wev6xtVTeF14+g/zblML3Ypu/viMH8naqaKngztqpdFxckAm/
Ly+XOMxj7VS2JG3Kb95OLRft0ODtNJmamrL2mKDa2KeRtUfLAX0j6ni92pm0
O4u3u3Pdnzvzdrd7Cfu9PB/KelY/Vj/lHXMNJrP6aZr7xlGC18/ySJ+ndIuq
SX6SliJvd8cUgt14/XfpOaEbb3cy3dVHsHZnIa1VEM/bUe250XNY+3o3YX2H
H7x99f9h1My3Z8h5rCJbhjbvKPLcxdvRY9Ojnvw4hyKfnePtKPzkL0/ejqK3
SSTxdjQjPPY0a0d+2u2vWfJ29EqrU/WffLSzZmWsXv3uVequyOpVw7DRcg28
3Ab8jrrL6pX/UuMXzaxeFYQ9uKfN69W59qd2sHrVxWJe9gxeryR/umnyeqW+
za8ra3fxerv2a7J2t63X8T4af8pnRtFz1r4aBw2Kf8LaV0rObLmBvH2VSGzX
ZO0r50pkQTJrX/lf3w9Q4O3L7WtPJd6+TqV3KOTtKzHR34G3r2OtI1xZO1I+
f7iTIWtHMssPvHjE79fRQXN78na0Ss78J29HZ4dIF/N25NsU/oa1I13Ja6+v
snbUwfttYylvR9fNYo1Y/Y/RbGN3i9V/paN+Xgm8Xl3dI5PG6n+h7NeiZaz+
Sy9b8bsNq//WFXvqwyMuZN4KNPOQYu/XJhPf6r3i7zurW69S1XLMCQuTfkBJ
6Y02Gp7+I3j+0fu4rdFa7ps6dz7TNZm9b7qEWWfH8PfNku/dBkW46xi6J6iy
+Gngcjlwz1G+/ZvljAsRB9zW2ylmtON5TP17dN/Cj1Mgt++41oXK582dpwzg
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
PpIx2FD93PifpHa4XPK1WTGE1Z9wlxM2lNWf4kVvZvD6M89fZuR/elkt293+
2j4ZHC2PvxwtE9h+7u/ttNLLc/ep5PUkZL1dlLyyI8+b+33MZjll9X/J8l+K
xFk7QClbM4jX/9ftsrV4OYwy3RfByiFt2pbE8bwcevrn6rJy+NU0WnIFK4dI
762acrwc+k33TWK/9+b5/s+7s9+rX3jaM5/93nYy7b+nUQNd+ZVZRqsoi5Oe
2aeH8zi5s5XVYlq5vaej2vUTJHTz9cKerSRJcf8b0rOmuVGD+Sc6H/rZm+1v
sevzB12+v6/0GwUSsrwiROrpJFquGZY8Uu8uKU2N9xn6aiTN0m2W2mJlTp8/
lg7MPaxDavJd0wOTFtHcpc5Ljfso00dhXwJ2n/xJahYvqSU9t7P9f0wOy9dl
+7cp0f7whe/vWTt5KNv/2E5ro4ds/8+psa028f39NHqNIu7TjBRnFfQkJVe+
yU344kQqdis9S1BsIE+ivO8Mi1pICsYHX6kfnkSqzb8fbdVtJtt/09usTtPY
/o3+8Rcy2f5dFfoZXmD7X15zPcqW79/5opIZ3//91FsN4BSNAKfoIjhFSbC9
K2y//j/buSPUARyh2+AI7WjZPiEPtkfD9l20Kval7c177emDHUvMn3/JJYUr
2/Q26i1Nk/qPNX42dBAtC/2l9ljzHSnxcRl+XWY739+tUn4k23++blv9Z3z/
DrpfzrP9x/cMfhHH9v/5dIqdBN9fV7l/A3g7N8DbyQRvJxy234ft72B7GKk4
pUQtJPNIiKX+FqmUUlIyp7O5xsYE/C6I3wnx+yB6H+h/oPuBjoZwNcDTEB4B
+gToEmCeP+b9Q76/yJ+HfHrMoxd56ZCnjvnp+F6E70n4foR+h/A80PFAR6DF
FYgTngDm52O+fkueviTmY2N+NuZl43sXvofh+xe6FcKxAL9CuA/oQID/IPLS
IU9d5KdDvjfmf2PeN84rxXmmOL8UHSJ0idAjwvFHMR6J45AwDijGBXE88P+/
nlSCGJ+C8SoRV/F7Kn5fxXWcW5yOfuB27Aevw1w4F+hegHfxl8foIeInzjvB
eSg4/wTmYeC8DDEfo6W/uQT9zyXod5Qxzx/z/kW+P+TPYz495tGL79/wPRy/
g6PrhM4T+k44rxTnmYr5pTCuKsZZcXwVxivF+CWOW+K4Hozz4fgePsfAc00b
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
cX//5uLi8YQdp6DdqLeUHSdCznQ2P86pTcPl0EeAfNXLwknA/HbMd2/Jc/8I
82ytYZ7tDZhnWw7brWD7XbE9Y7D+6VcX29MXsTcPTFqyhTsA3dWKPKj/1G6H
zo9PpynJ+cMnuJqyOF96WDEogj5v9iy/vHUeTSKZq95InyJ16xZ+XhsZCNu7
w/ZLuJ34Tx30qWDJc5KSnHda9hLhxzkbMURVOAvoLoC3wK7HoC6p7DW7nsA2
tU7d+fbCGT1OsOsZsFujMpJdT57D0Hu2/Dhe6r6u7Pg9+5RtN2fHz5+8N8mS
b3d8sCBLuAboHKBvUC3bp79zgDw5Hd5F/eqvE6Swz5ILw0ot/4oDnf+JD//K
F76A5c+P0011QCU7zsChHdpL8OP4TV6oRpP1o6d9SZ5MYzP1ytQNVXgefamp
TDBsXwrbFWD7fRoe3b/tmYs3SeXC9E0G1h1I8STZ5gWLXtKoWZv7W+3oTiq+
rU5s/TyWFO/JmOpqPpRUuH693O7FCHLKSl/5SGICKTk4f7qK1FPYPhK2f4Tt
IaTi/FiNrnGF9Pr4+9V9D/iTEsu8/SuVAknZgcZKOqmJHj4+/+i1+BWkLMJW
r8usO5BvsAnyD05B3gGrd4WSkeeOlpI3623mlKcd/jNfa5vDGVJWckD35m4j
Enw9WFFhlgufH/5qjUMIKbN6IHPn+kySXEA7mDdU8Xlxffck7NUynb1kuWTr
DrTylrFCYScDno+gbW/rTMMMGq4Gxp2nFRLXXBZusef5C7nNs8r4eScnqpWx
89qHuEj15+d9YXfAmZ93mJvFJ3beJw6ZurP4eTMSvi9l571/RNt5Njvv89Rh
fsP5eac2P1tMKpaMkjBYf1jL5rv599w7mnx++7rVY5+Q8sQ5j+Z5HaF+ttM9
95914vka8YunRZKQ2t0d3JONaOVxi/L2ktY8j8Zk3eKNEQ4PhxqvllrEr19l
3VV9fv0DK5KWsev/6rPSRJ1fv0m1uxu//ho3xTvkhVVu5wWlm/l6WQ967tjM
18mqC5XQFutuwjqcsP6ml1h3s2Udzp64/ibMFzeC+eN3xTqhsL6mWG8T19ls
WZfuLq5TJ9ana1n/zBbXQxProKVoDiudXr2b8rwJmW2bed5E2OmRFfSFVVbk
iCRvkjdjVrP6tjx+/UGGejo0zv6xTUxNPS0+3/RdJrgdz0PZkSjTjf3erPiN
u3ax3zurqvvGDnz/hyZ9F8D6nV6wnmehWMcT1u/E9TzFOp4pmupPDCc+Y9fj
8mTJmkH8ejKtPlmy8z5N6TB0Jz+v/eXr5vy8ng6yhew6c+rdpPL5+rFxa0dN
5uetqHe/R6MU7WWvZ5fQTPOuLlrWw/h3TzvpbAfiuixbppdVHntvmJd3/9A7
Uu061Fz39RR6T+7KnhUDHOnLmCXuEte1SL3dDOP+rdToswMbei0f1p9UDj64
yGp/Dim2cZw8qf0VcsVuX9Db9+mkWibIsFfjS1LYvdxisnUyuSfnl3zeNJK8
jFk+r67/fn4crdtHbtIrdlaf/YZMoGz/9TtD9/P9zWxG36Guy945Di/lzwW6
VrMmu/PrUZK8lArrGD0R6xq1rGe0lLDrOdBKYg2tHHygLvRCN349jzI7pbDf
FT9kRa4P+126JuqDJ/Hj9Jk4Xof9rut5PoHh7HctK5ZINOPXo9P7cRG7fqt1
Fury/PqNqx1/8esxebBqELtOh41tZY/x69QPPyXDt1uGhJqy3+V7K39BN/a7
lnZZNvIDP86qWdGz+fVITPOZyq7n4OyfctP49cy0afBmvyvz0cWIaez6530c
GGTFr2ddRV13cNIfg5ueIbz0lu9Jl+H7Ujh8V7oG/uc98D9ngf/ZAO/DxfB+
PA39PfDQQsBDGwwe2gZwu/yF4wV+1394WZXUeVZN/cUJl0nl091GVv73SLGM
jUzdgG/sec/+9Pxry/jzntLnKyl/8tfCc4uJ86zqkGDlAMr2N9AILeX7Kwzu
WQM+0U7wiuTBKboJ4x7GMO5xBMY93GDe5gWYt/lEzNu8c0H76Ym3b2iBo0OP
n5tZvVsZNtv59XfyqvZgj+mjcmiuYWjK5Pa3SHXW8t8zRhmSyF+hZrkh7PlC
Rl0vbIglKY0y/VkbR8mNXWOdT84YQSqVl9o/2XaMFEc11ww67Ur9Nm346O0S
QCr9NgySXpROirvZTtKwfU9peehPn8Y1LP7KL0n9PIwUn/+cOubqLhhXD24Z
V/f6iePq9FjN+Pihz07T2K17nls9W07qV6tG+7+2I3aPambsfdNIqkckqrZp
9ZEUFKn1vln5GMaf/WD8eQSMP6fTSr+Q8/prNYmf6W7Vnh0PsOuR7K1K2PO0
ssXKiwfk6A2rw23NK5XZ9WeMmvpbnpbLKHsrPn5No1qZ+EptDWO/d42OSeVS
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
kkCHqoIc1Suk+O7vog/BEf8PjiS2zg==
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 292.3980567983036},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{0, 2 Pi}, {0, 2 Pi}, {-0.9999999999998984, 
     1.4912573182857594`}}, {{0, 6.283185307179586}, {
     0, 6.283185307179586}, {-0.9999999999998984, 1.4912573182857594`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{0, 
      FormBox["0", TraditionalForm]}, {
      NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
      FormBox[
       FractionBox["\[Pi]", "2"], TraditionalForm]}, {
      NCache[Pi, 3.141592653589793], 
      FormBox["\[Pi]", TraditionalForm]}, {
      NCache[Rational[3, 2] Pi, 4.71238898038469], 
      FormBox[
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
      NCache[2 Pi, 6.283185307179586], 
      FormBox[
       RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, {{0, 
      FormBox["0", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}}},
  ViewPoint->{-2.0242606082122334`, -2.651531624470878, 0.5672292609439961},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.414107675200039*^9}]
}, Open  ]],

Cell["\<\
shows clearly that there are points on the (\[Beta], \[Gamma])-plane where \
the Bell inequality is violated. The violation appears to be maximal in the \
neighborhood of (\[Beta], \[Gamma]) = (\[Pi]/4, 3\[Pi]/4), where we have\
\>", "Text",
 CellChangeTimes->{{3.413660415287623*^9, 3.413660460189878*^9}, {
  3.413660899835988*^9, 3.413660973541954*^9}, {3.4136616121362343`*^9, 
  3.413661612542536*^9}, {3.414107734465773*^9, 3.414107740437393*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bell", "[", 
  RowBox[{
   RowBox[{"\[Pi]", "/", "4"}], ",", 
   RowBox[{"3", 
    RowBox[{"\[Pi]", "/", "4"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.41366071073216*^9, 3.413660745806095*^9}}],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{3.414107770662706*^9}]
}, Open  ]],

Cell["Let us therefore set", "Text",
 CellChangeTimes->{{3.413661062000198*^9, 3.413661067912674*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", "=", 
  RowBox[{"(", GridBox[{
     {"0"},
     {"0"},
     {"1"}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", 
  RowBox[{"(", GridBox[{
     {"0"},
     {
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", "/", "4"}], "]"}]},
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", "/", "4"}], "]"}]}
    }], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  RowBox[{"(", GridBox[{
     {"0"},
     {
      RowBox[{"Sin", "[", 
       RowBox[{"3", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]},
     {
      RowBox[{"Cos", "[", 
       RowBox[{"3", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}
    }], ")"}]}]}], "Input",
 CellChangeTimes->{{3.413661075853633*^9, 3.413661161060944*^9}, {
  3.4141078649258842`*^9, 3.4141078801165743`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414107984787829*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414107984876822*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414107984976643*^9}]
}, Open  ]],

Cell["which give", "Text",
 CellChangeTimes->{{3.4141080193356256`*^9, 3.414108020953047*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckA]", "=", 
   SubscriptBox["\[Sigma]", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckB]", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], 
     SubscriptBox["\[Sigma]", "2"]}], "+", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], 
     SubscriptBox["\[Sigma]", "3"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckC]", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], 
     SubscriptBox["\[Sigma]", "2"]}], "-", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], 
     SubscriptBox["\[Sigma]", "3"]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4136612092841063`*^9, 3.4136612705037403`*^9}, {
   3.4136613595337553`*^9, 3.413661366643668*^9}, {3.4136616594003763`*^9, 
   3.413661677786655*^9}, 3.4136793314689817`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[DoubleStruckA]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckB]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckC]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.413661277418606*^9, 3.413661305139017*^9}, {
  3.413661373015738*^9, 3.413661388013995*^9}, {3.413661683716405*^9, 
  3.413661692905943*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.414108047777203*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]]}]},
     {
      FractionBox["\[ImaginaryI]", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.414108047872805*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]]}]},
     {
      FractionBox["\[ImaginaryI]", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4141080479726763`*^9}]
}, Open  ]],

Cell["\<\
So that they can undertake collaborative work, we equip Alice with an A-meter \
and a C-meter\
\>", "Text",
 CellChangeTimes->{{3.414108115070098*^9, 3.414108145821578*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", "=", 
   RowBox[{
   "\[DoubleStruckA]", "\[CircleTimes]", "\[DoubleStruckCapitalI]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]", "=", 
   RowBox[{
   "\[DoubleStruckC]", "\[CircleTimes]", "\[DoubleStruckCapitalI]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4136624868873034`*^9, 3.413662592386759*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[DoubleStruckCapitalA]", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]", "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.413662610356258*^9, 3.413662629687973*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.414108183228868*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0", 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0", 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]]}]},
     {
      FractionBox["\[ImaginaryI]", 
       SqrtBox["2"]], "0", 
      FractionBox["1", 
       SqrtBox["2"]], "0"},
     {"0", 
      FractionBox["\[ImaginaryI]", 
       SqrtBox["2"]], "0", 
      FractionBox["1", 
       SqrtBox["2"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4141081833097353`*^9}]
}, Open  ]],

Cell["and we equip Bob with a B-meter and his own kind of C-meter", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalB]", "=", 
   RowBox[{
   "\[DoubleStruckCapitalI]", "\[CircleTimes]", "\[DoubleStruckB]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalB]", "=", 
   RowBox[{
   "\[DoubleStruckCapitalI]", "\[CircleTimes]", "\[DoubleStruckC]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.413662776427651*^9, 3.4136627970801153`*^9}, {
  3.4136665185556726`*^9, 3.413666548635545*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[DoubleStruckCapitalB]", "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalB]", "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.413662804819126*^9, 3.4136628110604258`*^9}, {
  3.41366656575597*^9, 3.413666572097809*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]]}], "0", "0"},
     {
      FractionBox["\[ImaginaryI]", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]]}]},
     {"0", "0", 
      FractionBox["\[ImaginaryI]", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.414108236027029*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]]}], "0", "0"},
     {
      FractionBox["\[ImaginaryI]", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], 
      RowBox[{"-", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]]}]},
     {"0", "0", 
      FractionBox["\[ImaginaryI]", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4141082361234493`*^9}]
}, Open  ]],

Cell["\<\
Those four 4\[Cross]4 matrices have identical spectra:\
\>", "Text",
 CellChangeTimes->{{3.4136666596812143`*^9, 3.413666678257195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", "\[DoubleStruckCapitalA]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", "\[DoubleStruckCapitalB]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", "\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]",
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", "\[DoubleStruckCapitalC]\[DoubleStruckCapitalB]",
   "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.413666428034243*^9, 3.4136664316888237`*^9}, {
  3.413666593897729*^9, 3.4136666314391003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.414108278822822*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.414108278943594*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.4141082790069923`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.4141082790562983`*^9}]
}, Open  ]],

Cell["\<\
We stand in need of their spectral resolutions; i.e., we need to be in \
position to write

\[DoubleStruckCapitalA] = \[DoubleStruckCapitalA]up - \[DoubleStruckCapitalA]dn
\[DoubleStruckCapitalB] = \[DoubleStruckCapitalB]up - \[DoubleStruckCapitalB]dn
\[DoubleStruckCapitalC]\[DoubleStruckCapitalA] = \[DoubleStruckCapitalC]\
\[DoubleStruckCapitalA]up - \[DoubleStruckCapitalC]\[DoubleStruckCapitalA]dn
\[DoubleStruckCapitalC]\[DoubleStruckCapitalB] = \[DoubleStruckCapitalC]\
\[DoubleStruckCapitalB]up - \[DoubleStruckCapitalC]\[DoubleStruckCapitalB]dn

where the matrices on the right comprise four sets of complete orthogonal \
projection matrices.\
\>", "Text",
 CellChangeTimes->{{3.413666693448159*^9, 3.413666724142536*^9}, {
  3.413666920221924*^9, 3.413667020131958*^9}, {3.414108427712777*^9, 
  3.4141084320803747`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4141084039485292`*^9}],

Cell["\<\
For the A-matrix this work has already been accomplished; we have \
\>", "Text",
 CellChangeTimes->{{3.413666398001979*^9, 3.413666399602605*^9}, {
  3.41366706436963*^9, 3.413667081304165*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[DoubleStruckCapitalA]up", "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalA]dn", "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", "1"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalA]", "==", 
  RowBox[{
  "\[DoubleStruckCapitalA]up", "-", "\[DoubleStruckCapitalA]dn"}]}]}], "Input",\

 CellChangeTimes->{{3.413662906356804*^9, 3.4136629554549313`*^9}, {
  3.4136630348534193`*^9, 3.413663037217759*^9}, {3.414108380629838*^9, 
  3.414108381332974*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4141083893113937`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414108389396126*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.414108389511458*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.41410841187498*^9}],

Cell["Turning now to the B-matrix, we use", "Text",
 CellChangeTimes->{{3.413667121605315*^9, 3.41366713006892*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "[", "\[DoubleStruckCapitalB]", "]"}]], "Input",
 CellChangeTimes->{{3.413663083088419*^9, 3.413663090570568*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]]}], ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]]}], ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.414108542735548*^9}]
}, Open  ]],

Cell["\<\
to construct orthonormal eigenvectors (presented here as complex column \
vectors):\
\>", "Text",
 CellChangeTimes->{{3.413667165963866*^9, 3.4136672197995253`*^9}, {
  3.4141085847203197`*^9, 3.41410858500996*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Bdn1", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             SqrtBox["2"]}], ")"}]}], 
          SqrtBox["2"]]}], ",", "1"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bdn2", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             SqrtBox["2"]}], ")"}]}], 
          SqrtBox["2"]]}], ",", "1", ",", "0", ",", "0"}], "}"}], "}"}], 
     "]"}], 
    SqrtBox[
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bup1", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SqrtBox["2"]}], ")"}]}], 
          SqrtBox["2"]]}], ",", "1"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bup2", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SqrtBox["2"]}], ")"}]}], 
          SqrtBox["2"]]}], ",", "1", ",", "0", ",", "0"}], "}"}], "}"}], 
     "]"}], 
    SqrtBox[
     RowBox[{"4", "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4136636102860537`*^9, 3.413663795246257*^9}, {
  3.413663882969666*^9, 3.41366388565737*^9}, {3.413663957100905*^9, 
  3.41366396008394*^9}, {3.413664061974176*^9, 3.4136641463076468`*^9}}],

Cell["I demonstrate that the vectors are normalized", "Text",
 CellChangeTimes->{{3.413667256771027*^9, 3.413667265044546*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "Bdn1", "]"}], "]"}], ".", "Bdn1"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "Bdn2", "]"}], "]"}], ".", "Bdn2"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "Bup1", "]"}], "]"}], ".", "Bup1"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "Bup2", "]"}], "]"}], ".", "Bup2"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.413663811601912*^9, 3.413663895467314*^9}, {
  3.4136639264534397`*^9, 3.413663948775608*^9}, {3.413667270921749*^9, 
  3.413667352885809*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.414108660580565*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.414108660650148*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.414108660752638*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.4141086608487473`*^9}]
}, Open  ]],

Cell["and that within the up/down subspaces they are orthogonal:", "Text",
 CellChangeTimes->{{3.413667372890759*^9, 3.41366740488383*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "Bup1", "]"}], "]"}], ".", "Bup2"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "Bdn1", "]"}], "]"}], ".", "Bdn2"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.4136674199806137`*^9, 3.4136674425092983`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.414108685575727*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.414108685666101*^9}]
}, Open  ]],

Cell["We are in position now to construct", "Text",
 CellChangeTimes->{{3.4136795222612333`*^9, 3.4136795275935097`*^9}, 
   3.413680627986588*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[DoubleStruckCapitalB]up", "=", 
  RowBox[{
   RowBox[{"Bup1", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "Bup1", "]"}], "]"}]}], "+", 
   RowBox[{"Bup2", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "Bup2", "]"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalB]dn", "=", 
  RowBox[{
   RowBox[{"Bdn1", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "Bdn1", "]"}], "]"}]}], "+", 
   RowBox[{"Bdn2", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "Bdn2", "]"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.413666283299047*^9, 3.4136662996353407`*^9}, {
  3.4136675046635103`*^9, 3.41366754893476*^9}, {3.413667587056087*^9, 
  3.413667592700014*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     FractionBox["1", 
      RowBox[{"4", "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     FractionBox["1", 
      RowBox[{"4", "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414108718225315*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     FractionBox["1", 
      RowBox[{"4", "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     FractionBox["1", 
      RowBox[{"4", "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4141087183257113`*^9}]
}, Open  ]],

Cell["I demonstrate that these are projection operators", "Text",
 CellChangeTimes->{{3.4136677548499727`*^9, 3.413667765149316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalB]up", ".", "\[DoubleStruckCapitalB]up"}], 
   "-", "\[DoubleStruckCapitalB]up"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalB]dn", ".", "\[DoubleStruckCapitalB]dn"}], 
   "-", "\[DoubleStruckCapitalB]dn"}], "//", "Simplify"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414108765072441*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414108765230654*^9}]
}, Open  ]],

Cell["that they are complete", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalB]up", "+", "\[DoubleStruckCapitalB]dn"}], "//",
   "Simplify"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414108799420966*^9}]
}, Open  ]],

Cell["\<\
and that they serve to resolve \[DoubleStruckCapitalB]:\
\>", "Text",
 CellChangeTimes->{{3.413667789419094*^9, 3.413667839104788*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalB]", "==", 
   RowBox[{"\[DoubleStruckCapitalB]up", "-", "\[DoubleStruckCapitalB]dn"}]}], 
  "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.413667715185421*^9, 3.413667742072563*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.414108824758873*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4141088632417316`*^9}],

Cell["Turning next to the CA-matrix, we use", "Text",
 CellChangeTimes->{{3.413667121605315*^9, 3.41366713006892*^9}, {
  3.4136796616197166`*^9, 3.4136796714472513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "[", "\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]",
   "]"}]], "Input",
 CellChangeTimes->{{3.413663083088419*^9, 3.413663090570568*^9}, {
  3.413679691264556*^9, 3.413679692888331*^9}, {3.4136798281926413`*^9, 
  3.413679830710209*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SqrtBox["2"]}], ")"}]}], 
        SqrtBox["2"]], ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SqrtBox["2"]}], ")"}]}], 
        SqrtBox["2"]], ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["2"]}], ")"}]}], 
        SqrtBox["2"]], ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["2"]}], ")"}]}], 
        SqrtBox["2"]], ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.41410889109371*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CAdn1", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]], ",", "0", ",", "1"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CAdn2", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]], ",", "0", ",", "1", ",", "0"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CAup1", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]], ",", "0", ",", "1"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CAup2", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]], ",", "0", ",", "1", ",", "0"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4136636102860537`*^9, 3.413663795246257*^9}, {
  3.413663882969666*^9, 3.41366388565737*^9}, {3.413663957100905*^9, 
  3.41366396008394*^9}, {3.413664061974176*^9, 3.4136641463076468`*^9}, {
  3.4136798432862263`*^9, 3.413679938089666*^9}, {3.4136800707220707`*^9, 
  3.413680136503089*^9}}],

Cell["\<\
\[LongDash]which could be shown as before to possess all the required nice \
properties\[LongDash]to construct\
\>", "Text",
 CellChangeTimes->{{3.414108962859352*^9, 3.414108995255506*^9}, {
  3.414109045993791*^9, 3.4141090512194147`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]up", "=", 
  RowBox[{
   RowBox[{"CAup1", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "CAup1", "]"}], "]"}]}], "+", 
   RowBox[{"CAup2", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "CAup2", "]"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]dn", "=", 
  RowBox[{
   RowBox[{"CAdn1", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "CAdn1", "]"}], "]"}]}], "+", 
   RowBox[{"CAdn2", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "CAdn2", "]"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.413666283299047*^9, 3.4136662996353407`*^9}, {
  3.4136675046635103`*^9, 3.41366754893476*^9}, {3.413667587056087*^9, 
  3.413667592700014*^9}, {3.41368032538056*^9, 3.4136803953704157`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", "0", ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", "0", ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"4", "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"4", "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414109016467278*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", "0", ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", "0", ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"4", "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", "0", ",", 
     FractionBox["1", 
      RowBox[{"4", "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4141090165816393`*^9}]
}, Open  ]],

Cell["\<\
(which again could be shown as before to possess all the required nice \
properties).\
\>", "Text",
 CellChangeTimes->{{3.414109081039988*^9, 3.41410910359184*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4141091188564577`*^9}],

Cell["Turning finally to the CB-matrix, we use", "Text",
 CellChangeTimes->{{3.413667121605315*^9, 3.41366713006892*^9}, {
  3.4136806757240133`*^9, 3.413680686100902*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "[", "\[DoubleStruckCapitalC]\[DoubleStruckCapitalB]",
   "]"}]], "Input",
 CellChangeTimes->{{3.413663083088419*^9, 3.413663090570568*^9}, {
  3.4136807052227983`*^9, 3.413680708086631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SqrtBox["2"]}], ")"}]}], 
        SqrtBox["2"]], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SqrtBox["2"]}], ")"}]}], 
        SqrtBox["2"]], ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["2"]}], ")"}]}], 
        SqrtBox["2"]], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["2"]}], ")"}]}], 
        SqrtBox["2"]], ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4141091427548647`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CBdn1", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]], ",", "1"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CBdn2", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]], ",", "1", ",", "0", ",", "0"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CBup1", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]], ",", "1"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CBup2", "=", 
   FractionBox[
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SqrtBox["2"]}], ")"}]}], 
         SqrtBox["2"]], ",", "1", ",", "0", ",", "0"}], "}"}], "}"}], "]"}], 
    SqrtBox[
     RowBox[{"4", "-", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]}]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4136636102860537`*^9, 3.413663795246257*^9}, {
  3.413663882969666*^9, 3.41366388565737*^9}, {3.413663957100905*^9, 
  3.41366396008394*^9}, {3.413664061974176*^9, 3.4136641463076468`*^9}, {
  3.413680750743738*^9, 3.413680827271543*^9}, {3.413681022081856*^9, 
  3.413681086167231*^9}}],

Cell["to construct", "Text",
 CellChangeTimes->{{3.41410918747031*^9, 3.414109189096983*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalB]up", "=", 
  RowBox[{
   RowBox[{"CBup1", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "CBup1", "]"}], "]"}]}], "+", 
   RowBox[{"CBup2", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "CBup2", "]"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalB]dn", "=", 
  RowBox[{
   RowBox[{"CBdn1", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "CBdn1", "]"}], "]"}]}], "+", 
   RowBox[{"CBdn2", ".", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"Transpose", "[", "CBdn2", "]"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.413666283299047*^9, 3.4136662996353407`*^9}, {
  3.4136675046635103`*^9, 3.41366754893476*^9}, {3.413667587056087*^9, 
  3.413667592700014*^9}, {3.4136811768125772`*^9, 3.413681224886859*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", 
     FractionBox["1", 
      RowBox[{"4", "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", 
     FractionBox["1", 
      RowBox[{"4", "-", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.41410920906628*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", 
     FractionBox["1", 
      RowBox[{"4", "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}]}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SqrtBox["2"]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ",", 
     FractionBox["1", 
      RowBox[{"4", "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414109209185706*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4141097764888487`*^9}],

Cell["\<\
Bell asks us to obtain data from experiments of three types, in which \
Alice/Bob are equipped in three different ways, of which the following figure \
provides graphic indication:\
\>", "Text",
 CellChangeTimes->{{3.413682322049672*^9, 3.4136824165051117`*^9}, {
   3.413682647338891*^9, 3.4136826768695097`*^9}, {3.413723353549996*^9, 
   3.4137233597560472`*^9}, {3.414109790026832*^9, 3.4141098053900642`*^9}, 
   3.4141112628254757`*^9, {3.4141112929963837`*^9, 3.414111316795486*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Pi]", "/", "4"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
       "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<a\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<b\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1.1", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Pi]", "/", "4"}], "]"}]}], ",", 
          RowBox[{"1.1", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Pi]", "/", "4"}], "]"}]}]}], "}"}]}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<First Set-up: Alice is \!\(\*
StyleBox[\"red\",
FontColor->RGBColor[1, 0, 0]]\), Bob is \!\(\*
StyleBox[\"blue\",
FontColor->RGBColor[0, 0, 1]]\)\>\"", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"3", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}]}], "}"}], 
         "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<a\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<c\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1.1", 
           RowBox[{"Cos", "[", 
            RowBox[{"3", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", 
          RowBox[{"1.1", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}]}], "}"}]}], "]"}], 
      "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Second Set-up\>\"", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"3", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", 
               RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}]}], "}"}], 
         "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Pi]", "/", "4"}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
       "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<c\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1.1", 
           RowBox[{"Cos", "[", 
            RowBox[{"3", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", 
          RowBox[{"1.1", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", 
             RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}]}], "}"}]}], "]"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<b\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1.1", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Pi]", "/", "4"}], "]"}]}], ",", 
          RowBox[{"1.1", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Pi]", "/", "4"}], "]"}]}]}], "}"}]}], "]"}], "]"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Third Set-up\>\"", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.413735249407115*^9, 3.413735249896122*^9}, {
   3.413735282672817*^9, 3.4137353549723043`*^9}, {3.4137353957702*^9, 
   3.413735410761649*^9}, {3.413735440846512*^9, 3.413735533826964*^9}, {
   3.413735565941998*^9, 3.413735573951519*^9}, {3.413735667676241*^9, 
   3.413735669897554*^9}, {3.413735845602079*^9, 3.4137359836805477`*^9}, {
   3.413736066195003*^9, 3.413736158993827*^9}, 3.414111359907607*^9, 
   3.4141114361250668`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Thickness[0.005], ArrowBox[{{0, 0}, {1, 0}}]}, 
   {RGBColor[0, 0, 1], Thickness[0.005], 
    ArrowBox[NCache[{{0, 0}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 
       0}, {0.7071067811865475, 0.7071067811865475}}]]}, 
   LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -0.5}, {0, 1.5}}], InsetBox[
    StyleBox["\<\"a\"\>",
     StripOnInput->False,
     FontSize->18], {1.1, 0}], InsetBox[
    StyleBox["\<\"b\"\>",
     StripOnInput->False,
     FontSize->18], {0.7778174593052023, 0.7778174593052023}]},
  PlotLabel->FormBox[
    StyleBox[
    "\"First Set-up: Alice is \
\\!\\(\\*\\nStyleBox[\\\"red\\\",\\nFontColor->RGBColor[1, 0, 0]]\\), Bob is \
\\!\\(\\*\\nStyleBox[\\\"blue\\\",\\nFontColor->RGBColor[0, 0, 1]]\\)\"", 
     FontFamily -> "Helvetica", FontSize -> 14, StripOnInput -> False], 
    TraditionalForm]]], "Output",
 CellChangeTimes->{3.4141113285264378`*^9, 3.4141113652630787`*^9, 
  3.414111440353795*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Thickness[0.005], ArrowBox[{{0, 0}, {1, 0}}]}, 
   {RGBColor[0, 0, 1], Thickness[0.005], 
    ArrowBox[NCache[{{0, 0}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 
       0}, {-0.7071067811865475, 0.7071067811865475}}]]}, 
   LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -0.5}, {0, 1.5}}], InsetBox[
    StyleBox["\<\"a\"\>",
     StripOnInput->False,
     FontSize->18], {1.1, 0}], InsetBox[
    StyleBox["\<\"c\"\>",
     StripOnInput->False,
     FontSize->18], {-0.7778174593052023, 0.7778174593052023}]},
  PlotLabel->FormBox[
    StyleBox[
    "\"Second Set-up\"", FontFamily -> "Helvetica", FontSize -> 14, 
     StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{3.4141113285264378`*^9, 3.4141113652630787`*^9, 
  3.414111440605815*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Thickness[0.005], 
    ArrowBox[NCache[{{0, 0}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 
       0}, {-0.7071067811865475, 0.7071067811865475}}]]}, 
   {RGBColor[0, 0, 1], Thickness[0.005], 
    ArrowBox[NCache[{{0, 0}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 
       0}, {0.7071067811865475, 0.7071067811865475}}]]}, 
   LineBox[{{-1.5, 0}, {1.5, 0}}], LineBox[{{0, -0.5}, {0, 1.5}}], InsetBox[
    StyleBox["\<\"c\"\>",
     StripOnInput->False,
     FontSize->18], {-0.7778174593052023, 0.7778174593052023}], InsetBox[
    StyleBox["\<\"b\"\>",
     StripOnInput->False,
     FontSize->18], {0.7778174593052023, 0.7778174593052023}]},
  PlotLabel->FormBox[
    StyleBox[
    "\"Third Set-up\"", FontFamily -> "Helvetica", FontSize -> 14, 
     StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{3.4141113285264378`*^9, 3.4141113652630787`*^9, 
  3.414111440762586*^9}]
}, Open  ]],

Cell[TextData[{
 "We must therefore adopt more flexible definitions of the probabilities ",
 StyleBox["p", "Input"],
 ", ",
 StyleBox["q", "Input"],
 " and ",
 StyleBox["r", "Input"],
 ". "
}], "Text"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"p", ",", "q", ",", "r"}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.41411034179381*^9, 3.4141103548403673`*^9}, {
  3.41411046451235*^9, 3.4141104673945713`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"aliceUP_", ",", "\[CapitalPsi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"aliceUP", ".", "\[CapitalPsi]"}], "]"}], ".", "aliceUP", ".", 
      "\[CapitalPsi]"}], ")"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", "[", 
   RowBox[{"aliceUP_", ",", "bobUP_", ",", "\[CapitalPsi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         TagBox["bobUP",
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ".", 
         FractionBox[
          RowBox[{"aliceUP", ".", "\[CapitalPsi]"}], 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Conjugate", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"aliceUP", ".", "\[CapitalPsi]"}], "]"}], "]"}], ".",
                "aliceUP", ".", "\[CapitalPsi]"}], ")"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]]}], "]"}],
        "]"}], ".", 
      TagBox["bobUP",
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      FractionBox[
       RowBox[{"aliceUP", ".", "\[CapitalPsi]"}], 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Conjugate", "[", 
             RowBox[{"Transpose", "[", 
              RowBox[{"aliceUP", ".", "\[CapitalPsi]"}], "]"}], "]"}], ".", 
            "aliceUP", ".", "\[CapitalPsi]"}], ")"}], "\[LeftDoubleBracket]", 
          "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]]]}], ")"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"aliceDN_", ",", "bobUP_", ",", "\[CapitalPsi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         TagBox["bobUP",
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], ".", 
         FractionBox[
          RowBox[{"aliceDN", ".", "\[CapitalPsi]"}], 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Conjugate", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"aliceDN", ".", "\[CapitalPsi]"}], "]"}], "]"}], ".",
                "aliceDN", ".", "\[CapitalPsi]"}], ")"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]]}], "]"}],
        "]"}], ".", 
      TagBox[
       TagBox["bobUP",
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]], ".", 
      FractionBox[
       RowBox[{"aliceDN", ".", "\[CapitalPsi]"}], 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Conjugate", "[", 
             RowBox[{"Transpose", "[", 
              RowBox[{"aliceDN", ".", "\[CapitalPsi]"}], "]"}], "]"}], ".", 
            "aliceDN", ".", "\[CapitalPsi]"}], ")"}], "\[LeftDoubleBracket]", 
          "1", "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]]]}], ")"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]}], "Input",
 CellChangeTimes->{{3.413682694898095*^9, 3.4136827965110607`*^9}, {
  3.4141098418787537`*^9, 3.414109862063833*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4141099679859133`*^9}],

Cell["\<\
Bell requires that in every case the input state be the singlet state\
\>", "Text",
 CellChangeTimes->{{3.413683487100999*^9, 3.4136835141970987`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["\[CapitalPsi]", "singlet"]], "Input",
 CellChangeTimes->{{3.4141100023364153`*^9, 3.414110004222135*^9}, {
  3.4141102822866983`*^9, 3.414110286560236*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", 
     SqrtBox["2"]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.414110011418112*^9, 3.41411029187335*^9}]
}, Open  ]],

Cell[TextData[{
 "which is more familiar to us as ",
 StyleBox["Bell4", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.413723399314086*^9, 3.413723408270494*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["First Bell set-up: Alice has A-meter, Bob has B-meter.", "Subsubtitle",
 CellChangeTimes->{{3.414110163175372*^9, 3.414110200988974*^9}, 
   3.414110568113933*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["p", "ab"], "=", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"\[DoubleStruckCapitalA]up", ",", 
     SubscriptBox["\[CapitalPsi]", "singlet"]}], "]"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["q", "ab"], "=", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{
    "\[DoubleStruckCapitalA]up", ",", "\[DoubleStruckCapitalB]up", ",", 
     SubscriptBox["\[CapitalPsi]", "singlet"]}], "]"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["r", "ab"], "=", 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{
    "\[DoubleStruckCapitalA]dn", ",", "\[DoubleStruckCapitalB]up", ",", 
     SubscriptBox["\[CapitalPsi]", "singlet"]}], "]"}], "//", 
   "N"}]}]}], "Input",
 CellChangeTimes->{{3.413683394888579*^9, 3.413683395272409*^9}, {
   3.4136834358791018`*^9, 3.413683456810977*^9}, 3.413683582320438*^9, {
   3.413684344495472*^9, 3.413684353543645*^9}, {3.413688143937639*^9, 
   3.413688182010569*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.414110230254236*^9, 3.4141102978740892`*^9, 
  3.4141104984219522`*^9}],

Cell[BoxData["0.14644660940672624`"], "Output",
 CellChangeTimes->{3.414110230254236*^9, 3.4141102978740892`*^9, 
  3.4141104985029087`*^9}],

Cell[BoxData["0.8535533905932736`"], "Output",
 CellChangeTimes->{3.414110230254236*^9, 3.4141102978740892`*^9, 
  3.41411049856982*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second Bell set-up: Alice has A-meter, Bob has C-meter.", "Subsubtitle",
 CellChangeTimes->{{3.414110554723557*^9, 3.414110555840579*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["p", "ac"], "=", 
  RowBox[{"p", "[", 
   RowBox[{"\[DoubleStruckCapitalA]up", ",", 
    SubscriptBox["\[CapitalPsi]", "singlet"]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["q", "ac"], "=", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{
    "\[DoubleStruckCapitalA]up", ",", 
     "\[DoubleStruckCapitalC]\[DoubleStruckCapitalB]up", ",", 
     SubscriptBox["\[CapitalPsi]", "singlet"]}], "]"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["r", "ac"], "=", 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{
    "\[DoubleStruckCapitalA]dn", ",", 
     "\[DoubleStruckCapitalC]\[DoubleStruckCapitalB]up", ",", 
     SubscriptBox["\[CapitalPsi]", "singlet"]}], "]"}], "//", 
   "N"}]}]}], "Input"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.414110594130406*^9}],

Cell[BoxData["0.853553390593274`"], "Output",
 CellChangeTimes->{3.414110594223249*^9}],

Cell[BoxData["0.1464466094067262`"], "Output",
 CellChangeTimes->{3.4141105943060703`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Third Bell set-up: Alice has C-meter, Bob has B-meter.", "Subsubtitle",
 CellChangeTimes->{{3.414110635601323*^9, 3.4141106470111523`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["p", "cb"], "=", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]up", ",", 
     SubscriptBox["\[CapitalPsi]", "singlet"]}], "]"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["q", "cb"], "=", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{
    "\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]up", ",", 
     "\[DoubleStruckCapitalB]up", ",", 
     SubscriptBox["\[CapitalPsi]", "singlet"]}], "]"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["r", "cb"], "=", 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{
    "\[DoubleStruckCapitalC]\[DoubleStruckCapitalA]dn", ",", 
     "\[DoubleStruckCapitalB]up", ",", 
     SubscriptBox["\[CapitalPsi]", "singlet"]}], "]"}], "//", 
   "N"}]}]}], "Input",
 CellChangeTimes->{{3.41368426110924*^9, 3.413684301784412*^9}, {
  3.41368826524349*^9, 3.413688282130679*^9}}],

Cell[BoxData["0.2500000000000001`"], "Output",
 CellChangeTimes->{3.414110663330737*^9}],

Cell[BoxData[
 RowBox[{"0.5000000000000002`", "\[InvisibleSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.414110663466708*^9}],

Cell[BoxData[
 RowBox[{"0.5000000000000001`", "\[InvisibleSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.4141106635242243`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " complains later about those  ",
 StyleBox["0.\[ImaginaryI] ", "Output"],
 "terms, which I therefore abandon:"
}], "Text",
 CellChangeTimes->{{3.413723451911374*^9, 3.413723527591667*^9}, {
  3.414110702736949*^9, 3.4141107044352207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["q", "cb"], "=", "0.5"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["r", "cb"], "=", "0.5"}]}], "Input",
 CellChangeTimes->{{3.4136888603856153`*^9, 3.413688888848776*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.414110721436879*^9}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.4141107215180883`*^9}]
}, Open  ]],

Cell[TextData[{
 "We adjust the definition of  ",
 StyleBox["BohmProtocol", "Input"],
 "  so that it can accept such information:"
}], "Text",
 CellChangeTimes->{{3.413688397701062*^9, 3.413688437060849*^9}, {
  3.413723611685412*^9, 3.413723614170549*^9}, {3.414110787691704*^9, 
  3.414110788380142*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BellProtocol", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "p_", ",", "q_", ",", "r_"}], 
   "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"0", "\[LessSlantEqual]", "x", "<", "p"}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"0", "\[LessSlantEqual]", "y", "<", "q"}], ",", "upup", ",", 
      RowBox[{"q", "\[LessSlantEqual]", "y", "\[LessSlantEqual]", "1"}], ",", 
      "updn"}], "]"}], ",", 
    RowBox[{"p", "\[LessSlantEqual]", "x", "\[LessSlantEqual]", "1"}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"0", "\[LessSlantEqual]", "z", "<", "r"}], ",", "dnup", ",", 
      RowBox[{"r", "\[LessSlantEqual]", "z", "\[LessSlantEqual]", "1"}], ",", 
      "dndn"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.413688065500147*^9, 3.413688098342498*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DataFromAB", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BellProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       SubscriptBox["p", "ab"], ",", 
       SubscriptBox["q", "ab"], ",", 
       SubscriptBox["r", "ab"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAB", ",", "upup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAB", ",", "updn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAB", ",", "dnup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Count", "[", 
   RowBox[{"DataFromAB", ",", "dndn"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DataFromAC", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BellProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       SubscriptBox["p", "ac"], ",", 
       SubscriptBox["q", "ac"], ",", 
       SubscriptBox["r", "ac"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAC", ",", "upup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAC", ",", "updn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAC", ",", "dnup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Count", "[", 
   RowBox[{"DataFromAC", ",", "dndn"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DataFromCB", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BellProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       SubscriptBox["p", "cb"], ",", 
       SubscriptBox["q", "cb"], ",", 
       SubscriptBox["r", "cb"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromCB", ",", "upup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromCB", ",", "updn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromCB", ",", "dnup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromCB", ",", "dndn"}], "]"}]}], "Input",
 CellChangeTimes->{{3.413688517424369*^9, 3.413688607699061*^9}, {
   3.4141108779429283`*^9, 3.414110905517712*^9}, 3.414112047317809*^9}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147781315124*^9}],

Cell[BoxData["40"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147781479227*^9}],

Cell[BoxData["41"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147781506811*^9}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147781526722*^9}],

Cell[BoxData["40"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147781629537*^9}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147781728105*^9}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147781787311*^9}],

Cell[BoxData["52"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147781837575*^9}],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.4141477818873863`*^9}],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.4141477819448147`*^9}],

Cell[BoxData["38"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147782016469*^9}],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{3.4141109198204937`*^9, 3.414147782072669*^9}]
}, Open  ]],

Cell[TextData[{
 "Bell asks us in each case to construct the ",
 StyleBox["averaged product of Alice/Bob's meter readings",
  FontVariations->{"Underline"->True}],
 ":"
}], "Text",
 CellChangeTimes->{{3.4137236581866493`*^9, 3.413723710739826*^9}, 
   3.413723839278137*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["P", "ab"], "=", 
  RowBox[{
   FractionBox["1", "100"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"DataFromAB", ",", "upup"}], "]"}], "+", 
     RowBox[{"Count", "[", 
      RowBox[{"DataFromAB", ",", "dndn"}], "]"}], "-", 
     RowBox[{"Count", "[", 
      RowBox[{"DataFromAB", ",", "updn"}], "]"}], "-", 
     RowBox[{"Count", "[", 
      RowBox[{"DataFromAB", ",", "dnup"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "ac"], "=", 
  RowBox[{
   FractionBox["1", "100"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"DataFromAC", ",", "upup"}], "]"}], "+", 
     RowBox[{"Count", "[", 
      RowBox[{"DataFromAC", ",", "dndn"}], "]"}], "-", 
     RowBox[{"Count", "[", 
      RowBox[{"DataFromAC", ",", "updn"}], "]"}], "-", 
     RowBox[{"Count", "[", 
      RowBox[{"DataFromAC", ",", "dnup"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "cb"], "=", 
  RowBox[{
   FractionBox["1", "100"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"DataFromCB", ",", "upup"}], "]"}], "+", 
     RowBox[{"Count", "[", 
      RowBox[{"DataFromCB", ",", "dndn"}], "]"}], "-", 
     RowBox[{"Count", "[", 
      RowBox[{"DataFromCB", ",", "updn"}], "]"}], "-", 
     RowBox[{"Count", "[", 
      RowBox[{"DataFromCB", ",", "dnup"}], "]"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.4136889255566263`*^9, 3.4136890514976482`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["31", "50"]}]], "Output",
 CellChangeTimes->{3.414110985811434*^9, 3.414147789038869*^9}],

Cell[BoxData[
 FractionBox["21", "25"]], "Output",
 CellChangeTimes->{3.414110985811434*^9, 3.414147789152684*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["3", "50"]}]], "Output",
 CellChangeTimes->{3.414110985811434*^9, 3.414147789219771*^9}]
}, Open  ]],

Cell[TextData[{
 "Bell\[LongDash]as stated previously\[LongDash]argues that if quantum events \
were accounted for by hidden variables then we would expect those averaged \
products to conform to the Bell inequality ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      SubscriptBox["P", "ab"], "-", 
      SubscriptBox["P", "ac"]}], "]"}], "-", 
    SubscriptBox["P", "cb"]}], "\[LessEqual]", "1"}]],
  CellChangeTimes->{{3.4136890704866047`*^9, 3.4136890853804207`*^9}, {
   3.4136892232020473`*^9, 3.4136892783045692`*^9}, {3.413723876924519*^9, 
   3.4137238955717487`*^9}}],
 ", but in fact the inequality is violated"
}], "Text",
 CellChangeTimes->{{3.414111659104414*^9, 3.414111669820278*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     SubscriptBox["P", "ab"], "-", 
     SubscriptBox["P", "ac"]}], "]"}], "-", 
   SubscriptBox["P", "cb"]}], "\[LessEqual]", "1"}]], "Input"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.4141477935542107`*^9}]
}, Open  ]],

Cell["\<\
and the violation appears\[LongDash]on the basis of this specific data set\
\[LongDash]to be major. For the meters Alice and Bob have been using we \
expected on theoretical grounds to have\
\>", "Text",
 CellChangeTimes->{{3.413724095348969*^9, 3.413724098251999*^9}, {
   3.4137241334900723`*^9, 3.413724196438468*^9}, {3.413725947706932*^9, 
   3.413725955548442*^9}, 3.4141117285842447`*^9, {3.414111841109714*^9, 
   3.414111864645132*^9}, {3.41411190015654*^9, 3.414111910788822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Bell", "[", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "4"}], ",", 
    RowBox[{"3", 
     RowBox[{"\[Pi]", "/", "4"}]}]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.41411191735469*^9, 3.414111917953741*^9}}],

Cell[BoxData["1.4142135623730951`"], "Output",
 CellChangeTimes->{3.4141119196204243`*^9, 3.414147802867899*^9}]
}, Open  ]],

Cell["and have, by quantum experiment, obtained", "Text",
 CellChangeTimes->{{3.414111945238195*^9, 3.4141119567091713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     SubscriptBox["P", "ab"], "-", 
     SubscriptBox["P", "ac"]}], "]"}], "-", 
   SubscriptBox["P", "cb"]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.414111967304862*^9, 3.414111968067718*^9}}],

Cell[BoxData["1.52`"], "Output",
 CellChangeTimes->{3.414111969725253*^9, 3.414147812013578*^9}]
}, Open  ]],

Cell["\<\
This, however, is an \"experimental\" result, and the question arises: is the \
violation of Bell's inequality statistically significant? One way to settle \
the issue is to return to the lab, run a longer series of measurements. Those \
we now perform with a single keystroke:\
\>", "Text",
 CellChangeTimes->{{3.413726192007935*^9, 3.413726262086936*^9}, {
  3.41411217553819*^9, 3.414112223269699*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DataFromAB", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BellProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       SubscriptBox["p", "ab"], ",", 
       SubscriptBox["q", "ab"], ",", 
       SubscriptBox["r", "ab"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAB", ",", "upup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAB", ",", "updn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAB", ",", "dnup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Count", "[", 
   RowBox[{"DataFromAB", ",", "dndn"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DataFromAC", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BellProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       SubscriptBox["p", "ac"], ",", 
       SubscriptBox["q", "ac"], ",", 
       SubscriptBox["r", "ac"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAC", ",", "upup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAC", ",", "updn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromAC", ",", "dnup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Count", "[", 
   RowBox[{"DataFromAC", ",", "dndn"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DataFromCB", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BellProtocol", "[", 
      RowBox[{
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       RowBox[{"Random", "[", "]"}], ",", 
       SubscriptBox["p", "cb"], ",", 
       SubscriptBox["q", "cb"], ",", 
       SubscriptBox["r", "cb"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromCB", ",", "upup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromCB", ",", "updn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromCB", ",", "dnup"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{"DataFromCB", ",", "dndn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "ab"], "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "1000"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"DataFromAB", ",", "upup"}], "]"}], "+", 
      RowBox[{"Count", "[", 
       RowBox[{"DataFromAB", ",", "dndn"}], "]"}], "-", 
      RowBox[{"Count", "[", 
       RowBox[{"DataFromAB", ",", "updn"}], "]"}], "-", 
      RowBox[{"Count", "[", 
       RowBox[{"DataFromAB", ",", "dnup"}], "]"}]}], ")"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "ac"], "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "1000"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"DataFromAC", ",", "upup"}], "]"}], "+", 
      RowBox[{"Count", "[", 
       RowBox[{"DataFromAC", ",", "dndn"}], "]"}], "-", 
      RowBox[{"Count", "[", 
       RowBox[{"DataFromAC", ",", "updn"}], "]"}], "-", 
      RowBox[{"Count", "[", 
       RowBox[{"DataFromAC", ",", "dnup"}], "]"}]}], ")"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["P", "cb"], "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "1000"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"DataFromCB", ",", "upup"}], "]"}], "+", 
      RowBox[{"Count", "[", 
       RowBox[{"DataFromCB", ",", "dndn"}], "]"}], "-", 
      RowBox[{"Count", "[", 
       RowBox[{"DataFromCB", ",", "updn"}], "]"}], "-", 
      RowBox[{"Count", "[", 
       RowBox[{"DataFromCB", ",", "dnup"}], "]"}]}], ")"}]}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     SubscriptBox["P", "ab"], "-", 
     SubscriptBox["P", "ac"]}], "]"}], "-", 
   SubscriptBox["P", "cb"]}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.413688517424369*^9, 3.413688607699061*^9}, {
  3.4141108779429283`*^9, 3.414110905517712*^9}, {3.414112047317809*^9, 
  3.4141121115808973`*^9}, {3.414112156488841*^9, 3.41411216028251*^9}}],

Cell[BoxData["75"], "Output",
 CellChangeTimes->{3.414112239893125*^9}],

Cell[BoxData["425"], "Output",
 CellChangeTimes->{3.414112239976807*^9}],

Cell[BoxData["431"], "Output",
 CellChangeTimes->{3.4141122399936943`*^9}],

Cell[BoxData["69"], "Output",
 CellChangeTimes->{3.414112240005286*^9}],

Cell[BoxData["440"], "Output",
 CellChangeTimes->{3.414112240129678*^9}],

Cell[BoxData["53"], "Output",
 CellChangeTimes->{3.4141122402050858`*^9}],

Cell[BoxData["71"], "Output",
 CellChangeTimes->{3.414112240254815*^9}],

Cell[BoxData["436"], "Output",
 CellChangeTimes->{3.4141122403042583`*^9}],

Cell[BoxData["133"], "Output",
 CellChangeTimes->{3.4141122403550253`*^9}],

Cell[BoxData["122"], "Output",
 CellChangeTimes->{3.414112240404443*^9}],

Cell[BoxData["369"], "Output",
 CellChangeTimes->{3.414112240454598*^9}],

Cell[BoxData["376"], "Output",
 CellChangeTimes->{3.414112240505418*^9}],

Cell[BoxData[
 RowBox[{"-", "0.712`"}]], "Output",
 CellChangeTimes->{3.41411224056849*^9}],

Cell[BoxData["0.752`"], "Output",
 CellChangeTimes->{3.414112240637713*^9}],

Cell[BoxData["0.018`"], "Output",
 CellChangeTimes->{3.414112240688405*^9}],

Cell[BoxData["1.446`"], "Output",
 CellChangeTimes->{3.414112240739169*^9}]
}, Open  ]],

Cell["The final figure has again to be compared with ", "Text",
 CellChangeTimes->{{3.41411227294667*^9, 3.4141122851462173`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], "//", "N"}]], "Input",
 CellChangeTimes->{{3.414112298816372*^9, 3.414112309295426*^9}}],

Cell[BoxData["1.4142135623730951`"], "Output",
 CellChangeTimes->{3.414112311128326*^9}]
}, Open  ]],

Cell[TextData[{
 "and is, in any event, convincingly greater than ",
 StyleBox["1.000", "Output"],
 ".\n\nThis experiment was first performed in a real live laboratory by Alain \
Aspect (1982)."
}], "Text",
 CellChangeTimes->{{3.414112349206761*^9, 3.414112365627655*^9}, {
  3.4141123958151627`*^9, 3.414112401997458*^9}, {3.414112585538437*^9, 
  3.414112620623513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Experimental Violation of Bell's Inequality\>\"", ",", 
   "\"\<http://en.wikipedia.org/wiki/Alain_Aspect\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.41411264818256*^9, 3.414112714974681*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{
    False->"\<\"Experimental Violation of Bell's Inequality\"\>", True->
    StyleBox["\<\"Experimental Violation of Bell's Inequality\"\>", 
     "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaselinePosition->Baseline,
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://en.wikipedia.org/wiki/Alain_Aspect"], None},
   ButtonNote->"http://en.wikipedia.org/wiki/Alain_Aspect"],
  Annotation[#, "http://en.wikipedia.org/wiki/Alain_Aspect", 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.414112720411907*^9}]
}, Open  ]],

Cell["\<\
Happily, Bell\[LongDash]though he died young\[LongDash]did live long enough \
to learn of Aspect's accomplishment.\
\>", "Text",
 CellChangeTimes->{{3.414112881068036*^9, 3.414112936132605*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<John Bell\>\"", ",", 
   "\"\<http://en.wikipedia.org/wiki/John_Stewart_Bell\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.414112940800144*^9, 3.41411297099184*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"\<\"John Bell\"\>", True->
    StyleBox["\<\"John Bell\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaselinePosition->Baseline,
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://en.wikipedia.org/wiki/John_Stewart_Bell"], None},
   ButtonNote->"http://en.wikipedia.org/wiki/John_Stewart_Bell"],
  Annotation[#, "http://en.wikipedia.org/wiki/John_Stewart_Bell", 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{3.414112976158226*^9}]
}, Open  ]],

Cell[TextData[{
 "Bell's \"no-go demonstration\" has been (very productively) criticised by \
people on the ground that it provides only ",
 StyleBox["statistical",
  FontSlant->"Italic"],
 " evidence that hidden variable theories of the sort contemplated by Bell \
cannot account for the essential elements of quantum statistics. But in that \
respect it is precisely responsive to von Neumann, for that is the point von \
Neumann's \"proof\" was devised to establish.  "
}], "Text",
 CellChangeTimes->{{3.41415257855162*^9, 3.414152727758636*^9}, {
  3.4141527769602013`*^9, 3.4141528771257343`*^9}, {3.416242776438266*^9, 
  3.416242776897422*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{920, 720},
WindowMargins->{{Automatic, 48}, {Automatic, 58}},
Magnification->1.25,
FrontEndVersion->"7.0 for Mac OS X PowerPC (32-bit) (November 11, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 115, 2, 33, "Input"],
Cell[685, 26, 144, 2, 33, "Output"]
}, Open  ]],
Cell[844, 31, 222, 6, 32, "Text"],
Cell[1069, 39, 110, 1, 32, "Text"],
Cell[1182, 42, 1074, 30, 72, "Input"],
Cell[2259, 74, 263, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[2547, 85, 646, 21, 73, "Input"],
Cell[3196, 108, 1689, 58, 131, "Output"]
}, Open  ]],
Cell[4900, 169, 336, 8, 51, "Text"],
Cell[CellGroupData[{
Cell[5261, 181, 127, 1, 154, "Title"],
Cell[5391, 184, 149, 5, 70, "Text"],
Cell[CellGroupData[{
Cell[5565, 193, 130, 2, 42, "Subsection"],
Cell[5698, 197, 444, 9, 51, "Text"],
Cell[6145, 208, 92, 1, 33, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6274, 214, 194, 4, 61, "Subsection"],
Cell[6471, 220, 273, 5, 32, "Text"],
Cell[6747, 227, 309, 6, 33, "Input"],
Cell[7059, 235, 445, 7, 70, "Text"],
Cell[7507, 244, 210, 4, 32, "Text"],
Cell[CellGroupData[{
Cell[7742, 252, 1692, 50, 167, "Input"],
Cell[9437, 304, 919, 25, 71, "Output"]
}, Open  ]],
Cell[10371, 332, 122, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[10518, 337, 411, 11, 33, "Input"],
Cell[10932, 350, 216, 3, 33, "Output"]
}, Open  ]],
Cell[11163, 356, 291, 5, 51, "Text"],
Cell[11457, 363, 300, 8, 33, "Input"],
Cell[CellGroupData[{
Cell[11782, 375, 151, 2, 33, "Input"],
Cell[11936, 379, 1608, 39, 71, "Output"]
}, Open  ]],
Cell[13559, 421, 177, 4, 32, "Text"],
Cell[CellGroupData[{
Cell[13761, 429, 275, 7, 33, "Input"],
Cell[14039, 438, 802, 21, 71, "Output"]
}, Open  ]],
Cell[14856, 462, 110, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[14991, 467, 184, 4, 33, "Input"],
Cell[15178, 473, 289, 5, 33, "Output"]
}, Open  ]],
Cell[15482, 481, 242, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[15749, 491, 237, 6, 33, "Input"],
Cell[15989, 499, 775, 21, 71, "Output"]
}, Open  ]],
Cell[16779, 523, 94, 1, 33, "Input"],
Cell[16876, 526, 429, 8, 51, "Text"],
Cell[17308, 536, 338, 10, 71, "Input"],
Cell[17649, 548, 706, 20, 32, "Text"],
Cell[18358, 570, 861, 26, 199, "Input"],
Cell[CellGroupData[{
Cell[19244, 600, 423, 13, 33, "Input"],
Cell[19670, 615, 222, 4, 33, "Output"]
}, Open  ]],
Cell[19907, 622, 91, 1, 33, "Input"],
Cell[20001, 625, 135, 3, 32, "Text"],
Cell[20139, 630, 664, 16, 72, "Text"],
Cell[20806, 648, 87, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[20918, 653, 1773, 50, 73, "Input"],
Cell[22694, 705, 253, 3, 33, "Output"],
Cell[22950, 710, 255, 3, 33, "Output"],
Cell[23208, 715, 253, 3, 33, "Output"]
}, Open  ]],
Cell[23476, 721, 90, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[23591, 726, 230, 6, 35, "Input"],
Cell[23824, 734, 180, 2, 33, "Output"]
}, Open  ]],
Cell[24019, 739, 188, 2, 32, "Text"],
Cell[24210, 743, 500, 19, 71, "Input"],
Cell[24713, 764, 418, 8, 51, "Text"],
Cell[25134, 774, 761, 20, 55, "Input"],
Cell[25898, 796, 151, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[26074, 803, 409, 10, 33, "Input"],
Cell[26486, 815, 785, 23, 33, "Output"]
}, Open  ]],
Cell[27286, 841, 178, 4, 32, "Text"],
Cell[27467, 847, 408, 11, 33, "Input"],
Cell[27878, 860, 112, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[28015, 865, 379, 8, 91, "Input"],
Cell[28397, 875, 239, 3, 33, "Output"],
Cell[28639, 880, 239, 3, 33, "Output"],
Cell[28881, 885, 240, 3, 33, "Output"]
}, Open  ]],
Cell[29136, 891, 334, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[29495, 901, 560, 13, 57, "Input"],
Cell[30058, 916, 330, 5, 33, "Output"]
}, Open  ]],
Cell[30403, 924, 444, 9, 51, "Text"],
Cell[CellGroupData[{
Cell[30872, 937, 389, 8, 72, "Input"],
Cell[31264, 947, 779, 20, 33, "Output"]
}, Open  ]],
Cell[32058, 970, 117, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[32200, 975, 883, 21, 93, "Input"],
Cell[33086, 998, 307, 5, 33, "Output"]
}, Open  ]],
Cell[33408, 1006, 245, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[33678, 1015, 635, 15, 33, "Input"],
Cell[34316, 1032, 323, 5, 33, "Output"]
}, Open  ]],
Cell[34654, 1040, 184, 4, 32, "Text"],
Cell[34841, 1046, 3102, 77, 168, "Input"],
Cell[CellGroupData[{
Cell[37968, 1127, 129, 3, 33, "Input"],
Cell[38100, 1132, 16691, 283, 329, "Output"]
}, Open  ]],
Cell[54806, 1418, 446, 8, 51, "Text"],
Cell[CellGroupData[{
Cell[55277, 1430, 5715, 161, 495, "Input"],
Cell[60995, 1593, 1161, 29, 71, "Output"],
Cell[62159, 1624, 333, 5, 33, "Output"],
Cell[62495, 1631, 333, 5, 33, "Output"],
Cell[62831, 1638, 334, 5, 33, "Output"],
Cell[63168, 1645, 317, 5, 33, "Output"],
Cell[63488, 1652, 317, 5, 33, "Output"],
Cell[63808, 1659, 316, 5, 33, "Output"],
Cell[64127, 1666, 320, 5, 33, "Output"],
Cell[64450, 1673, 333, 5, 33, "Output"],
Cell[64786, 1680, 333, 5, 33, "Output"],
Cell[65122, 1687, 20109, 339, 329, "Output"]
}, Open  ]],
Cell[85246, 2029, 182, 4, 32, "Text"],
Cell[85431, 2035, 87, 1, 53, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85555, 2041, 129, 1, 42, "Subsection"],
Cell[85687, 2044, 1677, 28, 164, "Text"],
Cell[87367, 2074, 563, 9, 70, "Text"],
Cell[CellGroupData[{
Cell[87955, 2087, 421, 15, 53, "Input"],
Cell[88379, 2104, 1036, 32, 91, "Output"]
}, Open  ]],
Cell[89430, 2139, 783, 23, 109, "Text"],
Cell[90216, 2164, 94, 1, 33, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90347, 2170, 139, 1, 32, "Subsubtitle"],
Cell[90489, 2173, 210, 5, 33, "Input"],
Cell[90702, 2180, 602, 13, 55, "Text"],
Cell[CellGroupData[{
Cell[91329, 2197, 2181, 66, 196, "Input"],
Cell[93513, 2265, 1089, 30, 91, "Output"]
}, Open  ]],
Cell[94617, 2298, 157, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[94799, 2305, 462, 12, 33, "Input"],
Cell[95264, 2319, 191, 3, 33, "Output"]
}, Open  ]],
Cell[95470, 2325, 87, 1, 53, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95594, 2331, 139, 1, 32, "Subsubtitle"],
Cell[95736, 2334, 766, 21, 51, "Text"],
Cell[96505, 2357, 1027, 34, 173, "Input"],
Cell[97535, 2393, 532, 17, 72, "Text"],
Cell[CellGroupData[{
Cell[98092, 2414, 582, 15, 53, "Input"],
Cell[98677, 2431, 946, 29, 55, "Output"]
}, Open  ]],
Cell[99638, 2463, 131, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[99794, 2468, 392, 9, 40, "Input"],
Cell[100189, 2479, 233, 6, 33, "Output"]
}, Open  ]],
Cell[100437, 2488, 559, 16, 89, "Text"],
Cell[100999, 2506, 208, 4, 32, "Text"],
Cell[101210, 2512, 244, 8, 53, "Input"],
Cell[101457, 2522, 384, 7, 51, "Text"],
Cell[101844, 2531, 409, 11, 53, "Input"],
Cell[102256, 2544, 86, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[102367, 2549, 238, 4, 53, "Input"],
Cell[102608, 2555, 792, 23, 91, "Output"],
Cell[103403, 2580, 792, 23, 91, "Output"]
}, Open  ]],
Cell[104210, 2606, 1013, 22, 70, "Text"],
Cell[CellGroupData[{
Cell[105248, 2632, 3053, 87, 355, "Input"],
Cell[108304, 2721, 512, 13, 33, "Output"],
Cell[108819, 2736, 510, 13, 33, "Output"],
Cell[109332, 2751, 510, 13, 33, "Output"],
Cell[109845, 2766, 510, 13, 33, "Output"]
}, Open  ]],
Cell[110370, 2782, 87, 1, 53, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110494, 2788, 111, 1, 32, "Subsubtitle"],
Cell[110608, 2791, 217, 4, 32, "Text"],
Cell[CellGroupData[{
Cell[110850, 2799, 9836, 274, 452, "Input"],
Cell[120689, 3075, 2435, 62, 420, "Output"]
}, Open  ]],
Cell[123139, 3140, 213, 5, 51, "Text"],
Cell[123355, 3147, 92, 1, 33, "Input"],
Cell[123450, 3150, 658, 17, 37, "Text"],
Cell[CellGroupData[{
Cell[124133, 3171, 691, 17, 33, "Input"],
Cell[124827, 3190, 140, 2, 33, "Output"]
}, Open  ]],
Cell[124982, 3195, 359, 6, 32, "Text"],
Cell[125344, 3203, 909, 23, 62, "Input"],
Cell[126256, 3228, 403, 9, 32, "Text"],
Cell[126662, 3239, 839, 22, 62, "Input"],
Cell[CellGroupData[{
Cell[127526, 3265, 333, 5, 53, "Input"],
Cell[127862, 3272, 986, 28, 91, "Output"],
Cell[128851, 3302, 908, 26, 91, "Output"]
}, Open  ]],
Cell[129774, 3331, 409, 14, 37, "Text"],
Cell[130186, 3347, 627, 16, 33, "Input"],
Cell[130816, 3365, 458, 14, 32, "Text"],
Cell[131277, 3381, 685, 17, 33, "Input"],
Cell[CellGroupData[{
Cell[131987, 3402, 125, 1, 53, "Input"],
Cell[132115, 3405, 111, 1, 33, "Output"],
Cell[132229, 3408, 113, 1, 33, "Output"]
}, Open  ]],
Cell[132357, 3412, 418, 10, 32, "Text"],
Cell[132778, 3424, 87, 1, 53, "Input"],
Cell[132868, 3427, 373, 7, 51, "Text"],
Cell[133244, 3436, 996, 23, 53, "Input"],
Cell[134243, 3461, 413, 7, 51, "Text"],
Cell[134659, 3470, 942, 20, 72, "Input"],
Cell[135604, 3492, 207, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[135836, 3501, 621, 14, 33, "Input"],
Cell[136460, 3517, 13988, 187, 1364, "Output"]
}, Open  ]],
Cell[150463, 3707, 87, 1, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150587, 3713, 149, 2, 40, "Subsubtitle"],
Cell[150739, 3717, 106, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[150870, 3722, 518, 10, 113, "Input"],
Cell[151391, 3734, 212, 3, 41, "Output"],
Cell[151606, 3739, 214, 3, 41, "Output"],
Cell[151823, 3744, 211, 3, 41, "Output"],
Cell[152037, 3749, 211, 3, 41, "Output"]
}, Open  ]],
Cell[152263, 3755, 131, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[152419, 3760, 478, 11, 66, "Input"],
Cell[152900, 3773, 170, 2, 41, "Output"]
}, Open  ]],
Cell[153085, 3778, 287, 9, 40, "Text"],
Cell[CellGroupData[{
Cell[153397, 3791, 1037, 31, 240, "Input"],
Cell[154437, 3824, 220, 4, 41, "Output"],
Cell[154660, 3830, 220, 4, 41, "Output"],
Cell[154883, 3836, 217, 4, 41, "Output"],
Cell[155103, 3842, 220, 4, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155360, 3851, 235, 6, 45, "Input"],
Cell[155598, 3859, 192, 3, 41, "Output"]
}, Open  ]],
Cell[155805, 3865, 378, 7, 63, "Text"],
Cell[CellGroupData[{
Cell[156208, 3876, 251, 6, 66, "Input"],
Cell[156462, 3884, 627, 15, 41, "Output"]
}, Open  ]],
Cell[157104, 3902, 94, 1, 40, "Text"],
Cell[157201, 3905, 802, 22, 87, "Input"],
Cell[158006, 3929, 254, 7, 40, "Text"],
Cell[158263, 3938, 1580, 50, 141, "Input"],
Cell[CellGroupData[{
Cell[159868, 3992, 222, 6, 50, "Input"],
Cell[160093, 4000, 157, 2, 41, "Output"]
}, Open  ]],
Cell[160265, 4005, 90, 1, 41, "Input"],
Cell[160358, 4008, 250, 5, 63, "Text"],
Cell[CellGroupData[{
Cell[160633, 4017, 6394, 193, 721, "Input"],
Cell[167030, 4212, 1037, 29, 110, "Output"],
Cell[168070, 4243, 90, 1, 41, "Output"],
Cell[168163, 4246, 470, 13, 41, "Output"],
Cell[168636, 4261, 369, 10, 41, "Output"],
Cell[169008, 4273, 87, 1, 41, "Output"],
Cell[169098, 4276, 90, 1, 41, "Output"],
Cell[169191, 4279, 77, 1, 41, "Output"],
Cell[169271, 4282, 75, 1, 41, "Output"],
Cell[169349, 4285, 74, 1, 41, "Output"],
Cell[169426, 4288, 75, 1, 41, "Output"],
Cell[169504, 4291, 108, 2, 41, "Output"]
}, Open  ]],
Cell[169627, 4296, 87, 1, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169751, 4302, 135, 1, 40, "Subsubtitle"],
Cell[169889, 4305, 252, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[170166, 4314, 2052, 61, 170, "Input"],
Cell[172221, 4377, 1085, 28, 110, "Output"],
Cell[173309, 4407, 114, 1, 41, "Output"]
}, Open  ]],
Cell[173438, 4411, 219, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[173682, 4419, 5942, 177, 676, "Input"],
Cell[179627, 4598, 1250, 30, 110, "Output"],
Cell[180880, 4630, 287, 4, 41, "Output"],
Cell[181170, 4636, 672, 14, 41, "Output"],
Cell[181845, 4652, 587, 13, 41, "Output"],
Cell[182435, 4667, 285, 4, 41, "Output"],
Cell[182723, 4673, 286, 4, 41, "Output"],
Cell[183012, 4679, 275, 4, 41, "Output"],
Cell[183290, 4685, 271, 4, 41, "Output"],
Cell[183564, 4691, 273, 4, 41, "Output"],
Cell[183840, 4697, 273, 4, 41, "Output"],
Cell[184116, 4703, 287, 4, 41, "Output"]
}, Open  ]],
Cell[184418, 4710, 423, 7, 87, "Text"],
Cell[184844, 4719, 89, 1, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184970, 4725, 237, 5, 40, "Subsubtitle"],
Cell[185210, 4732, 1049, 24, 115, "Text"],
Cell[186262, 4758, 335, 13, 113, "Input"],
Cell[186600, 4773, 126, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[186751, 4778, 901, 27, 263, "Input"],
Cell[187655, 4807, 309, 11, 73, "Output"],
Cell[187967, 4820, 329, 12, 73, "Output"],
Cell[188299, 4834, 307, 11, 73, "Output"],
Cell[188609, 4847, 329, 12, 73, "Output"]
}, Open  ]],
Cell[188953, 4862, 647, 11, 133, "Text"],
Cell[CellGroupData[{
Cell[189625, 4877, 4355, 129, 571, "Input"],
Cell[193983, 5008, 410, 13, 73, "Output"],
Cell[194396, 5023, 193, 4, 66, "Output"],
Cell[194592, 5029, 334, 9, 41, "Output"],
Cell[194929, 5040, 334, 9, 41, "Output"],
Cell[195266, 5051, 175, 3, 41, "Output"],
Cell[195444, 5056, 173, 3, 41, "Output"],
Cell[195620, 5061, 178, 3, 41, "Output"],
Cell[195801, 5066, 177, 3, 41, "Output"],
Cell[195981, 5071, 175, 3, 41, "Output"],
Cell[196159, 5076, 178, 3, 41, "Output"],
Cell[196340, 5081, 177, 3, 41, "Output"]
}, Open  ]],
Cell[196532, 5087, 805, 23, 87, "Text"],
Cell[CellGroupData[{
Cell[197362, 5114, 4378, 129, 571, "Input"],
Cell[201743, 5245, 329, 12, 73, "Output"],
Cell[202075, 5259, 92, 2, 66, "Output"],
Cell[202170, 5263, 231, 7, 41, "Output"],
Cell[202404, 5272, 251, 8, 41, "Output"],
Cell[202658, 5282, 70, 1, 41, "Output"],
Cell[202731, 5285, 70, 1, 41, "Output"],
Cell[202804, 5288, 74, 1, 41, "Output"],
Cell[202881, 5291, 72, 1, 41, "Output"],
Cell[202956, 5294, 72, 1, 41, "Output"],
Cell[203031, 5297, 74, 1, 41, "Output"],
Cell[203108, 5300, 74, 1, 41, "Output"]
}, Open  ]],
Cell[203197, 5304, 207, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[203429, 5314, 4380, 129, 571, "Input"],
Cell[207812, 5445, 307, 11, 73, "Output"],
Cell[208122, 5458, 90, 2, 66, "Output"],
Cell[208215, 5462, 231, 7, 41, "Output"],
Cell[208449, 5471, 233, 7, 41, "Output"],
Cell[208685, 5480, 70, 1, 41, "Output"],
Cell[208758, 5483, 70, 1, 41, "Output"],
Cell[208831, 5486, 70, 1, 41, "Output"],
Cell[208904, 5489, 75, 1, 41, "Output"],
Cell[208982, 5492, 75, 1, 41, "Output"],
Cell[209060, 5495, 72, 1, 41, "Output"],
Cell[209135, 5498, 91, 2, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209263, 5505, 4378, 129, 571, "Input"],
Cell[213644, 5636, 329, 12, 73, "Output"],
Cell[213976, 5650, 90, 2, 66, "Output"],
Cell[214069, 5654, 231, 7, 41, "Output"],
Cell[214303, 5663, 251, 8, 41, "Output"],
Cell[214557, 5673, 70, 1, 41, "Output"],
Cell[214630, 5676, 70, 1, 41, "Output"],
Cell[214703, 5679, 72, 1, 41, "Output"],
Cell[214778, 5682, 76, 1, 41, "Output"],
Cell[214857, 5685, 74, 1, 41, "Output"],
Cell[214934, 5688, 72, 1, 41, "Output"],
Cell[215009, 5691, 89, 2, 41, "Output"]
}, Open  ]],
Cell[215113, 5696, 270, 7, 40, "Text"],
Cell[215386, 5705, 1197, 21, 157, "Text"],
Cell[216586, 5728, 87, 1, 66, "Input"],
Cell[CellGroupData[{
Cell[216698, 5733, 136, 1, 52, "Subsection"],
Cell[216837, 5736, 1188, 18, 157, "Text"],
Cell[218028, 5756, 576, 12, 87, "Text"],
Cell[218607, 5770, 768, 31, 88, "Input"],
Cell[219378, 5803, 890, 19, 87, "Text"],
Cell[220271, 5824, 557, 14, 41, "Input"],
Cell[220831, 5840, 632, 13, 63, "Text"],
Cell[CellGroupData[{
Cell[221488, 5857, 422, 15, 110, "Input"],
Cell[221913, 5874, 351, 12, 73, "Output"]
}, Open  ]],
Cell[222279, 5889, 204, 4, 40, "Text"],
Cell[222486, 5895, 209, 6, 41, "Input"],
Cell[222698, 5903, 198, 4, 40, "Text"],
Cell[222899, 5909, 289, 8, 41, "Input"],
Cell[223191, 5919, 273, 5, 40, "Text"],
Cell[223467, 5926, 261, 5, 66, "Input"],
Cell[223731, 5933, 89, 1, 40, "Text"],
Cell[223823, 5936, 125, 3, 41, "Input"],
Cell[223951, 5941, 140, 1, 40, "Text"],
Cell[224094, 5944, 347, 10, 41, "Input"],
Cell[224444, 5956, 100, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[224569, 5961, 1092, 30, 66, "Input"],
Cell[225664, 5993, 133575, 2190, 480, "Output"]
}, Open  ]],
Cell[359254, 8186, 463, 7, 63, "Text"],
Cell[CellGroupData[{
Cell[359742, 8197, 221, 6, 41, "Input"],
Cell[359966, 8205, 81, 2, 47, "Output"]
}, Open  ]],
Cell[360062, 8210, 102, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[360189, 8215, 795, 30, 243, "Input"],
Cell[360987, 8247, 197, 6, 41, "Output"],
Cell[361187, 8255, 273, 10, 73, "Output"],
Cell[361463, 8267, 295, 11, 73, "Output"]
}, Open  ]],
Cell[361773, 8281, 94, 1, 40, "Text"],
Cell[361870, 8284, 894, 28, 168, "Input"],
Cell[CellGroupData[{
Cell[362789, 8316, 390, 6, 90, "Input"],
Cell[363182, 8324, 647, 19, 65, "Output"],
Cell[363832, 8345, 865, 28, 97, "Output"],
Cell[364700, 8375, 867, 28, 97, "Output"]
}, Open  ]],
Cell[365582, 8406, 183, 4, 40, "Text"],
Cell[365768, 8412, 434, 11, 66, "Input"],
Cell[CellGroupData[{
Cell[366227, 8427, 260, 5, 66, "Input"],
Cell[366490, 8434, 743, 22, 110, "Output"],
Cell[367236, 8458, 1181, 40, 175, "Output"]
}, Open  ]],
Cell[368432, 8501, 75, 0, 40, "Text"],
Cell[368510, 8503, 485, 12, 66, "Input"],
Cell[CellGroupData[{
Cell[369020, 8519, 310, 6, 66, "Input"],
Cell[369333, 8527, 1179, 40, 175, "Output"],
Cell[370515, 8569, 1181, 40, 175, "Output"]
}, Open  ]],
Cell[371711, 8612, 146, 3, 40, "Text"],
Cell[CellGroupData[{
Cell[371882, 8619, 549, 10, 137, "Input"],
Cell[372434, 8631, 173, 5, 41, "Output"],
Cell[372610, 8638, 173, 5, 41, "Output"],
Cell[372786, 8645, 175, 5, 41, "Output"],
Cell[372964, 8652, 175, 5, 41, "Output"]
}, Open  ]],
Cell[373154, 8660, 841, 16, 205, "Text"],
Cell[373998, 8678, 89, 1, 66, "Input"],
Cell[374090, 8681, 204, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[374319, 8689, 1762, 47, 246, "Input"],
Cell[376084, 8738, 413, 11, 41, "Output"],
Cell[376500, 8751, 411, 11, 41, "Output"],
Cell[376914, 8764, 73, 1, 41, "Output"]
}, Open  ]],
Cell[377002, 8768, 86, 1, 66, "Input"],
Cell[377091, 8771, 116, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[377232, 8776, 152, 2, 41, "Input"],
Cell[377387, 8780, 1430, 48, 153, "Output"]
}, Open  ]],
Cell[378832, 8831, 225, 5, 40, "Text"],
Cell[379060, 8838, 2359, 79, 458, "Input"],
Cell[381422, 8919, 127, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[381574, 8924, 1539, 43, 113, "Input"],
Cell[383116, 8969, 70, 1, 41, "Output"],
Cell[383189, 8972, 70, 1, 41, "Output"],
Cell[383262, 8975, 70, 1, 41, "Output"],
Cell[383335, 8978, 72, 1, 41, "Output"]
}, Open  ]],
Cell[383422, 8982, 139, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[383586, 8987, 757, 21, 66, "Input"],
Cell[384346, 9010, 70, 1, 41, "Output"],
Cell[384419, 9013, 70, 1, 41, "Output"]
}, Open  ]],
Cell[384504, 9017, 147, 2, 40, "Text"],
Cell[CellGroupData[{
Cell[384676, 9023, 796, 20, 66, "Input"],
Cell[385475, 9045, 2353, 85, 171, "Output"],
Cell[387831, 9132, 2507, 91, 171, "Output"]
}, Open  ]],
Cell[390353, 9226, 133, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[390511, 9231, 366, 9, 66, "Input"],
Cell[390880, 9242, 411, 11, 41, "Output"],
Cell[391294, 9255, 411, 11, 41, "Output"]
}, Open  ]],
Cell[391720, 9269, 38, 0, 40, "Text"],
Cell[CellGroupData[{
Cell[391783, 9273, 131, 3, 41, "Input"],
Cell[391917, 9278, 411, 11, 41, "Output"]
}, Open  ]],
Cell[392343, 9292, 145, 3, 40, "Text"],
Cell[CellGroupData[{
Cell[392513, 9299, 244, 5, 41, "Input"],
Cell[392760, 9306, 73, 1, 41, "Output"]
}, Open  ]],
Cell[392848, 9310, 89, 1, 66, "Input"],
Cell[392940, 9313, 171, 2, 40, "Text"],
Cell[CellGroupData[{
Cell[393136, 9319, 278, 5, 41, "Input"],
Cell[393417, 9326, 1311, 44, 153, "Output"]
}, Open  ]],
Cell[394743, 9373, 2331, 75, 458, "Input"],
Cell[397077, 9450, 251, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[397353, 9459, 897, 20, 66, "Input"],
Cell[398253, 9481, 2505, 91, 167, "Output"],
Cell[400761, 9574, 2355, 85, 167, "Output"]
}, Open  ]],
Cell[403131, 9662, 174, 4, 40, "Text"],
Cell[403308, 9668, 89, 1, 66, "Input"],
Cell[403400, 9671, 172, 2, 40, "Text"],
Cell[CellGroupData[{
Cell[403597, 9677, 229, 4, 41, "Input"],
Cell[403829, 9683, 1314, 44, 153, "Output"]
}, Open  ]],
Cell[405158, 9730, 2327, 75, 458, "Input"],
Cell[407488, 9807, 93, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[407606, 9812, 898, 20, 66, "Input"],
Cell[408507, 9834, 2504, 91, 171, "Output"],
Cell[411014, 9927, 2353, 85, 171, "Output"]
}, Open  ]],
Cell[413382, 10015, 89, 1, 66, "Input"],
Cell[413474, 10018, 500, 8, 63, "Text"],
Cell[CellGroupData[{
Cell[413999, 10030, 9814, 275, 612, "Input"],
Cell[423816, 10307, 983, 21, 432, "Output"],
Cell[424802, 10330, 821, 18, 432, "Output"],
Cell[425626, 10350, 957, 20, 432, "Output"]
}, Open  ]],
Cell[426598, 10373, 201, 8, 40, "Text"],
Cell[426802, 10383, 213, 4, 41, "Input"],
Cell[427018, 10389, 4005, 107, 361, "Input"],
Cell[431026, 10498, 89, 1, 66, "Input"],
Cell[431118, 10501, 161, 3, 40, "Text"],
Cell[CellGroupData[{
Cell[431304, 10508, 185, 3, 45, "Input"],
Cell[431492, 10513, 350, 12, 73, "Output"]
}, Open  ]],
Cell[431857, 10528, 164, 5, 40, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[432070, 10539, 169, 2, 40, "Subsubtitle"],
Cell[CellGroupData[{
Cell[432264, 10545, 985, 27, 110, "Input"],
Cell[433252, 10574, 124, 2, 41, "Output"],
Cell[433379, 10578, 140, 2, 41, "Output"],
Cell[433522, 10582, 136, 2, 41, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[433707, 10590, 144, 1, 40, "Subsubtitle"],
Cell[CellGroupData[{
Cell[433876, 10595, 776, 24, 110, "Input"],
Cell[434655, 10621, 90, 2, 66, "Output"],
Cell[434748, 10625, 87, 1, 41, "Output"],
Cell[434838, 10628, 90, 1, 41, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[434977, 10635, 145, 1, 40, "Subsubtitle"],
Cell[CellGroupData[{
Cell[435147, 10640, 939, 27, 110, "Input"],
Cell[436089, 10669, 88, 1, 41, "Output"],
Cell[436180, 10672, 168, 3, 41, "Output"],
Cell[436351, 10677, 170, 3, 41, "Output"]
}, Open  ]],
Cell[436536, 10683, 306, 8, 40, "Text"],
Cell[CellGroupData[{
Cell[436867, 10695, 219, 5, 66, "Input"],
Cell[437089, 10702, 73, 1, 41, "Output"],
Cell[437165, 10705, 75, 1, 41, "Output"]
}, Open  ]],
Cell[437255, 10709, 306, 7, 40, "Text"],
Cell[437564, 10718, 853, 19, 90, "Input"],
Cell[CellGroupData[{
Cell[438442, 10741, 2834, 75, 493, "Input"],
Cell[441279, 10818, 95, 1, 41, "Output"],
Cell[441377, 10821, 95, 1, 41, "Output"],
Cell[441475, 10824, 95, 1, 41, "Output"],
Cell[441573, 10827, 94, 1, 41, "Output"],
Cell[441670, 10830, 95, 1, 41, "Output"],
Cell[441768, 10833, 94, 1, 41, "Output"],
Cell[441865, 10836, 94, 1, 41, "Output"],
Cell[441962, 10839, 95, 1, 41, "Output"],
Cell[442060, 10842, 97, 1, 41, "Output"],
Cell[442160, 10845, 97, 1, 41, "Output"],
Cell[442260, 10848, 95, 1, 41, "Output"],
Cell[442358, 10851, 95, 1, 41, "Output"]
}, Open  ]],
Cell[442468, 10855, 274, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[442767, 10866, 1521, 45, 326, "Input"],
Cell[444291, 10913, 132, 3, 67, "Output"],
Cell[444426, 10918, 114, 2, 67, "Output"],
Cell[444543, 10922, 131, 3, 67, "Output"]
}, Open  ]],
Cell[444689, 10928, 733, 17, 63, "Text"],
Cell[CellGroupData[{
Cell[445447, 10949, 215, 7, 41, "Input"],
Cell[445665, 10958, 76, 1, 41, "Output"]
}, Open  ]],
Cell[445756, 10962, 500, 8, 63, "Text"],
Cell[CellGroupData[{
Cell[446281, 10974, 249, 7, 41, "Input"],
Cell[446533, 10983, 112, 1, 41, "Output"]
}, Open  ]],
Cell[446660, 10987, 125, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[446810, 10992, 271, 8, 41, "Input"],
Cell[447084, 11002, 96, 1, 41, "Output"]
}, Open  ]],
Cell[447195, 11006, 415, 7, 63, "Text"],
Cell[CellGroupData[{
Cell[447635, 11017, 4679, 131, 825, "Input"],
Cell[452317, 11150, 71, 1, 41, "Output"],
Cell[452391, 11153, 72, 1, 41, "Output"],
Cell[452466, 11156, 74, 1, 41, "Output"],
Cell[452543, 11159, 71, 1, 41, "Output"],
Cell[452617, 11162, 72, 1, 41, "Output"],
Cell[452692, 11165, 73, 1, 41, "Output"],
Cell[452768, 11168, 71, 1, 41, "Output"],
Cell[452842, 11171, 74, 1, 41, "Output"],
Cell[452919, 11174, 74, 1, 41, "Output"],
Cell[452996, 11177, 72, 1, 41, "Output"],
Cell[453071, 11180, 72, 1, 41, "Output"],
Cell[453146, 11183, 72, 1, 41, "Output"],
Cell[453221, 11186, 91, 2, 41, "Output"],
Cell[453315, 11190, 75, 1, 41, "Output"],
Cell[453393, 11193, 75, 1, 41, "Output"],
Cell[453471, 11196, 75, 1, 41, "Output"]
}, Open  ]],
Cell[453561, 11200, 130, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[453716, 11205, 128, 3, 50, "Input"],
Cell[453847, 11210, 88, 1, 41, "Output"]
}, Open  ]],
Cell[453950, 11214, 372, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[454347, 11226, 255, 5, 66, "Input"],
Cell[454605, 11233, 648, 17, 41, "Output"]
}, Open  ]],
Cell[455268, 11253, 204, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[455497, 11261, 228, 6, 41, "Input"],
Cell[455728, 11269, 584, 15, 41, "Output"]
}, Open  ]],
Cell[456327, 11287, 651, 12, 111, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
